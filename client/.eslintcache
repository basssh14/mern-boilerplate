[{"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\index.js":"1","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\App.js":"2","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\store.js":"3","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\utils\\setAuthToken.js":"4","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\auth.js":"5","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\routing\\PrivateRoute.jsx":"6","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\UserSide.jsx":"7","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\LandingLogin.jsx":"8","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\routing\\AdminRoute.jsx":"9","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ParentsST.jsx":"10","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\LandingRegister.jsx":"11","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\BankSt.jsx":"12","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\UserPassword.jsx":"13","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ApplicantsSt.jsx":"14","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\LoginS.jsx":"15","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Students.jsx":"16","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ScholarshipsST.jsx":"17","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\AdminPass.jsx":"18","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Applications.jsx":"19","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Options.jsx":"20","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Payments.jsx":"21","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Pay.jsx":"22","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\NewAdminUser.jsx":"23","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\Alert.jsx":"24","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\types.js":"25","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\alert.js":"26","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\parents.js":"27","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\banks.js":"28","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\aplicants.js":"29","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\scholarships.js":"30","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Spinner.jsx":"31","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\HeaderUser.jsx":"32","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\LoginNav.jsx":"33","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ParentPopUp.jsx":"34","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\BankPopUp.jsx":"35","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\Header.jsx":"36","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ScholarshipPopUp.jsx":"37","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ApplicantsPopUp.jsx":"38","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\index.js":"39","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\auth.js":"40","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\alert.js":"41","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\banks.js":"42","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\parents.js":"43","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\aplicants.js":"44","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\scholarships.js":"45","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\students.js":"46","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\students.js":"47","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\scholarshipsAdmin.js":"48","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\scholarshipsAdmin.js":"49","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\StudentReportsAdmin.jsx":"50","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\StudentsInfoAdmin.jsx":"51","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\payments.js":"52","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\scholarshipsInfo.js":"53","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\payments.js":"54","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\fullScho.js":"55","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\fullScho.js":"56","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\options.js":"57","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\options.js":"58"},{"size":198,"mtime":1629822508780,"results":"59","hashOfConfig":"60"},{"size":3227,"mtime":1630443964550,"results":"61","hashOfConfig":"60"},{"size":379,"mtime":1630421333420,"results":"62","hashOfConfig":"60"},{"size":255,"mtime":1630428093560,"results":"63","hashOfConfig":"60"},{"size":3369,"mtime":1630447771820,"results":"64","hashOfConfig":"60"},{"size":970,"mtime":1630445077680,"results":"65","hashOfConfig":"60"},{"size":686,"mtime":1629992370220,"results":"66","hashOfConfig":"60"},{"size":6837,"mtime":1630444846060,"results":"67","hashOfConfig":"60"},{"size":962,"mtime":1630445278610,"results":"68","hashOfConfig":"60"},{"size":43261,"mtime":1632719889082,"results":"69","hashOfConfig":"60"},{"size":8258,"mtime":1630445445290,"results":"70","hashOfConfig":"60"},{"size":26885,"mtime":1634016334426,"results":"71","hashOfConfig":"60"},{"size":6014,"mtime":1630007038270,"results":"72","hashOfConfig":"60"},{"size":34683,"mtime":1631503552080,"results":"73","hashOfConfig":"60"},{"size":9013,"mtime":1630006581640,"results":"74","hashOfConfig":"60"},{"size":34858,"mtime":1634018430425,"results":"75","hashOfConfig":"60"},{"size":53290,"mtime":1634017976923,"results":"76","hashOfConfig":"60"},{"size":5993,"mtime":1630006664740,"results":"77","hashOfConfig":"60"},{"size":115342,"mtime":1634019400319,"results":"78","hashOfConfig":"60"},{"size":4175,"mtime":1634013286604,"results":"79","hashOfConfig":"60"},{"size":24024,"mtime":1633850345795,"results":"80","hashOfConfig":"60"},{"size":26621,"mtime":1634019988485,"results":"81","hashOfConfig":"60"},{"size":8273,"mtime":1630448004430,"results":"82","hashOfConfig":"60"},{"size":939,"mtime":1630732763240,"results":"83","hashOfConfig":"60"},{"size":2531,"mtime":1634008627957,"results":"84","hashOfConfig":"60"},{"size":387,"mtime":1633850915553,"results":"85","hashOfConfig":"60"},{"size":4199,"mtime":1630736504370,"results":"86","hashOfConfig":"60"},{"size":2035,"mtime":1630975668120,"results":"87","hashOfConfig":"60"},{"size":2207,"mtime":1631067229470,"results":"88","hashOfConfig":"60"},{"size":3143,"mtime":1631426450670,"results":"89","hashOfConfig":"60"},{"size":314,"mtime":1629822508780,"results":"90","hashOfConfig":"60"},{"size":3051,"mtime":1630732749880,"results":"91","hashOfConfig":"60"},{"size":1442,"mtime":1630019545190,"results":"92","hashOfConfig":"60"},{"size":36985,"mtime":1632720416541,"results":"93","hashOfConfig":"60"},{"size":14114,"mtime":1634016318595,"results":"94","hashOfConfig":"60"},{"size":3513,"mtime":1633851168092,"results":"95","hashOfConfig":"60"},{"size":73002,"mtime":1634017819075,"results":"96","hashOfConfig":"60"},{"size":20774,"mtime":1631503559980,"results":"97","hashOfConfig":"60"},{"size":767,"mtime":1634008784555,"results":"98","hashOfConfig":"60"},{"size":1363,"mtime":1630447600580,"results":"99","hashOfConfig":"60"},{"size":373,"mtime":1630421877480,"results":"100","hashOfConfig":"60"},{"size":794,"mtime":1631504447770,"results":"101","hashOfConfig":"60"},{"size":1080,"mtime":1631504351080,"results":"102","hashOfConfig":"60"},{"size":773,"mtime":1631504435830,"results":"103","hashOfConfig":"60"},{"size":886,"mtime":1631504461070,"results":"104","hashOfConfig":"60"},{"size":677,"mtime":1632783784254,"results":"105","hashOfConfig":"60"},{"size":481,"mtime":1632784015340,"results":"106","hashOfConfig":"60"},{"size":744,"mtime":1632900266341,"results":"107","hashOfConfig":"60"},{"size":1151,"mtime":1633584505112,"results":"108","hashOfConfig":"60"},{"size":6046,"mtime":1633844786631,"results":"109","hashOfConfig":"60"},{"size":16232,"mtime":1633238983083,"results":"110","hashOfConfig":"60"},{"size":615,"mtime":1633583359082,"results":"111","hashOfConfig":"60"},{"size":650,"mtime":1633584769493,"results":"112","hashOfConfig":"60"},{"size":1114,"mtime":1633583230036,"results":"113","hashOfConfig":"60"},{"size":623,"mtime":1634005604524,"results":"114","hashOfConfig":"60"},{"size":1160,"mtime":1634005554045,"results":"115","hashOfConfig":"60"},{"size":608,"mtime":1634008757252,"results":"116","hashOfConfig":"60"},{"size":1134,"mtime":1634014602047,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"96mcjh",{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":1,"source":"141","usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":2,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"162","usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"120"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"120"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"120"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"120"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"120"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"120"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\index.js",[],["271","272"],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\App.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\store.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\auth.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\routing\\PrivateRoute.jsx",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\UserSide.jsx",["273"],"import React, { Fragment } from \"react\";\n//import PropTypes from \"prop-types\";\n//import Spinner from \"./Spinner\";\nimport HeaderUser from \"../individual/HeaderUser\";\nimport \"@material-tailwind/react/Dropdown\";\n\nfunction UserSide() {\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <HeaderUser />\n        <main className=\"w-full h-180/2 padding-12\">\n          <div className=\"w-full h-full relative \">\n            <div className=\"w-full h-3/4 centerSom bg-white grid grid-cols-2 gap-5\"></div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nUserSide.propTypes = {};\nconst mapStateToProps = (state) => ({});\n\nexport default UserSide;\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\LandingLogin.jsx",["274","275"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"./Spinner\";\nimport LoginNav from \"../individual/LoginNav\";\nimport { login } from \"../../actions/auth\";\n\nfunction LandingLogin({ login, isAuthenticated, typeUser }) {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = formData;\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n  };\n  //Redirect if logged in\n  if (isAuthenticated && typeUser !== null) {\n    if (isAuthenticated && typeUser.tipo === \"student\") {\n      return <Redirect to=\"/userSide\" />;\n    }\n    if (isAuthenticated && typeUser.tipo === \"admin\") {\n      return <Redirect to=\"/adminSide\" />;\n    }\n  }\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <LoginNav />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"h-full w-full overflow-hidden flex items-center justify-center\">\n              {/* <!-- Root element for center items --> */}\n              <div className=\"w-full flex flex-col h-screen bg-gray-100\">\n                {/* <!-- Auth Card Container --> */}\n                <div className=\"grid place-items-center mx-2 my-20 sm:my-auto\">\n                  {/* <!-- Auth Card --> */}\n                  <div\n                    className=\"\n                  w-11/12\n                  p-12\n                  sm:w-8/12\n                  md:w-6/12\n                  lg:w-5/12\n                  2xl:w-4/12\n                  px-6\n                  py-10\n                  sm:px-10 sm:py-6\n                  bg-white\n                  rounded-lg\n                  shadow-md\n                  lg:shadow-lg\n                \"\n                  >\n                    {/* <!-- Card Title --> */}\n                    <h2\n                      className=\"\n                    text-center\n                    font-semibold\n                    text-3xl\n                    lg:text-4xl\n                    text-gray-800\n                  \"\n                    >\n                      Login\n                    </h2>\n\n                    <form className=\"mt-10\" onSubmit={(e) => onSubmit(e)}>\n                      {/* <!-- Email Input --> */}\n                      <label\n                        for=\"email\"\n                        className=\"block text-xs font-semibold text-gray-600 uppercase\"\n                      >\n                        E-mail\n                      </label>\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"e-mail address\"\n                        autocomplete=\"email\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-2\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n\n                      {/* <!-- Password Input --> */}\n                      <label\n                        for=\"password\"\n                        className=\"\n                      block\n                      mt-2\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                    \"\n                      >\n                        Password\n                      </label>\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={(e) => onChange(e)}\n                        autocomplete=\"current-password\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-2\n                      mb-4\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n\n                      {/* <!-- Auth Buttton --> */}\n\n                      <button\n                        type=\"submit\"\n                        className=\"\n                      w-full\n                      py-3\n                      mt-10\n                      bg-gray-800\n                      rounded-sm\n                      font-medium\n                      text-white\n                      uppercase\n                      focus:outline-none\n                      hover:bg-gray-700 hover:shadow-none\n                    \"\n                      >\n                        Login\n                      </button>\n\n                      {/* <!-- Another Auth Routes --> */}\n                      <div\n                        className=\"\n                      sm:flex sm:flex-wrap\n                      mt-8\n                      sm:mb-4\n                      text-sm text-center\n                    \"\n                      >\n                        <a href=\"#!\" className=\"flex-2 underline\">\n                          Forgot password?\n                        </a>\n\n                        <p className=\"flex-1 text-gray-500 text-md mx-4 my-1 sm:my-auto\">\n                          or\n                        </p>\n\n                        <a href=\"register\" className=\"flex-2 underline\">\n                          Create an Account\n                        </a>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n    //);\n  );\n}\n\nLandingLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  typeUser: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  typeUser: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { login })(LandingLogin);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\routing\\AdminRoute.jsx",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ParentsST.jsx",["276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InputMask from \"react-input-mask\";\nimport axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { newParent, updateParent, getParents } from \"../../actions/parents\";\nimport HeaderUser from \"../individual/HeaderUser\";\nimport { Link } from \"react-router-dom\";\nimport ParentPopUp from \"./ParentPopUp\";\nimport { setAlert } from \"../../actions/alert\";\nimport Spinner from \"./Spinner\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//filepond stuff\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\n\nfunction ParentsST({\n  newParent,\n  updateParent,\n  getParents,\n  parents,\n  setAlert,\n  uploadCnic,\n  uploadQuali,\n  uploadSalary,\n}) {\n  //handle images\n  const [cnicFront, setCnciFront] = useState();\n  const [cnicBack, setCnicBack] = useState();\n  const [salarySlip, setSalarySlip] = useState();\n  const [qualiDoc, setQualiDoc] = useState();\n  const [utilityOne, setUtilityOne] = useState();\n  const [utilitySec, setUtilitySec] = useState();\n  const [formB, setFormB] = useState();\n  //take care of the data\n  const [userParents, setUserParents] = useState([]);\n  const [startParent, setStartParent] = useState();\n  const [formData, setFormData] = useState({\n    type: \"\",\n    gender: \"\",\n    name: \"\",\n    cnic: \"\",\n    email: \"\",\n    mobile: \"\",\n    phone: \"\",\n  });\n  const [cnicPhoto, setCnicCopy] = useState(\"\");\n  const [salaryPhoto, setSalaryPhoto] = useState(\"\");\n  const [qualiPhoto, setQualiPhoto] = useState(\"\");\n  const onChange = (e) =>\n    setStartParent({ ...startParent, [e.target.name]: e.target.value });\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onChangeCnic = (e) => setCnicCopy(e.target.files[0]);\n  const onChangeSalary = (e) => setSalaryPhoto(e.target.files[0]);\n  const onChangeQuali = (e) => setQualiPhoto(e.target.files[0]);\n  const [parentIdToComp, setParentIdToComp] = useState({\n    id: undefined,\n  });\n  //handle images\n  const updateCnicFrontImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicFront\");\n    return data;\n  };\n  const updateCnicBackImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicBack\");\n    return data;\n  };\n  const updateSalarySlip = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"salarySlip\");\n    return data;\n  };\n  const updateQualiDoc = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"qualiDoc\");\n    return data;\n  };\n  const updateUtilityOne = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"utilityOne\");\n    return data;\n  };\n  const updateUtilitySec = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"utilitySec\");\n    return data;\n  };\n  const updateFormB = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"formB\");\n    return data;\n  };\n  //--------------------\n  console.log(parentIdToComp.id);\n  //0000000000000000000000000000000000000000000000000000000000000000000000000000\n  //take care of the dinamic\n  const [parentPop, setParentPop] = useState(false);\n  const [newParentPop, setNewParentPop] = useState(\"hidden\");\n  const [imagePop, setImagePop] = useState(\"hidden\");\n  const changeParentPop = () => {\n    setParentPop(!parentPop);\n  };\n  const changeNewParentPop = () => {\n    console.log(\"this function\");\n    if (newParentPop === \"hidden\") {\n      setNewParentPop(\" \");\n    } else {\n      setNewParentPop(\"hidden\");\n    }\n  };\n  const changeImagePop = () => {\n    if (imagePop === \"hidden\") {\n      setImagePop(\" \");\n    } else {\n      setImagePop(\"hidden\");\n    }\n  };\n  const changeParentIdToComp = (e) => {\n    setParentIdToComp({ ...parentIdToComp, [\"id\"]: e.target.id });\n    changeParentPop();\n  };\n  const onSubmitNewParent = async (e) => {\n    e.preventDefault();\n    const cnicFrontData = await updateCnicFrontImg(e);\n    const cnicBackData = await updateCnicBackImg(e);\n    const salarySlipData = await updateSalarySlip(e);\n    const qualiDocData = await updateQualiDoc(e);\n    const utilityOneData = await updateUtilityOne(e);\n    const utilitySecData = await updateUtilitySec(e);\n    const formBData = await updateFormB(e);\n    const newInfo = {\n      type: formData.type,\n      gender: formData.gender,\n      name: formData.name,\n      cnic: formData.cnic,\n      email: formData.email,\n      mobile: formData.mobile,\n      phone: formData.phone,\n      cnicFront: cnicFrontData,\n      cnicBack: cnicBackData,\n      salarySlip: salarySlipData,\n      qualiDoc: qualiDocData,\n      utilityOne: utilityOneData,\n      utilitySec: utilitySecData,\n      formB: formBData,\n    };\n    newParent(newInfo);\n    getParents();\n    changeNewParentPop();\n    setAlert(\"Creating Parent, Please Wait\", \"success\", 20000);\n  };\n  //000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  useEffect(() => {\n    getParents();\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <HeaderUser />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5 z-0 relative\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-180/2 centerSom bg-white lg1:bg-transparent\">\n              {parents.loading === true ? (\n                <Spinner />\n              ) : (\n                <div className=\"w-fll h-full relative\">\n                  <div\n                    className=\"\n              grid\n              gap-6\n              pt-5\n              px-5\n              mb-8\n              md:grid-cols-2\n              lg:grid-cols-3\n              xl:grid-cols-4\n              usm:px-1\n            \"\n                  >\n                    {/* <!-- Card 1 --> */}\n                    <div\n                      className=\"\n                flex\n                items-center\n                p-4\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                py-10\n                cursor-pointer\n                dark:bg-gray-800\n                relative\n                text-center\n                md3:h-36\n              \"\n                      onClick={() => changeNewParentPop()}\n                    >\n                      <div className=\"w-20 h-20 centerSom\">\n                        <img\n                          src=\"./img/icons8-add-100.png\"\n                          alt=\"add logo\"\n                          className=\"w-full h-full bg-cover\"\n                        />\n                      </div>\n                    </div>\n                    {/* <!-- Cards --> */}\n                    {parents.parents !== null\n                      ? parents.parents.parents.map((parent) => (\n                          <div\n                            id={parent._id}\n                            className=\"\n                  flex\n                  items-center\n                  p-4\n                  bg-white\n                  border-2 border-gray-200\n                  rounded-lg\n                  shadow-sm\n                  dark:bg-gray-800\n                  cursor-pointer\n                \"\n                            onClick={(e) => changeParentIdToComp(e)}\n                          >\n                            <div className=\"mr-4 bg-blue-500 text-white rounded-full pointer-events-none\">\n                              <img\n                                className=\"rounded-full w-12 h-12\"\n                                src={`./img/parents.png`}\n                                alt=\"\"\n                                loading=\"lazy\"\n                              />\n                            </div>\n                            <div className=\"pointer-events-none\">\n                              <p className=\"mb-2 text-md font-medium text-gray-900 \">\n                                {parent.name}\n                              </p>\n                              <p className=\"text-sm font-normal text-gray-800\">\n                                CNIC: {parent.cnic}\n                              </p>\n                            </div>\n                          </div>\n                        ))\n                      : \" \"}\n                  </div>\n                  <div\n                    className={`h-full w-full bg-white absolute top-0 left-0 ${newParentPop}`}\n                  >\n                    <form onSubmit={(e) => onSubmitNewParent(e)}>\n                      <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                        <div className=\"flex justify-center\">\n                          <div className=\"flex\">\n                            <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                              New Parent\n                            </h1>\n                          </div>\n                        </div>\n                        {/* <!-- 1 row --> */}\n                        <div className=\"grid grid-cols-1 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Type\n                          </label>\n                          <select\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none focus:ring-1\n                  bg-gray-100\n                  focus:ring-gray-600 focus:border-transparent\n                \"\n                            name=\"type\"\n                            required\n                            value={formData.type}\n                            onChange={(e) => onChangeFormData(e)}\n                          >\n                            <option defualt>Select</option>\n                            <option value=\"parent\">Parent</option>\n                            <option value=\"guardian\">Guardian</option>\n                          </select>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Gender\n                            </label>\n                            <select\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              name=\"gender\"\n                              required\n                              value={formData.gender}\n                              onChange={(e) => onChangeFormData(e)}\n                            >\n                              <option defualt>Select</option>\n                              <option value=\"male\">Male</option>\n                              <option value=\"female\">Female</option>\n                            </select>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Name\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              required\n                              placeholder=\"Name\"\n                              name=\"name\"\n                              value={formData.name}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              CNIC\n                            </label>\n                            <InputMask\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              required\n                              type=\"text\"\n                              mask=\"99999-9999999-9\"\n                              placeholder=\"99999-9999999-9\"\n                              name=\"cnic\"\n                              value={formData.cnic}\n                              onChange={(e) => onChangeFormData(e)}\n                            ></InputMask>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Email\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              required\n                              placeholder=\"Email\"\n                              name=\"email\"\n                              value={formData.email}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Mobile\n                            </label>\n                            <InputMask\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              mask=\"9999-9999999\"\n                              type=\"text\"\n                              placeholder=\"9999-9999999\"\n                              name=\"mobile\"\n                              value={formData.mobile}\n                              onChange={(e) => onChangeFormData(e)}\n                            ></InputMask>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Phone\n                            </label>\n                            <InputMask\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              mask=\"9999-9999999\"\n                              type=\"text\"\n                              placeholder=\"9999-9999999\"\n                              name=\"phone\"\n                              value={formData.phone}\n                              onChange={(e) => onChangeFormData(e)}\n                            ></InputMask>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Cnic Front\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2\">\n                              <FilePond\n                                files={cnicFront}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"cnicFront\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Cnic Back\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2 \">\n                              <FilePond\n                                files={cnicBack}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"cnicBack\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Salary Slip\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2\">\n                              <FilePond\n                                files={salarySlip}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"salarySlip\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Qualification Document\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2\">\n                              <FilePond\n                                files={qualiDoc}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"qualiDoc\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Utility Bill 1\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2\">\n                              <FilePond\n                                files={utilityOne}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"utilityOne\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Utility Bill 2\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2\">\n                              <FilePond\n                                files={utilitySec}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"utilitySec\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Form-B/FRC\n                            </label>\n                            <div className=\"flex items-center justify-left w-full -ml-2\">\n                              <FilePond\n                                files={formB}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"formB\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                          \n                        </div>\n                        <div className=\"flex items-center justify-center md:gap-8 gap-4 pt-5 pb-5\">\n                          <button\n                            className=\"\n                  w-auto\n                  bg-red-400\n                  hover:bg-red-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                            type=\"button\"\n                            onClick={() => changeNewParentPop()}\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            className=\"\n                  w-auto\n                  bg-green-400\n                  hover:bg-green-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                            type=\"submit\"\n                          >\n                            Add\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                  {parentPop && (\n                    <ParentPopUp\n                      changeVisibility={changeParentPop}\n                      parentId={parentIdToComp}\n                    />\n                  )}\n                  {/* end of new parent pop up */}\n                  {/* parent information */}\n                  {/* start of new parent pop up */}\n                  {/* <div\n                className={`h-full w-full bg-white absolute top-0 left-0 ${parentPop}`}\n              >\n                <form onClick={() => onsubmit()}>\n                  <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                    <div className=\"flex justify-center\">\n                      <div className=\"flex\">\n                        <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                          {startParent !== undefined ? startParent.name : \" \"}\n                        </h1>\n                      </div>\n                    </div>\n                     <!-- 1 row -->\n                    <div className=\"grid grid-cols-1 mx-7\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      ></label>\n                      <select\n                        value={\n                          startParent !== undefined ? startParent.name : \"\"\n                        }\n                        onChange={(e) => onChangeFormData(e)}\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none focus:ring-1\n                      bg-gray-100\n                      focus:ring-gray-600 focus:border-transparent\n                    \"\n                      >\n                        <option value=\"Parent\">Parent</option>\n                        <option value=\"Guardian\">Parent</option>\n                      </select>\n                    </div>\n                    <div\n                      className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n                    >\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                        >\n                          Gender\n                        </label>\n                        <select\n                          className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        bg-gray-100\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                        >\n                          <option>Male</option>\n                        </select>\n                      </div>\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                        >\n                          Name\n                        </label>\n                        <input\n                          className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                          type=\"text\"\n                          value={\n                            startParent !== undefined ? startParent.name : \" \"\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div\n                      className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n                    >\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                        >\n                          CNIC\n                        </label>\n                        <input\n                          className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                          type=\"text\"\n                          value=\"1542578659452\"\n                        />\n                      </div>\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                        >\n                          Email\n                        </label>\n                        <input\n                          className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                          type=\"text\"\n                          value=\"paren1@email.com\"\n                        />\n                      </div>\n                    </div>\n                    <div\n                      className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n                    >\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                        >\n                          Mobile\n                        </label>\n                        <input\n                          className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                          type=\"text\"\n                          value=\"+54-569-5896-5896\"\n                        />\n                      </div>\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                        >\n                          Phone\n                        </label>\n                        <input\n                          className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                          type=\"text\"\n                          value=\"564587512\"\n                        />\n                      </div>\n                    </div>\n                    <div\n                      className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n                    >\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n                        >\n                          CNIC PHOTO\n                        </label>\n                        <div className=\"flex items-center justify-left w-full\">\n                          <button\n                            className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\"\n                            onClick={() => changeImagePop()}\n                          >\n                            Check Image\n                          </button>\n                        </div>\n                        <div className=\"flex items-center justify-left w-full\">\n                          <input type=\"file\" />\n                        </div>\n                      </div>\n                      <div className=\"grid grid-cols-1\">\n                        <label\n                          className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n                        >\n                          SALARY SLIP\n                        </label>\n                        <div className=\"flex items-center justify-left w-full\">\n                          <button className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\">\n                            Download Image\n                          </button>\n                        </div>\n                        <div className=\"flex items-center justify-left w-full\">\n                          <input type=\"file\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                      mb-1\n                    \"\n                      >\n                        QUALIFICATION DOCUMENT\n                      </label>\n                      <div className=\"flex items-center justify-left w-full\">\n                        <button className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\">\n                          Donwload file\n                        </button>\n                      </div>\n                      <div className=\"flex items-center justify-left w-full\">\n                        <input type=\"file\" />\n                      </div>\n                    </div>\n                    <div className=\"flex items-center justify-center md:gap-8 gap-4 pt-5 pb-5\">\n                      <button\n                        className=\"\n                  w-auto\n                  bg-red-400\n                  hover:bg-red-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                        onClick={() => changeParentPop()}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"\n                  w-auto\n                  bg-green-400\n                  hover:bg-green-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </div> */}\n                  {/* end of parent information */}\n                  {/* <div\n                    className={`w-2/3 h-1/2 bg-white centerSom usm:h-1/3 border ${imagePop}`}\n                  >\n                    <div className=\"w-full h-full relative\">\n                      <img\n                        src=\"./img/Pakistani-CNIC-of-chinese-man.jpg\"\n                        className=\"w-full h-full bg-cover\"\n                      />\n                      <button\n                        className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n                        onClick={() => changeImagePop()}\n                      >\n                        X\n                      </button>\n                    </div>\n                  </div> \n                  \n                </form>*/}\n                </div>\n              )}\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nParentsST.propTypes = {\n  newParent: PropTypes.func.isRequired,\n  updateParent: PropTypes.func.isRequired,\n  getParents: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  uploadCnic: PropTypes.func.isRequired,\n  uploadSalary: PropTypes.func.isRequired,\n  uploadQuali: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  parents: state.parents,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  newParent,\n  updateParent,\n  getParents,\n})(ParentsST);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\LandingRegister.jsx",["297"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport LoginNav from \"../individual/LoginNav\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\n\nfunction LandingRegister({ setAlert, register, isAuthenticated, typeUser }) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const { name, email, password } = formData;\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    // setAlert(\"thanks for register\", \"success\");\n    register({ name, email, password });\n  };\n  //Redirect if logged in\n  if (isAuthenticated && typeUser !== null) {\n    if (isAuthenticated && typeUser.tipo === \"student\") {\n      return <Redirect to=\"/userSide\" />;\n    }\n    if (isAuthenticated && typeUser.tipo === \"admin\") {\n      return <Redirect to=\"/adminSide\" />;\n    }\n  }\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <LoginNav />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"h-full w-full overflow-hidden flex items-center justify-center\">\n              {/* <!-- Root element for center items --> */}\n              <div className=\"w-full flex flex-col h-screen bg-gray-100\">\n                {/* <!-- Auth Card Container --> */}\n                <div className=\"grid place-items-center mx-2 my-20 sm:my-auto\">\n                  {/* <!-- Auth Card --> */}\n                  <div\n                    className=\"\n                  w-11/12\n                  p-12\n                  sm:w-8/12\n                  md:w-6/12\n                  lg:w-5/12\n                  2xl:w-4/12\n                  px-6\n                  py-10\n                  sm:px-10 sm:py-6\n                  bg-white\n                  rounded-lg\n                  shadow-md\n                  lg:shadow-lg\n                \"\n                  >\n                    {/* <!-- Card Title --> */}\n                    <h2\n                      className=\"\n                    text-center\n                    font-semibold\n                    text-3xl\n                    lg:text-4xl\n                    text-gray-800\n                  \"\n                    >\n                      Register\n                    </h2>\n\n                    <form className=\"mt-10\" onSubmit={(e) => onSubmit(e)}>\n                      {/* <!-- Name --> */}\n                      <label\n                        for=\"Name\"\n                        className=\"block text-xs font-semibold text-gray-600 uppercase\"\n                      >\n                        Name\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"name\"\n                        name=\"name\"\n                        value={name}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"Name\"\n                        autocomplete=\"name\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                      />\n                      {/* <!-- Email Input --> */}\n                      <label\n                        for=\"email\"\n                        className=\"\n                      block\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                      mt-2\n                    \"\n                      >\n                        E-mail\n                      </label>\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"e-mail address\"\n                        autocomplete=\"email\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                      />\n                      {/* <!-- Password Input --> */}\n                      <label\n                        for=\"password\"\n                        className=\"\n                      block\n                      mt-2\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                    \"\n                      >\n                        Password\n                      </label>\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={(e) => onChange(e)}\n                        placeholder=\"password\"\n                        autocomplete=\"current-password\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      mb-4\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                      />\n\n                      {/* <!-- Auth Buttton --> */}\n                      {/* <Link to=\"/userSide\"> */}\n                      <button\n                        type=\"submit\"\n                        className=\"\n                      w-full\n                      py-3\n                      mt-10\n                      bg-gray-800\n                      rounded-sm\n                      font-medium\n                      text-white\n                      uppercase\n                      focus:outline-none\n                      hover:bg-gray-700 hover:shadow-none\n                    \"\n                      >\n                        Register\n                      </button>\n                      {/* </Link> */}\n\n                      {/* <!-- Another Auth Routes --> */}\n                      <div\n                        className=\"\n                      sm:flex sm:flex-wrap\n                      mt-8\n                      sm:mb-4\n                      text-sm text-center\n                    \"\n                      >\n                        <a href=\"#!\" className=\"flex-2 underline\">\n                          Forgot password?\n                        </a>\n\n                        <p className=\"flex-1 text-gray-500 text-md mx-4 my-1 sm:my-auto\">\n                          or\n                        </p>\n\n                        <a href=\"register\" className=\"flex-2 underline\">\n                          Create an Account\n                        </a>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n    //);\n  );\n}\n\nLandingRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  typeUser: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  typeUser: state.auth.user,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(\n  LandingRegister\n);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\BankSt.jsx",["298","299","300","301","302","303","304","305","306"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport InputMask from \"react-input-mask\";\nimport { setAlert } from \"../../actions/alert\";\nimport Spinner from \"./Spinner\";\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\nimport PropTypes from \"prop-types\";\nimport HeaderUser from \"../individual/HeaderUser\";\nimport BankPopUp from \"./BankPopUp\";\n//redux stuff\nimport { connect } from \"react-redux\";\nimport { newBank, getBanks, updateBank } from \"../../actions/banks\";\nimport { getOptions } from \"../../actions/options\";\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\nfunction BankSt({\n  newBank,\n  getBanks,\n  updateBank,\n  banks,\n  setAlert,\n  getOptions,\n  options,\n}) {\n  const [newBankPop, setNewBankPop] = useState(\"hidden\");\n  const [checkImgFile, setCheckImgFile] = useState();\n  const [bankPop, setBankPop] = useState(\"hidden\");\n  const [imagePop, setImagePop] = useState(\"hidden\");\n  const [userBankPop, setUserBankPop] = useState(false);\n  const [formData, setFormData] = useState({\n    bank: \"\",\n    branchName: \"\",\n    accTitle: \"\",\n    accNumber: \"\",\n    accIban: \"\",\n    checkImg: \"img stuff\",\n    checkImgType: \"img stuff type\",\n    toProcessImg: {},\n  });\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const changeUserBankPop = () => {\n    setUserBankPop(!userBankPop);\n  };\n  // const setImageData = (e) => {\n  //   const form = new FormData(e.target);\n  //   const data = form.get(\"checkImgFile\");\n  // }\n  //send the id to pop up\n  const [bankIdToPop, setBankIdToPop] = useState({\n    id: undefined,\n  });\n  const changeToProcessImg = (e) => {\n    setFormData({ ...formData, [\"toProcessImg\"]: e.target.value });\n  };\n  const changeBankIdToPop = (e) => {\n    setBankIdToPop({ ...bankIdToPop, [\"id\"]: e.target.id });\n    changeUserBankPop();\n  };\n  const changeNewBankPop = () => {\n    newBankPop === \"hidden\" ? setNewBankPop(\" \") : setNewBankPop(\"hidden\");\n  };\n  // const changeBankPop = () => {\n  //   bankPop === \"hidden\" ? setBankPop(\" \") : setBankPop(\"hidden\");\n  // };\n  // const changeImagePop = () => {\n  //   imagePop === \"hidden\" ? setImagePop(\" \") : setImagePop(\"hidden\");\n  // };\n  //update image data\n  const updateImgData = async (e) => {\n    const form = await new FormData(e.target);\n    const data = await form.get(\"checkImgFile\");\n    return data;\n  };\n  //handle the submit\n  const onSubmitNewBank = async (e) => {\n    e.preventDefault();\n    const data = await updateImgData(e);\n    console.log(data);\n    const newInfo = {\n      bank: formData.bank,\n      branchName: formData.branchName,\n      accTitle: formData.accTitle,\n      accNumber: formData.accNumber,\n      accIban: formData.accIban,\n      imageToProcess: data,\n    };\n    console.log(newInfo);\n    // setFormData({ ...formData, [\"toProcessImg\"]: data });\n    // console.log(formData);\n    //console.log(data);\n    // setTimeout(() => {\n    //   setFormData({ ...formData, [\"toProcessImg\"]: data });\n    //   console.log(formData);\n    // }, 5000);\n    //console.log(e.checkImgFile);\n    newBank(newInfo);\n    getBanks();\n    changeNewBankPop();\n    setAlert(\"Creating account, please wait\", \"success\", 7000);\n  };\n  //get all the banks on render\n  useEffect(() => {\n    getBanks();\n    getOptions();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <HeaderUser />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5 z-0 relative\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-180/2 centerSom bg-white lg1:bg-transparent\">\n              {banks.loading === true ? (\n                <Spinner />\n              ) : (\n                <div className=\"w-full h-full relative\">\n                  <div\n                    className=\"\n              grid\n              gap-6\n              pt-5\n              px-5\n              mb-8\n              md:grid-cols-2\n              lg:grid-cols-3\n              xl:grid-cols-4\n              usm:px-1\n            \"\n                  >\n                    {/* <!-- Card 1 --> */}\n                    <div\n                      className=\"\n                flex\n                items-center\n                p-4\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                py-10\n                cursor-pointer\n                dark:bg-gray-800\n                relative\n                text-center\n                md3:h-36\n              \"\n                      onClick={() => changeNewBankPop()}\n                    >\n                      <div className=\"w-20 h-20 centerSom\">\n                        <img\n                          src=\"./img/icons8-add-100.png\"\n                          alt=\"add logo\"\n                          className=\"w-full h-full bg-cover\"\n                        />\n                        <div>\n                          <p className=\"mb-2 text-md font-medium text-gray-900\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\">\n                            <span className=\"text-white bg-green-400\"></span>\n                          </p>\n                          <p className=\"text-sm font-normal text-gray-800\">\n                            <span className=\"text-white bg-gray-500\"></span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    {/* <!-- Card 2 --> */}\n                    {banks.banks !== null\n                      ? banks.banks.banks.map((bank) => (\n                          <div\n                            id={bank._id}\n                            className=\"\n                flex\n                items-center\n                p-4\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                dark:bg-gray-800\n                cursor-pointer\n              \"\n                            onClick={(e) => changeBankIdToPop(e)}\n                          >\n                            <div className=\"mr-4 pointer-events-none bg-blue-500 text-white rounded-full\">\n                              <img\n                                className=\"rounded-full w-12 h-12\"\n                                src={`./img/parents.png`}\n                                alt=\"\"\n                                loading=\"lazy\"\n                              />\n                            </div>\n                            <div className=\"pointer-events-none\">\n                              <p className=\"mb-2 text-md font-medium text-gray-900\">\n                                {bank.accNumber}\n                              </p>\n                              <p className=\"text-sm font-normal text-gray-800\">\n                                Bank: {bank.bank}\n                              </p>\n                              <p className=\"text-sm font-normal text-gray-800\">\n                                Account Title: {bank.accTitle}\n                              </p>\n                            </div>\n                          </div>\n                        ))\n                      : \" \"}\n                  </div>\n                  {/* <!-- popup section new bank --> */}\n                  <div\n                    className={`h-full w-full bg-white absolute top-0 left-0 ${newBankPop}`}\n                  >\n                    <form\n                      encType=\"multipart/form-data\"\n                      onSubmit={(e) => onSubmitNewBank(e)}\n                    >\n                      <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                        <div className=\"flex justify-center\">\n                          <div className=\"flex\">\n                            <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                              New Bank\n                            </h1>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Bank\n                            </label>\n                            <select\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              name=\"bank\"\n                              required\n                              value={formData.bank}\n                              onChange={(e) => onChangeFormData(e)}\n                            >\n                              <option defualt>Select</option>\n                              {options.options !== null\n                                ? options.options\n                                    .filter((opt) => opt.type === \"bank\")\n                                    .map((opti) => (\n                                      <option value={opti.name}>\n                                        {opti.name}\n                                      </option>\n                                    ))\n                                : \"\"}\n                            </select>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Branch Name\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              placeholder=\"Branch name\"\n                              name=\"branchName\"\n                              required\n                              value={formData.branchName}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Account Title\n                          </label>\n                          <input\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            type=\"text\"\n                            placeholder=\"Account Title\"\n                            name=\"accTitle\"\n                            required\n                            value={formData.accTitle}\n                            onChange={(e) => onChangeFormData(e)}\n                          />\n                        </div>\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Account Number\n                          </label>\n                          <input\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            type=\"text\"\n                            placeholder=\"Account Number\"\n                            name=\"accNumber\"\n                            required\n                            value={formData.accNumber}\n                            onChange={(e) => onChangeFormData(e)}\n                          ></input>\n                        </div>\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Account IBAN\n                          </label>\n                          <InputMask\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            type=\"text\"\n                            name=\"accIban\"\n                            mask=\"aa99-aaaa-9999-9999-9999-9999\"\n                            placeholder=\"AA00-AAAA-9999-9999-9999-9999\"\n                            required\n                            value={formData.accIban}\n                            onChange={(e) => onChangeFormData(e)}\n                          ></InputMask>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              Copy of CHEQUE\n                            </label>\n                            <div className=\"flex items-center justify-left w-full\">\n                              <FilePond\n                                files={checkImgFile}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"checkImgFile\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          className=\"\n                  flex\n                  items-center\n                  justify-center\n                  md:gap-8\n                  gap-4\n                  pt-5\n                  pb-5\n                \"\n                        >\n                          <button\n                            className=\"\n                    w-auto\n                    bg-red-400\n                    hover:bg-red-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                            type=\"button\"\n                            onClick={() => changeNewBankPop()}\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            className=\"\n                    w-auto\n                    bg-green-400\n                    hover:bg-green-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                            type=\"submit\"\n                          >\n                            CREATE\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                  {/* End of pop up section */}\n                  {/* <!-- popup section new bank --> */}\n                  {userBankPop && (\n                    <BankPopUp\n                      changeVisibility={changeUserBankPop}\n                      bankId={bankIdToPop}\n                      banks={banks}\n                    />\n                  )}\n                  {/* <div\n                className={`h-full w-full bg-white absolute top-0 left-0 ${bankPop}`}\n              >\n                <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"flex\">\n                      <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                        12453568794\n                      </h1>\n                    </div>\n                  </div>\n                  <div\n                    className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n                  >\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                      >\n                        Bank\n                      </label>\n                      <select\n                        className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        bg-gray-100\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                      >\n                        <option>Meezan Bank Limited</option>\n                      </select>\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                      >\n                        Branch Name\n                      </label>\n                      <input\n                        className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                        type=\"text\"\n                        value=\"Abdullah Haroon Road Branch\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                    <label\n                      className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                    >\n                      Account Title\n                    </label>\n                    <input\n                      className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                      type=\"text\"\n                      value=\"Hamesh Khan\"\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                    <label\n                      className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                    >\n                      Account Number\n                    </label>\n                    <input\n                      className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                      type=\"text\"\n                      value=\"12453568794\"\n                    />\n                  </div>\n                  <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                    <label\n                      className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                    >\n                      Account IBAN\n                    </label>\n                    <input\n                      className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                      type=\"text\"\n                      value=\"Account IBAN\"\n                    />\n                  </div>\n                  <div\n                    className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n                  >\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n                      >\n                        Copy of CHEQUE\n                      </label>\n                      <div className=\"flex items-center justify-left w-full\">\n                        <button\n                          className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\"\n                          onClick={() => changeImagePop()}\n                        >\n                          Check Image\n                        </button>\n                      </div>\n                      <div className=\"flex items-center justify-left w-full\">\n                        <input type=\"file\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    className=\"\n                  flex\n                  items-center\n                  justify-center\n                  md:gap-8\n                  gap-4\n                  pt-5\n                  pb-5\n                \"\n                  >\n                    <button\n                      className=\"\n                    w-auto\n                    bg-red-400\n                    hover:bg-red-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                      onClick={() => changeBankPop()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className=\"\n                    w-auto\n                    bg-green-400\n                    hover:bg-green-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                    >\n                      CREATE\n                    </button>\n                  </div>\n                </div>\n              </div> */}\n                  {/* End of pop up section */}\n                </div>\n              )}\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nBankSt.propTypes = {\n  getBanks: PropTypes.func.isRequired,\n  updateBank: PropTypes.func.isRequired,\n  newBank: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  getOptions: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  banks: state.banks,\n  options: state.options,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  getBanks,\n  updateBank,\n  newBank,\n  getOptions,\n})(BankSt);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\UserPassword.jsx",["307"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HeaderUser from \"../individual/HeaderUser\";\n\nfunction UserPassword(props) {\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <HeaderUser />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"h-full w-full overflow-hidden flex items-center justify-center\">\n              {/* <!-- Root element for center items --> */}\n              <div className=\"w-full flex flex-col h-screen bg-gray-100\">\n                {/* <!-- Auth Card Container --> */}\n                <div className=\"grid place-items-center mx-2 my-20 sm:my-auto\">\n                  {/* <!-- Auth Card --> */}\n                  <div\n                    className=\"\n                  w-11/12\n                  p-12\n                  sm:w-8/12\n                  md:w-6/12\n                  lg:w-5/12\n                  2xl:w-4/12\n                  px-6\n                  py-10\n                  sm:px-10 sm:py-6\n                  bg-white\n                  rounded-lg\n                  shadow-md\n                  lg:shadow-lg\n                \"\n                  >\n                    {/* <!-- Card Title --> */}\n                    <h2\n                      className=\"\n                    text-center\n                    font-semibold\n                    text-3xl\n                    lg:text-4xl\n                    text-gray-800\n                  \"\n                    >\n                      Change Password\n                    </h2>\n\n                    <form className=\"mt-10\" method=\"POST\">\n                      {/* <!-- Name --> */}\n                      <label\n                        for=\"email\"\n                        className=\"block text-xs font-semibold text-gray-600 uppercase\"\n                      >\n                        Current Password\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"name\"\n                        name=\"name\"\n                        placeholder=\" Current Password\"\n                        autocomplete=\"name\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n                      {/* <!-- Email Input --> */}\n                      <label\n                        for=\"email\"\n                        className=\"\n                      block\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                      mt-2\n                    \"\n                      >\n                        New Password\n                      </label>\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"New Password\"\n                        placeholder=\"New password\"\n                        autocomplete=\"email\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n                      {/* <!-- Password Input --> */}\n                      <label\n                        for=\"password\"\n                        className=\"\n                      block\n                      mt-2\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                    \"\n                      >\n                        Confirm Password\n                      </label>\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Confirm password\"\n                        autocomplete=\"current-password\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      mb-4\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n\n                      {/* <!-- Auth Buttton --> */}\n                      <button\n                        type=\"submit\"\n                        className=\"\n                      w-full\n                      py-3\n                      mt-10\n                      bg-gray-800\n                      rounded-sm\n                      font-medium\n                      text-white\n                      uppercase\n                      focus:outline-none\n                      hover:bg-gray-700 hover:shadow-none\n                    \"\n                      >\n                        Change Password\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nUserPassword.propTypes = {};\n\nexport default UserPassword;\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ApplicantsSt.jsx",["308","309","310","311","312","313","314"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HeaderUser from \"../individual/HeaderUser\";\nimport ApplicantsPopUp from \"./ApplicantsPopUp\";\nimport { setAlert } from \"../../actions/alert\";\nimport InputMask from \"react-input-mask\";\nimport Spinner from \"./Spinner\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//redux stuff\nimport { connect } from \"react-redux\";\nimport {\n  newApplicant,\n  getApplicants,\n  updateApplicant,\n} from \"../../actions/aplicants\";\nimport BankPopUp from \"./BankPopUp\";\n//filepond stuff\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\n\nfunction ApplicantsSt({ getApplicants, newApplicant, applicants, setAlert }) {\n  //handle images\n  const [cnicFront, setCnciFront] = useState();\n  const [cnicBack, setCnicBack] = useState();\n  const [studentPhoto, setStudentPhoto] = useState();\n  //---------------------------------\n  const [applicantPopUP, setApplicantPopUp] = useState(false);\n  const [newApplicantPop, setNewApplicantPop] = useState(\"hidden\");\n  const [applicantPop, setApplicantPop] = useState(\"hidden\");\n  const [appIdToPop, setAppIdToPop] = useState({\n    id: undefined,\n  });\n  const [formData, setFormData] = useState({\n    name: \"\",\n    gender: \"\",\n    cnic: \"\",\n    dateOfBirth: \"\",\n    mobile: \"\",\n    phone: \"\",\n    email: \"\",\n  });\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const changePopUp = () => {\n    setApplicantPopUp(!applicantPopUP);\n  };\n  const changeNewApplicant = () => {\n    if (newApplicantPop === \"hidden\") {\n      setNewApplicantPop(\" \");\n    } else {\n      setNewApplicantPop(\"hidden\");\n    }\n  };\n  //handle images\n  const updateCnicFrontImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicFront\");\n    return data;\n  };\n  const updateCnicBackImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicBack\");\n    return data;\n  };\n  const updateStudentPhoto = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"studentPhoto\");\n    return data;\n  };\n  //--------------------\n  const changeApplicantPop = () => {\n    applicantPop === \"hidden\"\n      ? setApplicantPop(\" \")\n      : setApplicantPop(\"hidden\");\n  };\n  const changeAppIdToPop = (e) => {\n    setAppIdToPop({ ...appIdToPop, [\"id\"]: e.target.id });\n    changePopUp();\n  };\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    const cnicFronData = await updateCnicFrontImg(e);\n    const cnicBackData = await updateCnicBackImg(e);\n    const studentPhotoData = await updateStudentPhoto(e);\n    const newInfo = {\n      name: formData.name,\n      gender: formData.gender,\n      cnic: formData.cnic,\n      dateOfBirth: formData.dateOfBirth,\n      mobile: formData.mobile,\n      phone: formData.phone,\n      email: formData.email,\n      cnicFront: cnicFronData,\n      cnicBack: cnicBackData,\n      studentPhoto: studentPhotoData,\n    };\n    newApplicant(newInfo);\n    getApplicants();\n    changeNewApplicant();\n    setAlert(\"Creating Applicant, Please Wait\", \"success\", 7000);\n  };\n  //get all the applicants on render\n  useEffect(() => {\n    getApplicants();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <HeaderUser />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5 z-0 relative\">\n          <div className=\"w-full h-full relative\">\n            <div\n              className=\"\n            w-full\n            h-180/2\n            centerSom\n            bg-white\n            lg1:bg-transparent\n            overflow-y-auto\n          \"\n            >\n              {applicants.loading === true ? (\n                <Spinner />\n              ) : (\n                <div className=\"w-full h-full relative\">\n                  <div\n                    className=\"\n              grid\n              gap-6\n              pt-5\n              px-5\n              mb-8\n              md:grid-cols-2\n              lg:grid-cols-3\n              xl:grid-cols-4\n              usm:px-1\n            \"\n                  >\n                    {/* <!-- Card 1 --> */}\n                    <div\n                      className=\"\n                flex\n                items-center\n                p-4\n                py-10\n                cursor-pointer\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                dark:bg-gray-800\n                relative\n                text-center\n                md3:h-36\n              \"\n                      onClick={() => changeNewApplicant()}\n                    >\n                      <div className=\"w-20 h-20 centerSom\">\n                        <img\n                          src=\"./img/icons8-add-100.png\"\n                          alt=\"add logo\"\n                          className=\"w-full h-full bg-cover\"\n                        />\n                        <div>\n                          <p className=\"mb-2 text-md font-medium text-gray-900\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\">\n                            <span className=\"text-white bg-green-400\"></span>\n                          </p>\n                          <p className=\"text-sm font-normal text-gray-800\">\n                            <span className=\"text-white bg-gray-500\"></span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    {/* <!-- Card 2 --> */}\n                    {applicants.applicants !== null\n                      ? applicants.applicants.applicants.map((applicant) => (\n                          <div\n                            id={applicant._id}\n                            className=\"\n                flex\n                items-center\n                p-4\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                dark:bg-gray-800\n                cursor-pointer\n              \"\n                            onClick={(e) => changeAppIdToPop(e)}\n                          >\n                            <div className=\"mr-4 bg-blue-500 text-white rounded-full pointer-events-none\">\n                              <img\n                                className=\"rounded-full w-12 h-12\"\n                                src=\"https://images.pexels.com/photos/5212324/pexels-photo-5212324.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n                                alt=\"\"\n                                loading=\"lazy\"\n                              />\n                            </div>\n                            <div className=\"pointer-events-none\">\n                              <p className=\"mb-2 text-md font-medium text-gray-900\">\n                                {applicant.name}\n                              </p>\n                              <p className=\"text-sm font-normal text-gray-800\">\n                                Birth: {applicant.dateOfBirth}\n                              </p>\n                              <p className=\"text-sm font-normal text-gray-800\">\n                                CNIC: {applicant.cnic}\n                              </p>\n                            </div>\n                          </div>\n                        ))\n                      : \" \"}\n                    {/* <!-- Card 3 --> */}\n                    {/* <div\n                  className=\"\n                flex\n                items-center\n                p-4\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                dark:bg-gray-800\n              \"\n                >\n                  <div className=\"mr-4 bg-blue-500 text-white rounded-full\">\n                    <img\n                      className=\"rounded-full w-12 h-12\"\n                      src=\"https://images.pexels.com/photos/5212324/pexels-photo-5212324.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n                      alt=\"\"\n                      loading=\"lazy\"\n                    />\n                  </div>\n                  <div>\n                    <div>\n                      <p className=\"mb-2 text-md font-medium text-gray-900\">\n                        Kashehi Abd Al-Rashid\n                      </p>\n                      <p className=\"text-sm font-normal text-gray-800\">\n                        Age: 11\n                      </p>\n                      <p className=\"text-sm font-normal text-gray-800\">\n                        CNIC: 1541245368325\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div> */}\n                    {/* <!-- popup section new applicant --> */}\n                    <div\n                      className={`h-full w-full bg-white absolute top-0 left-0 ${newApplicantPop}`}\n                    >\n                      <form onSubmit={(e) => onSubmitForm(e)}>\n                        <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                          <div className=\"flex justify-center\">\n                            <div className=\"flex\">\n                              <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                                New Applicant\n                              </h1>\n                            </div>\n                          </div>\n                          {/* <!-- 1 row --> */}\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                              >\n                                Name\n                              </label>\n                              <input\n                                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                                name=\"name\"\n                                required\n                                value={formData.name}\n                                onChange={(e) => onChangeFormData(e)}\n                                type=\"text\"\n                                placeholder=\"Name\"\n                              />\n                            </div>\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                              >\n                                Gender\n                              </label>\n                              <select\n                                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      bg-gray-100\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                                name=\"gender\"\n                                required\n                                value={formData.gender}\n                                onChange={(e) => onChangeFormData(e)}\n                              >\n                                <option defualt>Select</option>\n                                <option value=\"male\">Male</option>\n                                <option value=\"female\">Female</option>\n                              </select>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                              >\n                                CNIC\n                              </label>\n                              <InputMask\n                                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                                type=\"text\"\n                                mask=\"99999-9999999-9\"\n                                placeholder=\"99999-9999999-9\"\n                                name=\"cnic\"\n                                required\n                                value={formData.cnic}\n                                onChange={(e) => onChangeFormData(e)}\n                              ></InputMask>\n                            </div>\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                              >\n                                Date of Birth\n                              </label>\n                              <input\n                                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                                type=\"date\"\n                                name=\"dateOfBirth\"\n                                required\n                                value={formData.dateOfBirth}\n                                onChange={(e) => onChangeFormData(e)}\n                              />\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                              >\n                                Mobile\n                              </label>\n                              <InputMask\n                                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                                type=\"text\"\n                                mask=\"9999-9999999\"\n                                placeholder=\"9999-9999999\"\n                                name=\"mobile\"\n                                required\n                                value={formData.mobile}\n                                onChange={(e) => onChangeFormData(e)}\n                              ></InputMask>\n                            </div>\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                              >\n                                Phone\n                              </label>\n                              <InputMask\n                                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                                type=\"text\"\n                                mask=\"9999-9999999\"\n                                placeholder=\"9999-9999999\"\n                                name=\"phone\"\n                                required\n                                value={formData.phone}\n                                onChange={(e) => onChangeFormData(e)}\n                              ></InputMask>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Email\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              placeholder=\"Email\"\n                              name=\"email\"\n                              required\n                              value={formData.email}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                              >\n                                Cnic Front\n                              </label>\n                              <div className=\"flex items-center justify-left w-full\">\n                                <FilePond\n                                  files={cnicFront}\n                                  allowMultiple={false}\n                                  allowFileEncode={true}\n                                  name=\"cnicFront\"\n                                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                  className=\"w-full h-auto \"\n                                  allowImagePreview={false}\n                                >\n                                  {\" \"}\n                                </FilePond>\n                              </div>\n                            </div>\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                              >\n                                Cnic Back\n                              </label>\n                              <div className=\"flex items-center justify-left w-full\">\n                                <FilePond\n                                  files={cnicBack}\n                                  allowMultiple={false}\n                                  allowFileEncode={true}\n                                  name=\"cnicBack\"\n                                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                  className=\"w-full h-auto \"\n                                  allowImagePreview={false}\n                                >\n                                  {\" \"}\n                                </FilePond>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                            <div className=\"grid grid-cols-1\">\n                              <label\n                                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                              >\n                                Student Photo\n                              </label>\n                              <div className=\"flex items-center justify-left w-full\">\n                                <FilePond\n                                  files={studentPhoto}\n                                  allowMultiple={false}\n                                  allowFileEncode={true}\n                                  name=\"studentPhoto\"\n                                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                  className=\"w-full h-auto \"\n                                  allowImagePreview={false}\n                                >\n                                  {\" \"}\n                                </FilePond>\n                              </div>\n                            </div>\n                          </div>\n                          {/* <!-- buttons --> */}\n                          <hr className=\"mt-5 border\" />\n                          <div\n                            className=\"\n                  flex\n                  items-center\n                  justify-center\n                  md:gap-8\n                  gap-4\n                  pt-5\n                  pb-5\n                \"\n                          >\n                            <button\n                              className=\"\n                    w-auto\n                    bg-red-400\n                    hover:bg-red-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                              type=\"button\"\n                              onClick={() => changeNewApplicant()}\n                            >\n                              Cancel\n                            </button>\n                            <button\n                              className=\"\n                    w-auto\n                    bg-green-400\n                    hover:bg-green-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                              type=\"submit\"\n                            >\n                              CREATE\n                            </button>\n                          </div>\n                        </div>\n                      </form>\n                    </div>\n                    {/* End of pop up section */}\n                    {/* <!-- popup section applicant --> */}\n                    {applicantPopUP && (\n                      <ApplicantsPopUp\n                        changeVisibility={changePopUp}\n                        appId={appIdToPop}\n                        applicants={applicants}\n                      />\n                    )}\n                    {/* <div\n                className={`h-full w-full bg-white absolute top-0 left-0 ${applicantPop}`}\n              >\n                <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"flex\">\n                      <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                        Kabib Ashware\n                      </h1>\n                    </div>\n                  </div> */}\n                    {/* <!-- 1 row --> */}\n                    {/* <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      >\n                        Name\n                      </label>\n                      <input\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                        type=\"text\"\n                        value=\"Kabib Ashware\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      >\n                        Gender\n                      </label>\n                      <select\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      bg-gray-100\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                      >\n                        <option>Male</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      >\n                        CNIC\n                      </label>\n                      <input\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                        type=\"text\"\n                        value=\"123452587459\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      >\n                        Date of Birth\n                      </label>\n                      <input\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                        type=\"text\"\n                        value=\"12/10/2010\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      >\n                        Mobile\n                      </label>\n                      <input\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                        type=\"text\"\n                        value=\"+54-8956-896-896\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n                      >\n                        Phone\n                      </label>\n                      <input\n                        className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                        type=\"text\"\n                        value=\"56984512\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                    <label\n                      className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                    >\n                      Email\n                    </label>\n                    <input\n                      className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                      type=\"text\"\n                      value=\"test@student.com\"\n                    /> */}\n                  </div>\n                  {/* <!-- buttons --> */}\n                  {/* <hr className=\"mt-5 border\" />\n                  <div\n                    className=\"\n                  flex\n                  items-center\n                  justify-center\n                  md:gap-8\n                  gap-4\n                  pt-5\n                  pb-5\n                \"\n                  >\n                    <button\n                      className=\"\n                    w-auto\n                    bg-red-400\n                    hover:bg-red-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                      onClick={() => changeApplicantPop()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      className=\"\n                    w-auto\n                    bg-green-400\n                    hover:bg-green-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                    >\n                      SAVE\n                    </button>\n                  </div>\n                </div>\n              </div> */}\n                  {/* End of pop up section */}\n                </div>\n              )}\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nApplicantsSt.propTypes = {\n  getApplicants: PropTypes.func.isRequired,\n  updateApplicant: PropTypes.func.isRequired,\n  newApplicant: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  applicants: state.aplicants,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  getApplicants,\n  updateApplicant,\n  newApplicant,\n})(ApplicantsSt);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\LoginS.jsx",["315"],"import React, { Fragment } from \"react\";\n//import PropTypes from \"prop-types\";\n//import Spinner from \"./Spinner\";\nimport Header from \"../individual/Header\";\nimport \"@material-tailwind/react/Dropdown\";\n\nfunction LoginS() {\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <Header />\n        <main className=\"w-full h-180/2 padding-12\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-3/4 centerSom bg-white\">\n              {/* <div className=\"w-full h-3/4 centerSom bg-transparent grid grid-cols-2 gap-5\">\n              <section className=\"h-full bg-white py-20\">\n                <div id=\"title\" className=\"h-1/5 grid grid-cols-4\">\n                  <div className=\"col-span-1\"></div>\n                  <div className=\"col-span-2 h-full fontRoboto text-center\">\n                    <h2 className=\"fontRoboto text-6xl font-thin border-b border-black\">\n                      Applications\n                    </h2>\n                  </div>\n                </div>\n                <div id=\"title\" className=\"h-4/5 grid grid-cols-2\">\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-blue-300\n                  \"\n                    >\n                      21\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      New\n                    </h3>\n                  </div>\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-gray-300\n                  \"\n                    >\n                      15\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Pending\n                    </h3>\n                  </div>\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-red-300\n                  \"\n                    >\n                      1\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Denied\n                    </h3>\n                  </div>\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-green-200\n                  \"\n                    >\n                      10\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Approved\n                    </h3>\n                  </div>\n                </div>\n              </section>\n              <section className=\"h-full bg-white py-20\">\n                <div id=\"title\" className=\"h-1/5 grid grid-cols-4\">\n                  <div className=\"col-span-1\"></div>\n                  <div className=\"col-span-2 h-full fontRoboto text-center\">\n                    <h2 className=\"fontRoboto text-6xl font-thin border-b border-black\">\n                      Payments\n                    </h2>\n                  </div>\n                </div>\n                <div id=\"title\" className=\"h-4/5 grid grid-cols-2\">\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-blue-300\n                  \"\n                    >\n                      40\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Month\n                    </h3>\n                  </div>\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-red-300\n                  \"\n                    >\n                      24\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Pending\n                    </h3>\n                  </div>\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-gray-300\n                  \"\n                    >\n                      100\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Students\n                    </h3>\n                  </div>\n                  <div className=\"col-span-1 border-black relative text-center\">\n                    <h2\n                      className=\"\n                    w-full\n                    h-4/5\n                    fontRoboto\n                    font-black\n                    text-8xl\n                    centerSom\n                    text-green-200\n                  \"\n                    >\n                      16\n                    </h2>\n                    <h3\n                      className=\"\n                    w-1/2\n                    h-1/5\n                    absolute\n                    bottom-5\n                    centerHorizontal\n                    fontRoboto\n                    font-light\n                    text-4xl\n                    border-t\n                  \"\n                    >\n                      Approved\n                    </h3>\n                  </div>\n                </div>\n              </section>\n            </div> */}\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nLoginS.propTypes = {};\nconst mapStateToProps = (state) => ({});\n\nexport default LoginS;\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Students.jsx",["316","317","318"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n//import PropTypes from \"prop-types\";\n//import Spinner from \"./Spinner\";\nimport Header from \"../individual/Header\";\nimport \"@material-tailwind/react/Dropdown\";\nimport { connect } from \"react-redux\";\nimport { getStudents } from \"../../actions/students\";\nimport { getScholarshipsAdmin } from \"../../actions/scholarshipsAdmin\";\nimport Spinner from \"./Spinner\";\nimport StudentReportsAdmin from \"./StudentReportsAdmin\";\nimport StudentsInfoAdmin from \"./StudentsInfoAdmin\";\n\nfunction Students({\n  getStudents,\n  students,\n  getScholarshipsAdmin,\n  scholarshipsAdmin,\n}) {\n  const [paymentsPop, setPaymentsPop] = useState(false);\n  const [reportsPop, setReportsPop] = useState(false);\n  const [studentInfoPop, setStudentInfoPop] = useState(false);\n  const [studentData, setStudentData] = useState();\n  // const [studentInfoPop, setStudentInfoPop] = useState(\"hidden\");\n  const [cnPhoto, setCnPhoto] = useState(\"hidden\");\n  const [stPhoto, setStPhoto] = useState(\"hidden\");\n  const [prPhoto, setPrPhoto] = useState(\"hidden\");\n  const [idPhoto, setIdPhoto] = useState(\"hidden\");\n  const [bkPhoto, setBkPhoto] = useState(\"hidden\");\n  const [imgTop, setImgTop] = useState(0);\n  const [reportId, setReportId] = useState(0);\n  //getElementPosition\n  const getPosition = (buttonName) => {\n    setImgTop(window.scrollY + 100);\n  };\n  const changeCnPhoto = () => {\n    cnPhoto === \"hidden\" ? setCnPhoto(\" \") : setCnPhoto(\"hidden\");\n  };\n  const changeStPhoto = () => {\n    stPhoto === \"hidden\" ? setStPhoto(\" \") : setStPhoto(\"hidden\");\n  };\n  const changePrPhoto = () => {\n    prPhoto === \"hidden\" ? setPrPhoto(\" \") : setPrPhoto(\"hidden\");\n  };\n  const changeIdPhoto = () => {\n    idPhoto === \"hidden\" ? setIdPhoto(\" \") : setIdPhoto(\"hidden\");\n  };\n  const changeBkPhoto = () => {\n    bkPhoto === \"hidden\" ? setBkPhoto(\" \") : setBkPhoto(\"hidden\");\n  };\n  const changePaymentsPop = () => {\n    getPosition(\"something\");\n    setPaymentsPop(!paymentsPop);\n    //paymentsPop === \"hidden\" ? setPaymentsPop(\" \") : setPaymentsPop(\"hidden\");\n  };\n  // const updateData = (info) => {\n  //   setStudentData(info);\n  // }\n  const changeReportPopClose = () => {\n    setReportsPop(!reportsPop);\n  };\n  const changeReportsPop = (e) => {\n    getPosition(\"something\");\n    setReportId(e.target.id);\n    setReportsPop(!reportsPop);\n    //paymentsPop === \"hidden\" ? setPaymentsPop(\" \") : setPaymentsPop(\"hidden\");\n  };\n  const changeStudentInfoPopClose = () => {\n    setStudentInfoPop(!studentInfoPop);\n  };\n  const changeStudentInfoPop = (info) => {\n    setStudentData(info);\n    getPosition(\"something\");\n    setStudentInfoPop(!studentInfoPop);\n  };\n  useEffect(() => {\n    getStudents();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <Header />\n        <main className=\"w-1/2 h-180/2 absolute centerHorizontal sm2:p-5 lg3:w-3/5 lg2:w-3/4 lg1:w-180/2\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-180/2 centerSom bg-white\">\n              <div\n                className=\"\n              w-full\n              h-20/2\n              bg-white\n              rounded-2xl\n              relative\n              sm3:h-24/2\n              usm:h-1/3\n            \"\n              >\n                <div\n                  className=\"\n                w-full\n                h-1/2\n                px-3\n                absolute\n                centerVertical\n                grid grid-cols-7\n                gap-4\n                lg1:w-full\n                sm3:w-full sm3:ml-0 sm3:gap-1 sm3:h-4/5\n                sm2:w-full sm2:ml-0 sm2:gap-1\n              \"\n                >\n                  <select\n                    className=\"\n                  bg-white\n                  h-full\n                  px-3\n                  col-span-2\n                  w-full\n                  rounded-md\n                  border border-gray-300\n                  shadow-sm\n                  sm3:col-span-3\n                  usm:col-span-6\n                \"\n                  >\n                    <option>bank</option>\n                    <option>ID</option>\n                    <option>CNIC</option>\n                    <option>ClassName</option>\n                    <option>All</option>\n                  </select>\n                  <input\n                    type=\"text\"\n                    className=\"\n                  col-span-3\n                  h-full\n                  px-2\n                  w-full\n                  rounded-md\n                  border border-gray-300\n                  shadow-sm\n                  focus:border-green-400\n                  usm:col-span-6\n                \"\n                    placeholder=\"\"\n                  />\n                  <button\n                    className=\"\n                  col-span-1\n                  rounded-md\n                  bg-green-400\n                  shadow-lg\n                  sm3:col-span-3\n                  usm:col-span-6\n                  text-white\n                \"\n                  >\n                    SEARCH\n                  </button>\n\n                  <div className=\"col-span-1 text-center sm3:col-span-3 usm:col-span-6\">\n                    <button\n                      className=\"\n                    col-span-1\n                    rounded-lg\n                    h-full\n                    bg-blue-400\n                    shadow-sm\n                    text-white\n                    px-3\n                  \"\n                    >\n                      Generate Report\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"w-full mb-8 overflow-hidden shadow-lg\">\n                <div className=\"w-full md2:overflow-x-auto\">\n                  <table className=\"w-full h-auto relative\">\n                    <thead className=\"w-full\">\n                      <tr\n                        className=\"\n                      text-md\n                      h-auto\n                      font-semibold\n                      tracking-wide\n                      text-left text-gray-900\n                      bg-gray-100\n                      uppercase\n                      border-b border-gray-600\n                    \"\n                      >\n                        <th className=\"px-4 py-3\">Name</th>\n                        <th className=\"px-4 py-3\">Reports</th>\n                        <th className=\"px-4 py-3\">Cnic</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"w-full bg-white\">\n                      {students.students !== null ? (\n                        students.students.map((stu) =>\n                          stu.applicants.map((student) => (\n                            <tr className=\"text-gray-700\">\n                              <td className=\"px-4 py-3 border\">\n                                <div className=\"flex items-center text-sm\">\n                                  <div className=\"relative w-8 h-8 mr-3 rounded-full md:block\">\n                                    <img\n                                      className=\"object-cover w-full h-full rounded-full\"\n                                      src=\"https://images.pexels.com/photos/5212324/pexels-photo-5212324.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n                                      alt=\"\"\n                                      loading=\"lazy\"\n                                    />\n                                    <div\n                                      className=\"absolute inset-0 rounded-full shadow-inner\"\n                                      aria-hidden=\"true\"\n                                    ></div>\n                                  </div>\n                                  <div>\n                                    <p\n                                      className=\"font-semibold text-black cursor-pointer\"\n                                      onClick={() =>\n                                        changeStudentInfoPop(student)\n                                      }\n                                    >\n                                      {student.name}\n                                    </p>\n                                  </div>\n                                </div>\n                              </td>\n                              <td\n                                id={student._id}\n                                className=\"px-4 py-3 text-ms font-semibold border cursor-pointer\"\n                                onClick={(e) => changeReportsPop(e)}\n                              >\n                                Student Reports\n                              </td>\n                              <td className=\"px-4 py-3 text-sm border\">\n                                {student.cnic}\n                              </td>\n                            </tr>\n                          ))\n                        )\n                      ) : (\n                        <Spinner />\n                      )}\n\n                      {/* <tr className=\"h-auto bg-white hidden\">\n                        <td\n                          colSpan=\"4\"\n                          className=\"col-span-4 bg-green-200 \"\n                        ></td>\n                      </tr>\n                      <tr className={`h-auto bg-white ${paymentsPop}`}>\n                        <td colSpan=\"4\" className=\"col-span-4\">\n                          <table className=\"w-full h-180/2\">\n                            <thead>\n                              <tr\n                                className=\"\n                              text-md\n                              font-semibold\n                              tracking-wide\n                              text-left text-gray-900\n                              bg-gray-100\n                              uppercase\n                              border-b border-gray-600\n                            \"\n                              >\n                                <th className=\"px-4 py-3\">Number</th>\n                                <th className=\"px-4 py-3\">Payment</th>\n                                <th className=\"px-4 py-3\">Payment status</th>\n                                <th className=\"px-4 py-3\">Payment Date</th>\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white\">\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        1\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Payment 1\n                                </td>\n                                <td\n                                  className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-green-400\n                              \"\n                                >\n                                  Made\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        1\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Payment 2\n                                </td>\n                                <td\n                                  className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-green-400\n                              \"\n                                >\n                                  Made\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        1\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Payment 3\n                                </td>\n                                <td\n                                  className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-green-400\n                              \"\n                                >\n                                  Made\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        1\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Payment 4\n                                </td>\n                                <td\n                                  className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-gray-400\n                              \"\n                                >\n                                  Pending\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        1\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Payment 5\n                                </td>\n                                <td\n                                  className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-gray-400\n                              \"\n                                >\n                                  pending\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr>\n                       Students Reports\n                      <tr className={`h-auto bg-white ${reportsPop}`}>\n                        <td colSpan=\"4\" className=\"col-span-4\">\n                          <table className=\"w-full h-180/2\">\n                            <thead>\n                              <tr\n                                className=\"\n                              text-md\n                              font-semibold\n                              tracking-wide\n                              text-left text-gray-900\n                              bg-gray-100\n                              uppercase\n                              border-b border-gray-600\n                            \"\n                              >\n                                <th className=\"px-4 py-3\">Number</th>\n                                <th className=\"px-4 py-3\">Report</th>\n                                <th className=\"px-4 py-3\">Date</th>\n                              </tr>\n                            </thead>\n                            <tbody className=\"bg-white\">\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        1\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Report 1\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        2\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Report 2\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        3\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Report 3\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        4\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Report 4\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                              <tr className=\"text-gray-700\">\n                                <td className=\"px-4 py-3 border\">\n                                  <div className=\"flex items-center text-sm\">\n                                    <div>\n                                      <p className=\"font-semibold text-black\">\n                                        5\n                                      </p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"px-4 py-3 text-ms font-semibold border\">\n                                  Report 5\n                                </td>\n                                <td className=\"px-4 py-3 text-sm border\">\n                                  24/01/2021\n                                </td>\n                              </tr>\n                            </tbody>\n                          </table>\n                        </td>\n                      </tr> */}\n                      {/* End of students  Reports */}\n                    </tbody>\n                  </table>\n                </div>\n                {/* reports student */}\n                {reportsPop && (\n                  <StudentReportsAdmin\n                    imgTop={imgTop}\n                    changeReportPopClose={changeReportPopClose}\n                    reportId={reportId}\n                  />\n                )}\n                {/* students payments */}\n                {/* <div\n                  style={{ top: imgTop }}\n                  className={`w-2/3 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${paymentsPop}`}\n                >\n                  <div className=\"w-full h-full relative\">\n                    <table className=\"w-full h-180/2\">\n                      <thead>\n                        <tr\n                          className=\"\n                              text-md\n                              font-semibold\n                              tracking-wide\n                              text-left text-gray-900\n                              bg-gray-100\n                              uppercase\n                              border-b border-gray-600\n                            \"\n                        >\n                          <th className=\"px-4 py-3\">Number</th>\n                          <th className=\"px-4 py-3\">Payment</th>\n                          <th className=\"px-4 py-3\">Payment status</th>\n                          <th className=\"px-4 py-3\">Payment Date</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"bg-white\">\n                        <tr className=\"text-gray-700\">\n                          <td className=\"px-4 py-3 border\">\n                            <div className=\"flex items-center text-sm\">\n                              <div>\n                                <p className=\"font-semibold text-black\">1</p>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 text-ms font-semibold border\">\n                            Payment 1\n                          </td>\n                          <td\n                            className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-green-400\n                              \"\n                          >\n                            Made\n                          </td>\n                          <td className=\"px-4 py-3 text-sm border\">\n                            24/01/2021\n                          </td>\n                        </tr>\n                        <tr className=\"text-gray-700\">\n                          <td className=\"px-4 py-3 border\">\n                            <div className=\"flex items-center text-sm\">\n                              <div>\n                                <p className=\"font-semibold text-black\">1</p>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 text-ms font-semibold border\">\n                            Payment 2\n                          </td>\n                          <td\n                            className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-green-400\n                              \"\n                          >\n                            Made\n                          </td>\n                          <td className=\"px-4 py-3 text-sm border\">\n                            24/01/2021\n                          </td>\n                        </tr>\n                        <tr className=\"text-gray-700\">\n                          <td className=\"px-4 py-3 border\">\n                            <div className=\"flex items-center text-sm\">\n                              <div>\n                                <p className=\"font-semibold text-black\">1</p>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 text-ms font-semibold border\">\n                            Payment 3\n                          </td>\n                          <td\n                            className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-green-400\n                              \"\n                          >\n                            Made\n                          </td>\n                          <td className=\"px-4 py-3 text-sm border\">\n                            24/01/2021\n                          </td>\n                        </tr>\n                        <tr className=\"text-gray-700\">\n                          <td className=\"px-4 py-3 border\">\n                            <div className=\"flex items-center text-sm\">\n                              <div>\n                                <p className=\"font-semibold text-black\">1</p>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 text-ms font-semibold border\">\n                            Payment 4\n                          </td>\n                          <td\n                            className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-gray-400\n                              \"\n                          >\n                            Pending\n                          </td>\n                          <td className=\"px-4 py-3 text-sm border\">\n                            24/01/2021\n                          </td>\n                        </tr>\n                        <tr className=\"text-gray-700\">\n                          <td className=\"px-4 py-3 border\">\n                            <div className=\"flex items-center text-sm\">\n                              <div>\n                                <p className=\"font-semibold text-black\">1</p>\n                              </div>\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 text-ms font-semibold border\">\n                            Payment 5\n                          </td>\n                          <td\n                            className=\"\n                                px-4\n                                py-3\n                                border\n                                text-md\n                                font-semibold\n                                bg-gray-400\n                              \"\n                          >\n                            pending\n                          </td>\n                          <td className=\"px-4 py-3 text-sm border\">\n                            24/01/2021\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                    <button\n                      className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                      onClick={() => changePaymentsPop()}\n                      type=\"button\"\n                    >\n                      X\n                    </button>\n                  </div>\n                </div> */}\n                {/* start of student info pop up */}\n                {studentInfoPop && (\n                  <StudentsInfoAdmin\n                    changeStudentInfoPop={changeStudentInfoPop}\n                    imgTop={imgTop}\n                    studentData={studentData}\n                  />\n                )}\n\n                {/* end of student info pop up */}\n              </div>\n            </div>\n          </div>\n        </main>\n        {/* start of images pop ups */}\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/3 border ${cnPhoto}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/Pakistani-CNIC-of-chinese-man.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeCnPhoto()}\n            >\n              X\n            </button>\n          </div>\n        </div>\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/5 border ${stPhoto}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/graduate-member.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeStPhoto()}\n            >\n              X\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/3 border ${prPhoto}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/Pakistani-CNIC-of-chinese-man.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changePrPhoto()}\n            >\n              X\n            </button>\n          </div>\n        </div>\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/3 border ${idPhoto}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/Pakistani-CNIC-of-chinese-man.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeIdPhoto()}\n            >\n              X\n            </button>\n          </div>\n        </div>\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/3 border ${bkPhoto}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/MeezanBank_PK.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeBkPhoto()}\n            >\n              X\n            </button>\n          </div>\n        </div>\n        {/* End of images pop ups */}\n      </div>\n    </Fragment>\n  );\n}\n\nStudents.propTypes = {\n  getStudents: PropTypes.func.isRequired,\n  getScholarshipsAdmin: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  students: state.students,\n  scholarshipsAdmin: state.scholarshipsAdmin,\n});\n\nexport default connect(mapStateToProps, { getStudents, getScholarshipsAdmin })(\n  Students\n);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ScholarshipsST.jsx",["319","320","321","322","323","324","325","326"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport HeaderUser from \"../individual/HeaderUser\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"./Spinner\";\nimport { setAlert } from \"../../actions/alert\";\nimport InputMask from \"react-input-mask\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//redux stuff\nimport { connect } from \"react-redux\";\nimport {\n  newScholarship,\n  getScholarships,\n  updateScholarship,\n} from \"../../actions/scholarships\";\nimport { getApplicants } from \"../../actions/aplicants\";\nimport { getParents } from \"../../actions/parents\";\nimport { getBanks } from \"../../actions/banks\";\nimport { getOptions } from \"../../actions/options\";\nimport ScholarshipPopUp from \"./ScholarshipPopUp\";\n//filepond stuff\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\nfunction ScholarshipsST({\n  newScholarship,\n  updateScholarship,\n  getScholarships,\n  scholarships,\n  getApplicants,\n  applicants,\n  getParents,\n  parents,\n  getBanks,\n  banks,\n  setAlert,\n  getOptions,\n  options,\n}) {\n  //handle images\n  const [adminReceipt, setAdminReceipt] = useState();\n  const [cardId, setCardId] = useState();\n  //---------------------------------\n  const [scholarshipPopUp, setScholarshipPopUp] = useState(false);\n  const [scholIdToPop, setScholIdToPop] = useState({\n    id: undefined,\n  });\n  const [newSchoPop, setNewSchoPop] = useState(\"hidden\");\n  const [schoPop, setSchoPop] = useState(\"hidden\");\n  const [imageCnPop, setImageCnPop] = useState(\"hidden\");\n  const [imageStPop, setImageStPop] = useState(\"hidden\");\n  const [imageIdPop, setImageIdPop] = useState(\"hidden\");\n  const [formData, setFormData] = useState({\n    applicant: \"\",\n    parent1: \"\",\n    parent2: \"\",\n    institutionName: \"\",\n    institutionType: \"\",\n    level: \"\",\n    pursuingEducation: \"\",\n    institutionEmail: \"\",\n    institutionPhone: \"\",\n    institutionJoinDate: \"\",\n    institutionAddress: \"\",\n    scholarshipStartDate: \"\",\n    scholarshipEndDate: \"\",\n    requiredFees: \"\",\n    // reports: [\n    //     {\n    //         level: \"3 grade\",\n    //         grades: \"2.4\",\n    //         dateOfExam: \"29-01-15\",\n    //         dateOfResult: \"20-01-16\",\n    //         resultReceivedOn: \"29-01-16\"\n    //     }\n    // ],\n    bankAccount: \"\",\n  });\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const changeNewSchoPop = () => {\n    newSchoPop === \"hidden\" ? setNewSchoPop(\" \") : setNewSchoPop(\"hidden\");\n  };\n  const changeSchoPop = () => {\n    schoPop === \"hidden\" ? setSchoPop(\" \") : setSchoPop(\"hidden\");\n  };\n  const changeImageCnPop = () => {\n    imageCnPop === \"hidden\" ? setImageCnPop(\" \") : setImageCnPop(\"hidden\");\n  };\n  const changeImageStPop = () => {\n    imageStPop === \"hidden\" ? setImageStPop(\" \") : setImageStPop(\"hidden\");\n  };\n  const changeImageIdPop = () => {\n    imageIdPop === \"hidden\" ? setImageIdPop(\" \") : setImageIdPop(\"hidden\");\n  };\n  const changeScholIdToPop = (e) => {\n    setScholIdToPop({ ...scholIdToPop, [\"id\"]: e.target.id });\n  };\n  const changeScholarshipPopUp = () => {\n    setScholarshipPopUp(!scholarshipPopUp);\n  };\n  const changeScholarshipPopUpFull = (e) => {\n    changeScholIdToPop(e);\n    changeScholarshipPopUp();\n  };\n  //handle images\n  const updateCardIdImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cardId\");\n    return data;\n  };\n  const updateAdminReceiptImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"adminReceipt\");\n    return data;\n  };\n  //--------------------\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    console.log(\"try here222\");\n    const cardId = await updateCardIdImg(e);\n    const adminReceipt = await updateAdminReceiptImg(e);\n    const newInfo = {\n      applicant: formData.applicant,\n      parent1: formData.parent1,\n      parent2: formData.parent2,\n      institutionName: formData.institutionName,\n      institutionType: formData.institutionType,\n      level: formData.level,\n      pursuingEducation: formData.pursuingEducation,\n      institutionEmail: formData.institutionEmail,\n      institutionPhone: formData.institutionPhone,\n      institutionJoinDate: formData.institutionJoinDate,\n      institutionAddress: formData.institutionAddress,\n      scholarshipStartDate: formData.scholarshipStartDate,\n      scholarshipEndDate: formData.scholarshipEndDate,\n      requiredFees: formData.requiredFees,\n      // reports: [\n      //     {\n      //         level: formData.reports[0].level,\n      //         grades: formData.reports[0].grades,\n      //         dateOfExam: formData.reports[0].dateOfExam,\n      //         dateOfResult: formData.reports[0].dateOfResult,\n      //         resultReceivedOn: formData.reports[0].resultReceivedOn\n      //     }\n      // ],\n      idCard: cardId,\n      admissionReceipt: adminReceipt,\n      bankAccount: formData.bankAccount,\n    };\n    console.log(\"try here\");\n    newScholarship(newInfo);\n    getApplicants();\n    getScholarships();\n    changeNewSchoPop();\n    setAlert(\"Creating Scholarship, please wait\", \"success\", 7000);\n  };\n  //get all the scholarships on render\n  useEffect(() => {\n    getApplicants();\n    getParents();\n    getBanks();\n    getScholarships();\n    getOptions();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <HeaderUser />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5 z-0 relative\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-180/2 centerSom bg-white lg1:bg-transparent\">\n              {scholarships.loading === true ? (\n                <Spinner />\n              ) : (\n                <div className=\"w-full h-full relative\">\n                  <div\n                    className=\"\n              grid\n              gap-6\n              pt-5\n              px-5\n              mb-8\n              md:grid-cols-2\n              lg:grid-cols-3\n              xl:grid-cols-4\n              usm:px-1\n            \"\n                  >\n                    {/* <!-- Card 1 --> */}\n                    <div\n                      className=\"\n                flex\n                items-center\n                p-4\n                py-10\n                cursor-pointer\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                dark:bg-gray-800\n                relative\n                text-center\n                md3:h-36\n              \"\n                      onClick={() => changeNewSchoPop()}\n                    >\n                      <div className=\"w-20 h-20 centerSom\">\n                        <img\n                          src=\"./img/icons8-add-100.png\"\n                          alt=\"add logo\"\n                          className=\"w-full h-full bg-cover\"\n                        />\n                        <div>\n                          <p className=\"mb-2 text-md font-medium text-gray-900\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\"></p>\n                          <p className=\"text-sm font-normal text-gray-800\">\n                            <span className=\"text-white bg-green-400\"></span>\n                          </p>\n                          <p className=\"text-sm font-normal text-gray-800\">\n                            <span className=\"text-white bg-gray-500\"></span>\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    {/* <!-- Card 2 --> */}\n                    {scholarships.scholarships !== null &&\n                    applicants.applicants !== null\n                      ? scholarships.scholarships.scholarships.map(\n                          (scholarship) => (\n                            <div\n                              id={scholarship._id}\n                              className=\"\n                          cursor-pointer\n                flex\n                items-center\n                p-4\n                bg-white\n                border-2 border-gray-200\n                rounded-lg\n                shadow-sm\n                dark:bg-gray-800\n              \"\n                              onClick={(e) => changeScholarshipPopUpFull(e)}\n                            >\n                              <div className=\"mr-4  pointer-events-none bg-blue-500 text-white rounded-full\">\n                                <img\n                                  className=\"rounded-full w-12 h-12 pointer-events-none\"\n                                  src=\"https://images.pexels.com/photos/5212324/pexels-photo-5212324.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n                                  alt=\"\"\n                                  loading=\"lazy\"\n                                />\n                              </div>\n                              <div className=\"pointer-events-none\">\n                                <p className=\"mb-2 text-md font-medium text-gray-900 pointer-events-none\">\n                                  {applicants.applicants.applicants\n                                    .filter(\n                                      (applicant) =>\n                                        applicant._id === scholarship.applicant\n                                    )\n                                    .map((applicanttt) => applicanttt.name)}\n                                </p>\n                                <p className=\"text-sm font-normal text-gray-800 pointer-events-none\">\n                                  CNIC:{\" \"}\n                                  {applicants.applicants.applicants\n                                    .filter(\n                                      (applicant) =>\n                                        applicant._id === scholarship.applicant\n                                    )\n                                    .map((applicanttt) => applicanttt.cnic)}\n                                </p>\n\n                                <p className=\"text-sm font-normal text-gray-800 pointer-events-none\">\n                                  STATUS:{\" \"}\n                                  <span\n                                    className={`text-white ${\n                                      scholarship.status === \"Approved\"\n                                        ? \"bg-green-400\"\n                                        : scholarship.status === \"Pending\"\n                                        ? \"bg-gray-400\"\n                                        : \"bg-red-400\"\n                                    } uppercase pointer-events-none`}\n                                  >\n                                    {scholarship.status}\n                                  </span>\n                                </p>\n                              </div>\n                            </div>\n                          )\n                        )\n                      : \" \"}\n                  </div>\n                  {/* pop up section */}\n                  {/* <!-- popup section  --> */}\n                  {scholarshipPopUp && (\n                    <ScholarshipPopUp\n                      changeVisibility={changeScholarshipPopUp}\n                      schoId={scholIdToPop}\n                    />\n                  )}\n                  {/* End of pop up section */}\n                  {/* pop up section */}\n                  {/* <!-- popup section new scholarship --> */}\n                  <div\n                    className={`h-full w-full bg-white absolute top-0 left-0 ${newSchoPop}`}\n                  >\n                    <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                      <form onSubmit={(e) => onSubmitForm(e)}>\n                        <div className=\"flex justify-center\">\n                          <div className=\"flex\">\n                            <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                              Scholarship Application\n                            </h1>\n                          </div>\n                        </div>\n                        {/* <!-- 1 row --> */}\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Select Applicant From List\n                          </label>\n                          <select\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  bg-gray-100\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            name=\"applicant\"\n                            required\n                            value={formData.applicant}\n                            onChange={(e) => onChangeFormData(e)}\n                          >\n                            <option defualt>Select</option>\n                            {applicants.applicants !== null\n                              ? applicants.applicants.applicants.map(\n                                  (applicant) => (\n                                    <option value={applicant._id}>\n                                      {applicant.name}\n                                    </option>\n                                  )\n                                )\n                              : \" \"}\n                          </select>\n                        </div>\n                        <div\n                          className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n                        >\n                          <Link to=\"/applicantsSt\">\n                            <button\n                              className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                              type=\"button\"\n                            >\n                              Create New Applicant\n                            </button>\n                          </Link>\n                        </div>\n                        <hr className=\"mt-5 border\" />\n                        {/* <!-- 6row --> */}\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Select Guardian/Parent From List\n                            </label>\n                            <select\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              name=\"parent1\"\n                              required\n                              value={formData.parent1}\n                              onChange={(e) => onChangeFormData(e)}\n                            >\n                              <option defualt>Select</option>\n                              {parents.parents !== null\n                                ? parents.parents.parents.map((parent) => (\n                                    <option value={parent._id}>\n                                      {\" \"}\n                                      {parent.name}\n                                    </option>\n                                  ))\n                                : \" \"}\n                            </select>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Select Guardian/Parent From List\n                            </label>\n                            <select\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              name=\"parent2\"\n                              required\n                              value={formData.parent2}\n                              onChange={(e) => onChangeFormData(e)}\n                            >\n                              <option defualt>Select</option>\n                              {parents.parents !== null\n                                ? parents.parents.parents.map((parent) => (\n                                    <option value={parent._id}>\n                                      {\" \"}\n                                      {parent.name}\n                                    </option>\n                                  ))\n                                : \" \"}\n                            </select>\n                          </div>\n                        </div>\n                        {/* <!-- 7 row --> */}\n                        <div\n                          className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n                        >\n                          <Link to=\"/parentsSt\">\n                            <button\n                              className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                              type=\"button\"\n                            >\n                              Create New Parent/Guardian\n                            </button>\n                          </Link>\n                        </div>\n                        <hr className=\"mt-5 border\" />\n                        {/* <!-- bank account --> */}\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Select Bank Account From List\n                          </label>\n                          <select\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  bg-gray-100\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            name=\"bankAccount\"\n                            required\n                            value={formData.bankAccount}\n                            onChange={(e) => onChangeFormData(e)}\n                          >\n                            <option defualt>Select</option>\n                            {banks.banks !== null\n                              ? banks.banks.banks.map((bank) => (\n                                  <option value={bank._id}>\n                                    {\" \"}\n                                    {bank.accNumber}\n                                  </option>\n                                ))\n                              : \" \"}\n                          </select>\n                        </div>\n                        <div\n                          className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n                        >\n                          <Link to=\"/bankSt\">\n                            <button\n                              className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                            >\n                              Create New Bank Account\n                            </button>\n                          </Link>\n                        </div>\n                        <hr className=\"mt-5 border\" />\n                        {/* <!-- FEES --> */}\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Required Fees\n                          </label>\n                          <input\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            type=\"text\"\n                            placeholder=\"Required Fees\"\n                            name=\"requiredFees\"\n                            required\n                            value={formData.requiredFees}\n                            onChange={(e) => onChangeFormData(e)}\n                          />\n                        </div>\n                        <hr className=\"mt-5 border\" />\n                        {/* select scholarship date */}\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Scholarship Start Date\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"date\"\n                              placeholder=\"start date\"\n                              name=\"scholarshipStartDate\"\n                              required\n                              value={formData.scholarshipStartDate}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Scholarship End Date\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"date\"\n                              placeholder=\"end date\"\n                              name=\"scholarshipEndDate\"\n                              required\n                              value={formData.scholarshipEndDate}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                        </div>\n                        <hr className=\"mt-5 border\" />\n                        {/* <!-- institution --> */}\n                        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            institution/School Name\n                          </label>\n                          <input\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            type=\"text\"\n                            placeholder=\"institution/School Name\"\n                            name=\"institutionName\"\n                            required\n                            value={formData.institutionName}\n                            onChange={(e) => onChangeFormData(e)}\n                          />\n                        </div>\n                        <div className=\"grid grid-cols-1 mx-7\">\n                          <label\n                            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n                          >\n                            Institution Type\n                          </label>\n                          <select\n                            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  bg-gray-100\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n                            name=\"institutionType\"\n                            required\n                            value={formData.institutionType}\n                            onChange={(e) => onChangeFormData(e)}\n                          >\n                            <option defualt>Select</option>\n                            {options.options !== null\n                              ? options.options\n                                  .filter(\n                                    (opt) => opt.type === \"Institution Type\"\n                                  )\n                                  .map((opti) => (\n                                    <option value={opti.name}>\n                                      {opti.name}\n                                    </option>\n                                  ))\n                              : \"\"}\n                          </select>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Which level/Grade/Semester are you in?\n                            </label>\n                            <select\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              name=\"level\"\n                              required\n                              value={formData.level}\n                              onChange={(e) => onChangeFormData(e)}\n                            >\n                              <option defualt>Select</option>\n                              {options.options !== null\n                                ? options.options\n                                    .filter(\n                                      (opt) =>\n                                        opt.type === \"Grade,Level,Semester\"\n                                    )\n                                    .map((opti) => (\n                                      <option value={opti.name}>\n                                        {opti.name}\n                                      </option>\n                                    ))\n                                : \"\"}\n                            </select>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Education you are pursuing\n                            </label>\n                            <select\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              name=\"pursuingEducation\"\n                              required\n                              value={formData.pursuingEducation}\n                              onChange={(e) => onChangeFormData(e)}\n                            >\n                              <option defualt>Select</option>\n                              {options.options !== null\n                                ? options.options\n                                    .filter(\n                                      (opt) => opt.type === \"Pursuing Education\"\n                                    )\n                                    .map((opti) => (\n                                      <option value={opti.name}>\n                                        {opti.name}\n                                      </option>\n                                    ))\n                                : \"\"}\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Institution/School Email\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              placeholder=\"Email\"\n                              name=\"institutionEmail\"\n                              required\n                              value={formData.institutionEmail}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Institution/School Phone\n                            </label>\n                            <InputMask\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              mask=\"9999-9999999\"\n                              placeholder=\"9999-9999999\"\n                              name=\"institutionPhone\"\n                              required\n                              value={formData.institutionPhone}\n                              onChange={(e) => onChangeFormData(e)}\n                            ></InputMask>\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Institution/School Joining Date\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"date\"\n                              placeholder=\"Joining date\"\n                              name=\"institutionJoinDate\"\n                              required\n                              value={formData.institutionJoinDate}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                            >\n                              Institution/School Address\n                            </label>\n                            <input\n                              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                              type=\"text\"\n                              placeholder=\"Adress\"\n                              name=\"institutionAddress\"\n                              required\n                              value={formData.institutionAddress}\n                              onChange={(e) => onChangeFormData(e)}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              ID CARD PHOTO\n                            </label>\n                            <div className=\"flex items-center justify-left w-full\">\n                              <FilePond\n                                files={cardId}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"cardId\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                          <div className=\"grid grid-cols-1\">\n                            <label\n                              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                            >\n                              ADMISSION RECEIPT COPY\n                            </label>\n                            <div className=\"flex items-center justify-left w-full\">\n                              <FilePond\n                                files={adminReceipt}\n                                allowMultiple={false}\n                                allowFileEncode={true}\n                                name=\"adminReceipt\"\n                                labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                                className=\"w-full h-auto \"\n                                allowImagePreview={false}\n                              >\n                                {\" \"}\n                              </FilePond>\n                            </div>\n                          </div>\n                        </div>\n                        {/* <div\n                    className=\"\n                flex\n                items-center\n                justify-self-end\n                mx-7\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n              \"\n                  >\n                    <button\n                      className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"button\"\n                    >\n                      SAVE INFORMATION\n                    </button>\n                  </div> */}\n                        <hr className=\"mt-5 border\" />\n\n                        {/* <div\n                    className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n                  >\n                    <button\n                      className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                    >\n                      UPDATE REQUIRED FEES\n                    </button>\n                  </div> */}\n\n                        {/* <!-- academic records -->  */}\n                        {/* <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                      >\n                        Which level/Grade/Semester you recently passed\n                      </label>\n                      <select\n                        className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                  name=\"\"\n                  required\n                  value={formData.pursuingEducation}\n                  onChange={(e) => onChangeFormData(e)}\n                      >\n                        <option>School</option>\n                        <option>Pre-School</option>\n                      </select>\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                      >\n                        % of Marks,GPA,GRADE\n                      </label>\n                      <input\n                        className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                        type=\"text\"\n                        placeholder=\"Marks, GPA, Grade\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                      >\n                        Date of exam\n                      </label>\n                      <input\n                        className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                        type=\"text\"\n                        placeholder=\"Date of exam\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                      >\n                        Date of result\n                      </label>\n                      <input\n                        className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                        type=\"text\"\n                        placeholder=\"Date of result\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                      >\n                        Results recived on:\n                      </label>\n                      <input\n                        className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                        type=\"text\"\n                        placeholder=\"Results recived on\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                      >\n                        Exam result sheet\n                      </label>\n                      <div className=\"flex items-center justify-left w-full\">\n                        <input type=\"file\" className=\"\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n                  >\n                    <button\n                      className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                    >\n                      UPDATE QUALIFICATION\n                    </button>\n                  </div>\n                     <hr className=\"mt-5 border\" />  */}\n\n                        {/* <!-- buttons --> */}\n                        <div className=\"flex items-center justify-center md:gap-8 gap-4 pt-5 pb-5\">\n                          <button\n                            className=\"\n                  w-auto\n                  bg-red-400\n                  hover:bg-red-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                            type=\"button\"\n                            onClick={() => changeNewSchoPop()}\n                          >\n                            Cancel\n                          </button>\n                          <button\n                            className=\"\n                  w-auto\n                  bg-green-400\n                  hover:bg-green-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                            type=\"submit\"\n                          >\n                            APPLY\n                          </button>\n                        </div>\n                      </form>\n                    </div>\n                  </div>\n                  {/* End of pop up section */}\n                  {/* end of pop up section */}\n                  {/* end of pop up section */}\n                </div>\n              )}\n            </div>\n          </div>\n        </main>\n        {/* start of images pop ups */}\n        {/* <div\n          className={`w-1/2 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/3 border ${imageCnPop}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/Pakistani-CNIC-of-chinese-man.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeImageCnPop()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/5 border ${imageStPop}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/graduate-member.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeImageStPop()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={`w-2/5 h-2/5 bg-white fixed  top-1/2   left-1/2 transform -translate-y-1/2 -translate-x-1/2 usm:h-1/3 border ${imageIdPop}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src=\"./img/Pakistani-CNIC-of-chinese-man.jpg\"\n              className=\"w-full h-full bg-cover\"\n              alt=\"bank check\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-black\"\n              onClick={() => changeImageIdPop()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div> */}\n        {/* End of images pop ups */}\n      </div>\n    </Fragment>\n  );\n}\n\nScholarshipsST.propTypes = {\n  updateScholarship: PropTypes.func.isRequired,\n  newScholarship: PropTypes.func.isRequired,\n  getScholarships: PropTypes.func.isRequired,\n  getApplicants: PropTypes.func.isRequired,\n  getParents: PropTypes.func.isRequired,\n  getBanks: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  getOptions: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  scholarships: state.scholarships,\n  applicants: state.aplicants,\n  parents: state.parents,\n  banks: state.banks,\n  options: state.options,\n});\n\nexport default connect(mapStateToProps, {\n  updateScholarship,\n  newScholarship,\n  getScholarships,\n  getApplicants,\n  getParents,\n  getBanks,\n  setAlert,\n  getOptions,\n})(ScholarshipsST);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\AdminPass.jsx",["327"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"../individual/Header\";\n\nfunction AdminPass(props) {\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <Header />\n        <main className=\"w-full h-180/2 padding-12 sm2:p-5\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"h-full w-full overflow-hidden flex items-center justify-center\">\n              {/* <!-- Root element for center items --> */}\n              <div className=\"w-full flex flex-col h-screen bg-gray-100\">\n                {/* <!-- Auth Card Container --> */}\n                <div className=\"grid place-items-center mx-2 my-20 sm:my-auto\">\n                  {/* <!-- Auth Card --> */}\n                  <div\n                    className=\"\n                  w-11/12\n                  p-12\n                  sm:w-8/12\n                  md:w-6/12\n                  lg:w-5/12\n                  2xl:w-4/12\n                  px-6\n                  py-10\n                  sm:px-10 sm:py-6\n                  bg-white\n                  rounded-lg\n                  shadow-md\n                  lg:shadow-lg\n                \"\n                  >\n                    {/* <!-- Card Title --> */}\n                    <h2\n                      className=\"\n                    text-center\n                    font-semibold\n                    text-3xl\n                    lg:text-4xl\n                    text-gray-800\n                  \"\n                    >\n                      Change Password\n                    </h2>\n\n                    <form className=\"mt-10\" method=\"POST\">\n                      {/* <!-- Name --> */}\n                      <label\n                        for=\"email\"\n                        className=\"block text-xs font-semibold text-gray-600 uppercase\"\n                      >\n                        Current Password\n                      </label>\n                      <input\n                        id=\"name\"\n                        type=\"name\"\n                        name=\"name\"\n                        placeholder=\" Current Password\"\n                        autocomplete=\"name\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n                      {/* <!-- Email Input --> */}\n                      <label\n                        for=\"email\"\n                        className=\"\n                      block\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                      mt-2\n                    \"\n                      >\n                        New Password\n                      </label>\n                      <input\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"New Password\"\n                        placeholder=\"New password\"\n                        autocomplete=\"email\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n                      {/* <!-- Password Input --> */}\n                      <label\n                        for=\"password\"\n                        className=\"\n                      block\n                      mt-2\n                      text-xs\n                      font-semibold\n                      text-gray-600\n                      uppercase\n                    \"\n                      >\n                        Confirm Password\n                      </label>\n                      <input\n                        id=\"password\"\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Confirm password\"\n                        autocomplete=\"current-password\"\n                        className=\"\n                      block\n                      w-full\n                      py-3\n                      px-1\n                      mt-0\n                      mb-4\n                      text-gray-800\n                      appearance-none\n                      border-b-2 border-gray-100\n                      focus:text-gray-500\n                      focus:outline-none\n                      focus:border-gray-200\n                    \"\n                        required\n                      />\n\n                      {/* <!-- Auth Buttton --> */}\n                      <button\n                        type=\"submit\"\n                        className=\"\n                      w-full\n                      py-3\n                      mt-10\n                      bg-gray-800\n                      rounded-sm\n                      font-medium\n                      text-white\n                      uppercase\n                      focus:outline-none\n                      hover:bg-gray-700 hover:shadow-none\n                    \"\n                      >\n                        Change Password\n                      </button>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nAdminPass.propTypes = {};\n\nexport default AdminPass;\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Applications.jsx",["328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Options.jsx",["355","356"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"./Spinner\";\nimport { connect } from \"react-redux\";\nimport Header from \"../individual/Header\";\nimport \"@material-tailwind/react/Dropdown\";\nimport { newOption } from \"../../actions/options\";\n\nfunction Options({ newOption }) {\n  const [formData, setFormData] = useState({\n    type: \"\",\n    name: \"\",\n  });\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = (e) => {\n    e.preventDefault();\n    let data = {\n      type: formData.type,\n      name: formData.name,\n    };\n    newOption(data);\n    setFormData({\n      type: \"\",\n      name: \"\",\n    });\n  };\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <Header />\n        <main className=\"w-1/2 h-180/2 absolute centerHorizontal sm2:p-5 lg3:w-3/5 lg2:w-3/4 lg1:w-180/2\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-180/2 centerSom bg-transparent\">\n              <form className=\"w-full h-full \" onSubmit={(e) => onSubmit(e)}>\n                <div\n                  className=\"\n              w-full\n              h-20/2\n              bg-white\n              rounded-2xl\n              relative\n              usm:h-1/3\n              sm3:h-1/6\n            \"\n                >\n                  <div\n                    className=\"\n                w-full\n                h-1/2\n                px-3\n                absolute\n                centerVertical\n                grid grid-cols-8\n                gap-4\n                lg1:w-full lg1:ml-0 lg1:px-1\n                sm3:w-full sm3:ml-0 sm3:gap-1 sm3:h-4/5 sm3:px-1\n                sm2:w-full sm2:ml-0 sm2:gap-1 sm2:px-1\n              \"\n                  >\n                    <select\n                      className=\"\n                  bg-white\n                  h-full\n                  px-3\n                  col-span-2\n                  w-full\n                  rounded-md\n                  border border-gray-300\n                  shadow-sm\n                  sm3:col-span-4\n                  usm:col-span-8\n                \"\n                      name=\"type\"\n                      value={formData.type}\n                      onChange={(e) => onChangeFormData(e)}\n                    >\n                      <option default>Select</option>\n                      <option value=\"Institution Type\">Institution Type</option>\n                      <option value=\"bank\">Bank</option>\n                      <option value=\"Grade,Level,Semester\">\n                        Grade/Level/Semester\n                      </option>\n                      <option value=\"Pursuing Education\">\n                        Pursuing Education\n                      </option>\n                    </select>\n                    <input\n                      type=\"text\"\n                      className=\"\n                  col-span-3\n                  h-full\n                  px-2\n                  w-full\n                  rounded-md\n                  border border-gray-300\n                  shadow-sm\n                  focus:border-green-400\n                  sm3:col-span-4\n                  usm:col-span-8\n                \"\n                      placeholder=\"name\"\n                      name=\"name\"\n                      value={formData.name}\n                      onChange={(e) => onChangeFormData(e)}\n                    />\n                    <button\n                      className=\"\n                  col-span-1\n                  rounded-md\n                  bg-green-400\n                  shadow-lg\n                  sm3:col-span-4\n                  usm:col-span-8\n                  text-white\n                \"\n                      type=\"submit\"\n                    >\n                      ADD\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nOptions.propTypes = {\n  newOption: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({});\n\nexport default connect(null, { newOption })(Options);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Payments.jsx",["357","358"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"./Spinner\";\nimport { connect } from \"react-redux\";\nimport Header from \"../individual/Header\";\nimport \"@material-tailwind/react/Dropdown\";\nimport { getPayments } from \"../../actions/payments\";\n\nfunction Payments({ getPayments, payments }) {\n  // const [payedPop, setPayedPop] = useState(\"hidden\");\n  // const changePayedPop = () => {\n  //   if (payedPop === \"hidden\") {\n  //     setPayedPop(\" \");\n  //   } else {\n  //     setPayedPop(\"hidden\");\n  //   }\n  // };\n  useEffect(() => {\n    getPayments();\n  }, []);\n  return (\n    <Fragment>\n      <div className=\"w-full h-full relative\">\n        <Header />\n        <main className=\"w-3/4 h-180/2 absolute centerHorizontal sm2:p-5 lg3:w-2/3 lg2:w-4/5 lg1:w-180/2\">\n          <div className=\"w-full h-full relative\">\n            <div className=\"w-full h-180/2 centerSom bg-white\">\n              <div\n                className=\"\n              w-full\n              h-20/2\n              bg-white\n              rounded-2xl\n              relative\n              sm3:h-24/2\n              usm:h-1/3\n            \"\n              >\n                <div\n                  className=\"\n                w-full\n                h-1/2\n                px-3\n                absolute\n                centerVertical\n                grid grid-cols-7\n                gap-4\n                lg1:w-full\n                sm3:w-full sm3:ml-0 sm3:gap-1 sm3:h-4/5\n                sm2:w-full sm2:ml-0 sm2:gap-1\n              \"\n                >\n                  <select\n                    className=\"\n                  bg-white\n                  h-full\n                  px-3\n                  col-span-2\n                  w-full\n                  rounded-md\n                  border border-gray-300\n                  shadow-sm\n                  sm3:col-span-3\n                  usm:col-span-6\n                \"\n                  >\n                    <option>PaymentID</option>\n                    <option>Bank</option>\n                    <option>Date</option>\n                    <option>ID</option>\n                    <option>CNIC</option>\n                    <option>ClassName</option>\n                    <option>All</option>\n                  </select>\n                  <input\n                    type=\"text\"\n                    className=\"\n                  col-span-3\n                  h-full\n                  px-2\n                  w-full\n                  rounded-md\n                  border border-gray-300\n                  shadow-sm\n                  focus:border-green-400\n                  usm:col-span-6\n                \"\n                    placeholder=\"\"\n                  />\n                  <button\n                    className=\"\n                  col-span-1\n                  rounded-md\n                  bg-green-400\n                  shadow-lg\n                  sm3:col-span-3\n                  usm:col-span-6\n                  text-white\n                \"\n                  >\n                    SEARCH\n                  </button>\n\n                  <div className=\"col-span-1 text-center sm3:col-span-3 usm:col-span-6\">\n                    <button\n                      className=\"\n                    col-span-1\n                    rounded-lg\n                    h-full\n                    bg-blue-400\n                    shadow-sm\n                    text-white\n                    px-3\n                  \"\n                    >\n                      Generate Report\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"w-full mb-8 overflow-hidden shadow-lg\">\n                <div className=\"w-full lg2:overflow-x-auto\">\n                  <table className=\"w-full h-180/2\">\n                    <thead>\n                      <tr\n                        className=\"\n                      text-md\n                      font-semibold\n                      tracking-wide\n                      text-left text-gray-900\n                      bg-gray-100\n                      uppercase\n                      border-b border-gray-600\n                    \"\n                      >\n                        <th className=\"px-4 py-3\">#</th>\n                        <th className=\"px-4 py-3\">Cnic</th>\n                        <th className=\"px-4 py-3\">Student</th>\n                        <th className=\"px-4 py-3\">Status</th>\n                        <th className=\"px-4 py-3\">Cheque #</th>\n                        <th className=\"px-4 py-3\">Amount</th>\n                        <th className=\"px-4 py-3\">Payment date</th>\n                        <th className=\"px-4 py-3\">Payment From</th>\n                        <th className=\"px-4 py-3\">Payment to</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white\">\n                      {payments.payments !== null ? (\n                        payments.payments.map((pay) => (\n                          <tr className=\"text-gray-700\">\n                            <td className=\"px-2 py-2 border\">1</td>\n                            <td className=\"px-2 py-2 border\">{pay.cnic}</td>\n                            <td className=\"px-4 py-3 border\">\n                              <div className=\"flex items-center text-sm\">\n                                <div className=\"relative w-8 h-8 mr-3 rounded-full md:block\">\n                                  <img\n                                    className=\"object-cover w-full h-full rounded-full\"\n                                    src=\"https://images.pexels.com/photos/5212324/pexels-photo-5212324.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n                                    alt=\"\"\n                                    loading=\"lazy\"\n                                  />\n                                  <div\n                                    className=\"absolute inset-0 rounded-full shadow-inner\"\n                                    aria-hidden=\"true\"\n                                  ></div>\n                                </div>\n                                <div>\n                                  <p className=\"font-semibold text-black\">\n                                    {pay.name}\n                                  </p>\n                                </div>\n                              </div>\n                            </td>\n                            <td\n                              className=\"\n                        px-4\n                        py-3\n                        border\n                        text-md\n                        font-semibold\n                        bg-green-400\n                      \"\n                            >\n                              {pay.status}\n                            </td>\n                            <td className=\"px-2 py-2 border\">\n                              {pay.cheqNumber}\n                            </td>\n                            <td className=\"px-2 py-2 border\">{pay.amount}</td>\n                            <td className=\"px-4 py-3 text-sm border\">\n                              {pay.cheqDate}\n                            </td>\n                            <td className=\"px-4 py-3 text-sm border\">\n                              {pay.approvedFrom}\n                            </td>\n                            <td className=\"px-4 py-3 text-sm border\">\n                              {pay.approvedTo}\n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n                        <Spinner />\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              {/* <!-- pop up section --> */}\n              <div\n                className={`h-full w-full bg-white absolute top-0 left-0 hidden`}\n              >\n                <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"flex\">\n                      <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                        Payed Scholarship\n                      </h1>\n                    </div>\n                  </div>\n                  {/* <!-- 1 row --> */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Cheque Date\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        Value=\"24/5/2021\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Cheque #\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"1524562358456\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Starting Month\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"05/24/2021\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Ending Month:\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"24/08/2021\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Amount\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"20\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Date of Approval\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"24/05/2021\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Approved total Amount:{\" \"}\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"2500\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Approval given by:{\" \"}\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"Admin level 1\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Approved From:{\" \"}\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"24/05/2019\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Approval to:{\" \"}\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"24/052023\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Unused Funds:{\" \"}\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"1500\"\n                      />\n                    </div>\n                    <div className=\"grid grid-cols-1\">\n                      <label\n                        className=\"\n                              uppercase\n                              md:text-sm\n                              text-xs text-gray-500 text-light\n                              font-semibold\n                            \"\n                      >\n                        Months Left:{\" \"}\n                      </label>\n                      <input\n                        className=\"\n                              py-2\n                              px-3\n                              rounded-lg\n                              border border-gray-300\n                              mt-1\n                              focus:outline-none\n                              focus:ring-1\n                              focus:ring-gray-600\n                              focus:border-transparent\n                            \"\n                        type=\"text\"\n                        value=\"24\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 mx-7\">\n                    <label\n                      className=\"\n                            uppercase\n                            md:text-sm\n                            text-xs text-gray-500 text-light\n                            font-semibold\n                          \"\n                    >\n                      STATUS\n                    </label>\n                    <select\n                      className=\"\n                            py-2\n                            px-3\n                            rounded-lg\n                            border border-gray-300\n                            mt-1\n                            focus:outline-none focus:ring-1\n                            bg-gray-100\n                            focus:ring-gray-600 focus:border-transparent\n                          \"\n                    >\n                      <option>Approved</option>\n                    </select>\n                  </div>\n                  {/* <!-- buttons --> */}\n                  <hr className=\"mt-5 border\" />\n                  <div\n                    className=\"\n                          flex\n                          items-center\n                          justify-center\n                          md:gap-8\n                          gap-4\n                          pt-5\n                          pb-5\n                        \"\n                  >\n                    <button\n                      className=\"\n                            w-auto\n                            bg-red-400\n                            hover:bg-red-200\n                            rounded-lg\n                            shadow-xl\n                            font-medium\n                            text-white\n                            px-4\n                            py-2\n                          \"\n                    >\n                      Close\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </Fragment>\n  );\n}\n\nPayments.propTypes = {\n  payments: PropTypes.object.isRequired,\n  getPayments: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  payments: state.payments,\n});\n\nexport default connect(mapStateToProps, { getPayments })(Payments);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Pay.jsx",["359","360"],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\NewAdminUser.jsx",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\Alert.jsx",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\types.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\alert.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\parents.js",["361","362","363"],"import {\n    CREATE_PARENT,\n    UPDATE_PARENT,\n    PARENTS_ERRORS,\n    GET_PARENTS,\n    CNIC_PHOTO_SUCCESS,\n    CNIC_PHOTO_ERROR,\n    SALARY_PHOTO_ERROR,\n    SALARY_PHOTO_SUCCESS,\n    QUALI_PHOTO_SUCCESS,\n    QUALI_PHOTO_ERROR\n} from \"./types\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\n//create a new parent\nexport const newParent = (parentData) => async(dispatch) => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n    try {\n        const res = await axios.post(\"/api/parents\", parentData, config);\n        dispatch({\n            type: CREATE_PARENT,\n            payload: res.data,\n        });\n        dispatch(setAlert(\"Parent Created\", \"success\"));\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            console.log(errors);\n            errors.forEach((error) => {\n                dispatch(setAlert(error.msg, \"error\"));\n            });\n        }\n        dispatch({\n            type: PARENTS_ERRORS,\n        });\n    }\n};\n//edit\nexport const updateParent = (parentData, parentId) => async(dispatch) => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n    try {\n        const res = await axios.post(\n            `/api/parents/edit/${parentId}`,\n            parentData,\n            config\n        );\n        dispatch({\n            type: UPDATE_PARENT,\n            payload: res.data,\n        });\n        dispatch(setAlert(\"Parent Updated\", \"success\"));\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            errors.forEach((error) => {\n                dispatch(setAlert(error.msg, \"error\"));\n            });\n        }\n        dispatch({\n            type: PARENTS_ERRORS,\n        });\n    }\n};\n\n//Get all the flags\nexport const getParents = () => async(dispatch) => {\n    try {\n        const res = await axios.get(\"/api/parents\");\n        dispatch({\n            type: GET_PARENTS,\n            payload: res.data,\n        });\n    } catch (err) {\n        dispatch({\n            type: PARENTS_ERRORS,\n        });\n    }\n};\n//cnic photo\nexport const uploadCnic = (file) => async(dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    };\n    try {\n        const res = await axios.post(\"/api/uploads/parents/cnicphotos\", file, config);\n        dispatch({\n            type: CNIC_PHOTO_SUCCESS,\n        });\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            console.log(errors);\n            // errors.forEach((error) => {\n            //     dispatch(setAlert(error.msg, \"error\"));\n            // });\n        }\n        dispatch({\n            type: CNIC_PHOTO_ERROR,\n        });\n    }\n};\n//salary photo\nexport const uploadSalary = (file) => async(dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    };\n    try {\n        const res = await axios.post(\"/api/uploads/parents/salaryphotos\", file, config);\n        dispatch({\n            type: SALARY_PHOTO_SUCCESS,\n        });\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            console.log(errors);\n            // errors.forEach((error) => {\n            //     dispatch(setAlert(error.msg, \"error\"));\n            // });\n        }\n        dispatch({\n            type: SALARY_PHOTO_ERROR,\n        });\n    }\n};\n//salary photo\nexport const uploadQuali = (file) => async(dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n    };\n    try {\n        const res = await axios.post(\"/api/uploads/parents/qualiDocphotos\", file, config);\n        dispatch({\n            type: QUALI_PHOTO_SUCCESS,\n        });\n    } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n            console.log(errors);\n            // errors.forEach((error) => {\n            //     dispatch(setAlert(error.msg, \"error\"));\n            // });\n        }\n        dispatch({\n            type: QUALI_PHOTO_ERROR,\n        });\n    }\n};","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\banks.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\aplicants.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\scholarships.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\Spinner.jsx",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\HeaderUser.jsx",["364"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\n//import PropTypes from \"prop-types\";\n\nfunction HeaderUser({ logout }) {\n  const [drop, setDrop] = useState(\"hidden\");\n  const [mobMenu, setMobMenu] = useState(\"hidden\");\n  //const [htmlWidth, setHtmlWidth] = useState(window.innerWidth);\n  function checkClicked() {\n    //e.preventDefault();\n    drop === \"hidden\" ? setDrop(\"block\") : setDrop(\"hidden\");\n    console.log(\"you clicked button\");\n  }\n  function controlMobMenu() {\n    mobMenu === \"hidden\" ? setMobMenu(\"block\") : setMobMenu(\"hidden\");\n  }\n\n  return (\n    <Fragment>\n      <header\n        id=\"site-header\"\n        className=\"w-full h-20/2 relative px-5 lg1:px-2  bg-white text-gray-900 usm:h-20\"\n      >\n        <section className=\"navigation relative bg-white\">\n          <div className=\"nav-container\">\n            <div className=\"brand centerVertical text-gray-900 usm:text-lg\">\n              <Link to=\"/\">Scholarship App</Link>\n            </div>\n            <nav className=\"mt-4 lg1:mt-1 z-40\">\n              <div className=\"nav-mobile bg-transparent z-50\">\n                <a id=\"nav-toggle\" href=\"#!\" onClick={() => controlMobMenu()}>\n                  <span></span>\n                </a>\n              </div>\n              <ul className={`nav-list ${mobMenu} z-50`}>\n                <li>\n                  <Link to=\"/adminSide\">Dashboard</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/parentsSt\">Parents/Guardians</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/applicantsSt\">Applicants</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/bankSt\">Bank Accounts</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/scholarshipsSt\">Scholarships</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <a id=\"navDrop\" href=\"#!\" onClick={() => checkClicked()}>\n                    User\n                  </a>\n                  <ul class={`nav-dropdown ${drop}`}>\n                    <li className=\"text-gray-900\">\n                      <Link to=\"/userPassword\">Settings</Link>\n                    </li>\n                    <li className=\"text-gray-900\">\n                      <button\n                        className=\"w-full h-full bg-white pb-3 px-4 text-left\"\n                        onClick={logout}\n                      >\n                        Sign Out{\" \"}\n                      </button>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </section>\n      </header>\n    </Fragment>\n  );\n}\n\nHeaderUser.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { logout })(HeaderUser);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\LoginNav.jsx",["365"],"import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction LoginNav(props) {\n  const [mobMenu, setMobMenu] = useState(\"hidden\");\n  function controlMobMenu() {\n    mobMenu === \"hidden\" ? setMobMenu(\"block\") : setMobMenu(\"hidden\");\n  }\n\n  return (\n    <Fragment>\n      <header\n        id=\"site-header\"\n        className=\"w-full h-20/2 relative px-5 lg1:px-2  bg-white text-gray-900\"\n      >\n        <section className=\"navigation relative bg-white\">\n          <div className=\"nav-container\">\n            <div className=\"brand centerVertical text-gray-900 usm:text-lg\">\n              <Link to=\"/\">Scholarship App</Link>\n            </div>\n            <nav className=\"mt-4 lg1:mt-1 z-50\">\n              <div className=\"nav-mobile bg-transparent z-50\">\n                <a id=\"nav-toggle\" href=\"#!\" onClick={() => controlMobMenu()}>\n                  <span></span>\n                </a>\n              </div>\n              <ul className={`nav-list ${mobMenu} z-50`}>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/\">Log In</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/register\">Register</Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </section>\n      </header>\n    </Fragment>\n  );\n}\n\nLoginNav.propTypes = {};\n\nexport default LoginNav;\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ParentPopUp.jsx",["366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393"],"import React, { Fragment, useState, useEffect, Profiler } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InputMask from \"react-input-mask\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { newParent, updateParent, getParents } from \"../../actions/parents\";\nimport HeaderUser from \"../individual/HeaderUser\";\nimport { Link } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport { uploadCnic, uploadQuali, uploadSalary } from \"../../actions/parents\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//filepond\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\n\nfunction ParentPopUp({\n  updateParent,\n  getParents,\n  parents,\n  changeVisibility,\n  parentId,\n  setAlert,\n  uploadCnic,\n  uploadQuali,\n  uploadSalary,\n}) {\n  //handle images\n  const [cnicFront, setCnciFront] = useState();\n  const [cnicBack, setCnicBack] = useState();\n  const [salarySlip, setSalarySlip] = useState();\n  const [qualiDoc, setQualiDoc] = useState();\n  const [utilityOne, setUtilityOne] = useState();\n  const [utilitySec, setUtilitySec] = useState();\n  const [formB, setFormB] = useState();\n  //display image center of screen\n  const [imgTop, setImgTop] = useState(0);\n  //take care of the data\n  const [userParents, setUserParents] = useState([]);\n  const [startParent, setStartParent] = useState();\n  const [cnicPhoto, setCnicCopy] = useState(\"\");\n  const [salaryPhoto, setSalaryPhoto] = useState(\"\");\n  const [qualiPhoto, setQualiPhoto] = useState(\"\");\n  const onChangeCnic = (e) => setCnicCopy(e.target.files[0]);\n  const onChangeSalary = (e) => setSalaryPhoto(e.target.files[0]);\n  const onChangeQuali = (e) => setQualiPhoto(e.target.files[0]);\n  //console.log(parentId);\n  const clickedParent =\n    parents.parents !== null &&\n    parents.parents.parents.find((parent) => parent._id === parentId.id);\n  //parents.parents.parents.map((parent) => console.log(parent._id + \"=\" + parentId.id));\n  //console.log(clickedParent);\n  const reverseImg = (img) => {\n    return Buffer.from(img).toString(\"base64\");\n  };\n  //getElementPosition\n  const getPosition = (buttonName) => {\n    setImgTop(window.scrollY + 100);\n  };\n  const [formData, setFormData] = useState({\n    type: clickedParent !== null ? clickedParent.type : \" \",\n    gender: clickedParent !== null ? clickedParent.gender : \" \",\n    name: clickedParent !== null ? clickedParent.name : \" \",\n    cnic: clickedParent !== null ? clickedParent.cnic : \" \",\n    email: clickedParent !== null ? clickedParent.email : \" \",\n    mobile: clickedParent !== null ? clickedParent.mobile : \" \",\n    phone: clickedParent !== null ? clickedParent.phone : \" \",\n    cnicFrontImg:\n      clickedParent !== null ? reverseImg(clickedParent.cnicFrontImg) : \" \",\n    cnicFrontImgType:\n      clickedParent !== null ? clickedParent.cnicFrontImgType : \" \",\n    cnicBackImg:\n      clickedParent !== null ? reverseImg(clickedParent.cnicBackImg) : \" \",\n    cnicBackImgType:\n      clickedParent !== null ? clickedParent.cnicBackImgType : \" \",\n    salarySlipImg:\n      clickedParent !== null ? reverseImg(clickedParent.salarySlipImg) : \" \",\n    salarySlipImgType:\n      clickedParent !== null ? clickedParent.salarySlipImgType : \" \",\n    qualiDocImg:\n      clickedParent !== null ? reverseImg(clickedParent.qualiDocImg) : \" \",\n    qualiDocImgType:\n      clickedParent !== null ? clickedParent.qualiDocImgType : \" \",\n    utilityOneImg:\n      clickedParent !== null ? reverseImg(clickedParent.utilityOneImg) : \" \",\n    utilityOneImgType:\n      clickedParent !== null ? clickedParent.utilityOneImgType : \" \",\n    utilitySecImg:\n      clickedParent !== null ? reverseImg(clickedParent.utilitySecImg) : \" \",\n    utilitySecImgType:\n      clickedParent !== null ? clickedParent.utilitySecImgType : \" \",\n      formBImg:\n      clickedParent !== null ? reverseImg(clickedParent.formBImg) : \" \",\n    formBImgType:\n      clickedParent !== null ? clickedParent.formBImgType : \" \",\n  });\n  //handle images\n  const updateCnicFrontImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicFront\");\n    return data;\n  };\n  const updateCnicBackImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicBack\");\n    return data;\n  };\n  const updateSalarySlip = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"salarySlip\");\n    return data;\n  };\n  const updateQualiDoc = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"qualiDoc\");\n    return data;\n  };\n  const updateUtilityOne = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"utilityOne\");\n    return data;\n  };\n  const updateUtilitySec = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"utilitySec\");\n    return data;\n  };\n  const updateFormB = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"formB\");\n    return data;\n  };\n  const displayCnicFront = () => {\n    if (\n      clickedParent.cnicFrontImg != null &&\n      clickedParent.cnicFrontImgType != null\n    ) {\n      return `data: ${\n        clickedParent.cnicFrontImgType\n      };charset=utf-8;base64,${Buffer.from(clickedParent.cnicFrontImg).toString(\n        \"base64\"\n      )}`;\n    }\n  };\n  const displayCnicBack = () => {\n    if (\n      clickedParent.cnicBackImg != null &&\n      clickedParent.cnicBackImgType != null\n    ) {\n      return `data: ${\n        clickedParent.cnicBackImgType\n      };charset=utf-8;base64,${Buffer.from(clickedParent.cnicBackImg).toString(\n        \"base64\"\n      )}`;\n    }\n  };\n  const displaySalarySlip = () => {\n    if (\n      clickedParent.salarySlipImg != null &&\n      clickedParent.salarySlipImgType != null\n    ) {\n      return `data: ${\n        clickedParent.salarySlipImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedParent.salarySlipImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  const displayQualiDoc = () => {\n    if (\n      clickedParent.qualiDocImg != null &&\n      clickedParent.qualiDocImgType != null\n    ) {\n      return `data: ${\n        clickedParent.qualiDocImgType\n      };charset=utf-8;base64,${Buffer.from(clickedParent.qualiDocImg).toString(\n        \"base64\"\n      )}`;\n    }\n  };\n  const displayUtilityOne = () => {\n    if (\n      clickedParent.utilityOneImg != null &&\n      clickedParent.utilityOneImgType != null\n    ) {\n      return `data: ${\n        clickedParent.utilityOneImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedParent.utilityOneImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  const displayUtilitySec = () => {\n    if (\n      clickedParent.utilitySecImg != null &&\n      clickedParent.utilitySecImgType != null\n    ) {\n      return `data: ${\n        clickedParent.utilitySecImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedParent.utilitySecImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  const displayFormB = () => {\n    if (\n      clickedParent.formBImg != null &&\n      clickedParent.formBImgType != null\n    ) {\n      return `data: ${\n        clickedParent.formBImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedParent.formBImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  //-----------------------------------------------\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  //0000000000000000000000000000000000000000000000000000000000000000000000000000\n  //take care of the dinamic\n  // const [parentPop, setParentPop] = useState(\"hidden\");\n  // const [newParentPop, setNewParentPop] = useState(\"hidden\");\n  const [imagePopCnic, setImagePopCnic] = useState(\"hidden\");\n  const [imagePopSalary, setImagePopSalary] = useState(\"hidden\");\n  const [imagePopQuali, setImagePopQuali] = useState(\"hidden\");\n  const [imagePopCnicBack, setImagePopCnicBack] = useState(\"hidden\");\n  const [imageUtilityOne, setImageUtilityOne] = useState(\"hidden\");\n  const [imageUtilitySec, setImageUtilitySec] = useState(\"hidden\");\n  const [imageFormB, setImageFormB] = useState(\"hidden\");\n  const changeImagePopCnic = () => {\n    getPosition(\"something\");\n    if (imagePopCnic === \"hidden\") {\n      setImagePopCnic(\" \");\n    } else {\n      setImagePopCnic(\"hidden\");\n    }\n  };\n  const changeImagePopCnicBack = () => {\n    getPosition(\"something\");\n    imagePopCnicBack === \"hidden\"\n      ? setImagePopCnicBack(\" \")\n      : setImagePopCnicBack(\"hidden\");\n  };\n  const changeImagePopSalary = () => {\n    getPosition(\"something\");\n    if (imagePopSalary === \"hidden\") {\n      setImagePopSalary(\" \");\n    } else {\n      setImagePopSalary(\"hidden\");\n    }\n  };\n  const changeImagePopQuali = () => {\n    getPosition(\"something\");\n    if (imagePopQuali === \"hidden\") {\n      setImagePopQuali(\" \");\n    } else {\n      setImagePopQuali(\"hidden\");\n    }\n  };\n  const changeImageUtilityOne = () => {\n    getPosition(\"something\");\n    if (imageUtilityOne === \"hidden\") {\n      setImageUtilityOne(\" \");\n    } else {\n      setImageUtilityOne(\"hidden\");\n    }\n  };\n  const changeImageUtilitySec = () => {\n    getPosition(\"something\");\n    if (imageUtilitySec === \"hidden\") {\n      setImageUtilitySec(\" \");\n    } else {\n      setImageUtilitySec(\"hidden\");\n    }\n  };\n  const changeImageFormB = () => {\n    getPosition(\"something\");\n    if (imageFormB === \"hidden\") {\n      setImageFormB(\" \");\n    } else {\n      setImageFormB(\"hidden\");\n    }\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    const cnicFrontData = await updateCnicFrontImg(e);\n    const cnicBackData = await updateCnicBackImg(e);\n    const salarySlipData = await updateSalarySlip(e);\n    const qualiDocData = await updateQualiDoc(e);\n    const utilityOneData = await updateUtilityOne(e);\n    const utilitySecData = await updateUtilitySec(e);\n    const formBData = await updateFormB(e);\n    const newInfo = {\n      type: formData.type,\n      gender: formData.gender,\n      name: formData.name,\n      cnic: formData.cnic,\n      email: formData.email,\n      mobile: formData.mobile,\n      phone: formData.phone,\n      cnicFront:\n        cnicFrontData.size === 0\n          ? { data: formData.cnicFrontImg, type: formData.cnicFrontImgType }\n          : cnicFrontData,\n      cnicBack:\n        cnicBackData.size === 0\n          ? { data: formData.cnicBackImg, type: formData.cnicBackImgType }\n          : cnicBackData,\n      salarySlip:\n        salarySlipData.size === 0\n          ? { data: formData.salarySlipImg, type: formData.salarySlipImgType }\n          : salarySlipData,\n      qualiDoc:\n        qualiDocData.size === 0\n          ? { data: formData.qualiDocImg, type: formData.qualiDocImgType }\n          : qualiDocData,\n      utilityOne:\n        utilityOneData.size === 0\n          ? { data: formData.utilityOneImg, type: formData.utilityOneImgType }\n          : utilityOneData,\n      utilitySec:\n        utilitySecData.size === 0\n          ? { data: formData.utilitySecImg, type: formData.utilitySecImgType }\n          : utilitySecData,\n          formB:\n          formBData.size === 0\n            ? { data: formData.formBImg, type: formData.formBImgType }\n            : formBData,\n    };\n    updateParent(newInfo, parentId.id);\n    getParents();\n    changeVisibility();\n    setAlert(\"Updating Parent, Please Wait\", \"success\", 20000);\n  };\n  //000000000000000000000000000000000000000000000000000000000000000000000000000000000\n  // useEffect(() => {\n  //   getParents();\n  //   reloadDataforForm();\n  // }, [clickedParent]);\n  return (\n    <Fragment>\n      {/* start of new parent pop up */}\n      <div className={`h-full w-full bg-white absolute top-0 left-0`}>\n        <form onSubmit={(e) => onSubmit(e)}>\n          <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n            <div className=\"flex justify-center\">\n              <div className=\"flex\">\n                <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                  {startParent !== undefined ? startParent.name : \" \"}\n                </h1>\n              </div>\n            </div>\n            {/* <!-- 1 row --> */}\n            <div className=\"grid grid-cols-1 mx-7\">\n              <label\n                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n              ></label>\n              <select\n                value={formData.type}\n                name=\"type\"\n                onChange={(e) => onChange(e)}\n                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none focus:ring-1\n                      bg-gray-100\n                      focus:ring-gray-600 focus:border-transparent\n                    \"\n              >\n                <option defualt>Select</option>\n                <option value=\"parent\">Parent</option>\n                <option value=\"guardian\">Guardian</option>\n              </select>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Gender\n                </label>\n                <select\n                  name=\"gender\"\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        bg-gray-100\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  value={formData.gender}\n                  onChange={(e) => onChange(e)}\n                >\n                  <option defualt>Select</option>\n                  <option value=\"male\">Male</option>\n                  <option value=\"female\">Female</option>\n                </select>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Name\n                </label>\n                <input\n                  name=\"name\"\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  required\n                  value={formData.name}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  CNIC\n                </label>\n                <InputMask\n                  name=\"cnic\"\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  required\n                  mask=\"99999-9999999-9\"\n                  placeholder=\"99999-9999999-9\"\n                  value={formData.cnic}\n                  onChange={(e) => onChange(e)}\n                ></InputMask>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Email\n                </label>\n                <input\n                  name=\"email\"\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  required\n                  value={formData.email}\n                  onChange={(e) => onChange(e)}\n                />\n              </div>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Mobile\n                </label>\n                <InputMask\n                  name=\"mobile\"\n                  required\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  mask=\"9999-9999999\"\n                  placeholder=\"9999-9999999\"\n                  value={formData.mobile}\n                  onChange={(e) => onChange(e)}\n                ></InputMask>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Phone\n                </label>\n                <InputMask\n                  name=\"phone\"\n                  required\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  mask=\"9999-9999999\"\n                  placeholder=\"9999-9999999\"\n                  value={formData.phone}\n                  onChange={(e) => onChange(e)}\n                ></InputMask>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                  Cnic Front\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImagePopCnic()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2\">\n                  <FilePond\n                    files={cnicFront}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"cnicFront\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                  Cnic Back\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImagePopCnicBack()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2 \">\n                  <FilePond\n                    files={cnicBack}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"cnicBack\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                  Salary Slip\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImagePopSalary()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2\">\n                  <FilePond\n                    files={salarySlip}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"salarySlip\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                  Qualification Document\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImagePopQuali()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2\">\n                  <FilePond\n                    files={qualiDoc}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"qualiDoc\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                  Utility Bill 1\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImageUtilityOne()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2\">\n                  <FilePond\n                    files={utilityOne}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"utilityOne\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                  Utility Bill 2\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImageUtilitySec()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2\">\n                  <FilePond\n                    files={utilitySec}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"utilitySec\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n                >\n                 Form-B/FRC \n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImageFormB()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full -ml-2\">\n                  <FilePond\n                    files={formB}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"formB\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-center md:gap-8 gap-4 pt-5 pb-5\">\n              <button\n                className=\"\n                  w-auto\n                  bg-red-400\n                  hover:bg-red-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"button\"\n                onClick={() => changeVisibility()}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"\n                  w-auto\n                  bg-green-400\n                  hover:bg-green-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"submit\"\n              >\n                Add\n              </button>\n            </div>\n          </div>\n          {/* end of parent information */}\n          {/* handle images */}\n          <div\n            style={{ top: imgTop }}\n            className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imagePopCnic}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displayCnicFront() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImagePopCnic()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div\n            style={{ top: imgTop }}\n            className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imagePopCnicBack}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displayCnicBack() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImagePopCnicBack()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div\n            style={{ top: imgTop }}\n            className={`w-2/3 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imagePopSalary}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displaySalarySlip() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImagePopSalary()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div\n            style={{ top: imgTop }}\n            className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imagePopQuali}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displayQualiDoc() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImagePopQuali()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div\n            style={{ top: imgTop }}\n            className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imageUtilityOne}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displayUtilityOne() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImageUtilityOne()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div\n            style={{ top: imgTop }}\n            className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imageUtilitySec}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displayUtilitySec() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImageUtilitySec()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          <div\n            style={{ top: imgTop }}\n            className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imageFormB}`}\n          >\n            <div className=\"w-full h-full relative\">\n              <img\n                src={clickedParent !== null ? displayFormB() : \" \"}\n                className=\"w-full h-full bg-cover\"\n              />\n              <button\n                className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n                onClick={() => changeImageFormB()}\n                type=\"button\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n          {/* end of images */}\n        </form>\n      </div>\n    </Fragment>\n  );\n}\n\nParentPopUp.propTypes = {\n  newParent: PropTypes.func.isRequired,\n  updateParent: PropTypes.func.isRequired,\n  getParents: PropTypes.func.isRequired,\n  changeVisibility: PropTypes.func.isRequired,\n  visibility: PropTypes.string.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  parentId: PropTypes.string.isRequired,\n  uploadSalary: PropTypes.func.isRequired,\n  uploadQuali: PropTypes.func.isRequired,\n  uploadCnic: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  parents: state.parents,\n});\n\nexport default connect(mapStateToProps, {\n  newParent,\n  setAlert,\n  updateParent,\n  getParents,\n  uploadCnic,\n  uploadQuali,\n  uploadSalary,\n})(ParentPopUp);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\BankPopUp.jsx",["394","395"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InputMask from \"react-input-mask\";\nimport { setAlert } from \"../../actions/alert\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//redux stuff\nimport { connect } from \"react-redux\";\nimport { getBanks, updateBank } from \"../../actions/banks\";\nimport { getOptions } from \"../../actions/options\";\n//filepond\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\n\nfunction BankPopUp({\n  changeVisibility,\n  bankId,\n  banks,\n  getBanks,\n  updateBank,\n  setAlert,\n  getOptions,\n  options,\n}) {\n  //display image center of screen\n  const [imgTop, setImgTop] = useState(0);\n  //image hide\n  const [imagePop, setImagePop] = useState(\"hidden\");\n  const [checkImgFile, setCheckImgFile] = useState();\n  const clickedBank =\n    banks.banks !== null &&\n    banks.banks.banks.find((account) => account._id === bankId.id);\n  const imgDisplay = () => {\n    if (clickedBank.checkImg != null && clickedBank.checkImgType != null) {\n      return `data: ${\n        clickedBank.checkImgType\n      };charset=utf-8;base64,${Buffer.from(clickedBank.checkImg).toString(\n        \"base64\"\n      )}`;\n    }\n  };\n  //getElementPosition\n  const getPosition = (buttonName) => {\n    setImgTop(window.scrollY + 100);\n  };\n  const reverseImg = (img) => {\n    return Buffer.from(img).toString(\"base64\");\n  };\n  const [formData, setFormData] = useState({\n    bank: clickedBank !== null ? clickedBank.bank : \" \",\n    branchName: clickedBank !== null ? clickedBank.branchName : \" \",\n    accTitle: clickedBank !== null ? clickedBank.accTitle : \" \",\n    accNumber: clickedBank !== null ? clickedBank.accNumber : \" \",\n    accIban: clickedBank !== null ? clickedBank.accIban : \" \",\n    checkImg: clickedBank !== null ? reverseImg(clickedBank.checkImg) : \" \",\n    checkImgType: clickedBank !== null ? clickedBank.checkImgType : \" \",\n  });\n  const updateImgData = async (e) => {\n    const form = await new FormData(e.target);\n    const data = await form.get(\"checkImgFile\");\n    return data;\n  };\n  const changeImagePop = () => {\n    getPosition(\"something\");\n    imagePop === \"hidden\" ? setImagePop(\" \") : setImagePop(\"hidden\");\n  };\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmitUpdataBank = async (e) => {\n    e.preventDefault();\n    const data = await updateImgData(e);\n    let newInfo = {\n      bank: formData.bank,\n      branchName: formData.branchName,\n      accTitle: formData.accTitle,\n      accNumber: formData.accNumber,\n      accIban: formData.accIban,\n      imageToProcess:\n        data.size === 0\n          ? { data: formData.checkImg, type: formData.checkImgType }\n          : data,\n    };\n    // if (data.size === 0) {\n    //   newInfo = {\n    //     bank: formData.bank,\n    //     branchName: formData.branchName,\n    //     accTitle: formData.accTitle,\n    //     accNumber: formData.accNumber,\n    //     accIban: formData.accIban,\n    //     imageToProcess: null,\n    //   };\n    // } else {\n    //   newInfo = {\n    //     bank: formData.bank,\n    //     branchName: formData.branchName,\n    //     accTitle: formData.accTitle,\n    //     accNumber: formData.accNumber,\n    //     accIban: formData.accIban,\n    //     imageToProcess: data,\n    //   };\n    // }\n    //console.log(newInfo);\n    console.log(newInfo);\n    updateBank(newInfo, bankId.id);\n    getBanks();\n    changeVisibility();\n    setAlert(\"Uploading account, please wait\", \"success\", 7000);\n  };\n  return (\n    <Fragment>\n      <div className={`h-full w-full bg-white absolute top-0 left-0`}>\n        <form onSubmit={(e) => onSubmitUpdataBank(e)}>\n          <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n            <div className=\"flex justify-center\">\n              <div className=\"flex\">\n                <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                  {formData.accNumber}\n                </h1>\n              </div>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Bank\n                </label>\n                <select\n                  className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                  name=\"bank\"\n                  required\n                  value={formData.bank}\n                  onChange={(e) => onChangeFormData(e)}\n                >\n                  <option defualt>Select</option>\n                  {options.options !== null\n                    ? options.options\n                        .filter((opt) => opt.type === \"bank\")\n                        .map((opti) => (\n                          <option value={opti.name}>{opti.name}</option>\n                        ))\n                    : \"\"}\n                </select>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Branch Name\n                </label>\n                <input\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  placeholder=\"Branch name\"\n                  name=\"branchName\"\n                  required\n                  value={formData.branchName}\n                  onChange={(e) => onChangeFormData(e)}\n                />\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 mt-5 mx-7\">\n              <label\n                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n              >\n                Account Title\n              </label>\n              <input\n                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                type=\"text\"\n                placeholder=\"Account Title\"\n                name=\"accTitle\"\n                required\n                value={formData.accTitle}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n            <div className=\"grid grid-cols-1 mt-5 mx-7\">\n              <label\n                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n              >\n                Account Number\n              </label>\n              <input\n                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                type=\"text\"\n                placeholder=\"9999-9999-9999-9999\"\n                name=\"accNumber\"\n                required\n                value={formData.accNumber}\n                onChange={(e) => onChangeFormData(e)}\n              ></input>\n            </div>\n            <div className=\"grid grid-cols-1 mt-5 mx-7\">\n              <label\n                className=\"\n                      uppercase\n                      md:text-sm\n                      text-xs text-gray-500 text-light\n                      font-semibold\n                    \"\n              >\n                Account IBAN\n              </label>\n              <InputMask\n                className=\"\n                      py-2\n                      px-3\n                      rounded-lg\n                      border border-gray-300\n                      mt-1\n                      focus:outline-none\n                      focus:ring-1\n                      focus:ring-gray-600\n                      focus:border-transparent\n                    \"\n                type=\"text\"\n                mask=\"aa99-aaaa-9999-9999-9999-9999\"\n                placeholder=\"9999-9999-9999-9999-9999-9999\"\n                name=\"accIban\"\n                required\n                value={formData.accIban}\n                onChange={(e) => onChangeFormData(e)}\n              ></InputMask>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n                >\n                  Copy of CHEQUE\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <button\n                    className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\"\n                    type=\"button\"\n                    onClick={() => changeImagePop()}\n                  >\n                    Check Image\n                  </button>\n                </div>\n                <div className=\"flex items-center justify-left w-full\">\n                  <FilePond\n                    files={checkImgFile}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"checkImgFile\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"\n                  flex\n                  items-center\n                  justify-center\n                  md:gap-8\n                  gap-4\n                  pt-5\n                  pb-5\n                \"\n            >\n              <button\n                className=\"\n                    w-auto\n                    bg-red-400\n                    hover:bg-red-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                type=\"button\"\n                onClick={() => changeVisibility()}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"\n                    w-auto\n                    bg-green-400\n                    hover:bg-green-200\n                    rounded-lg\n                    shadow-xl\n                    font-medium\n                    text-white\n                    px-4\n                    py-2\n                  \"\n                type=\"submit\"\n              >\n                UPDATE\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div\n        style={{ top: imgTop }}\n        className={`w-2/3 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${imagePop}`}\n      >\n        <div className=\"w-full h-full relative\">\n          <img\n            src={clickedBank !== null ? imgDisplay() : \" \"}\n            className=\"w-full h-full bg-cover\"\n            alt=\"bank check\"\n          />\n          <button\n            className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n            onClick={() => changeImagePop()}\n          >\n            X\n          </button>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nBankPopUp.propTypes = {\n  changeVisibility: PropTypes.func.isRequired,\n  bankId: PropTypes.object.isRequired,\n  banks: PropTypes.object.isRequired,\n  getBanks: PropTypes.func.isRequired,\n  updateBank: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  getOptions: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  options: state.options,\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  getBanks,\n  updateBank,\n  getOptions,\n})(BankPopUp);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\individual\\Header.jsx",["396","397","398","399"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/auth\";\n//import PropTypes from \"prop-types\";\n\nfunction Header({ logout }) {\n  let history = useHistory();\n  const [drop, setDrop] = useState(\"hidden\");\n  const [mobMenu, setMobMenu] = useState(\"hidden\");\n  const [htmlWidth, setHtmlWidth] = useState(window.innerWidth);\n  function checkClicked() {\n    //e.preventDefault();\n    drop === \"hidden\" ? setDrop(\"block\") : setDrop(\"hidden\");\n    console.log(\"you clicked button\");\n  }\n  function controlMobMenu() {\n    mobMenu === \"hidden\" ? setMobMenu(\"block\") : setMobMenu(\"hidden\");\n  }\n  const redirectToMain = () => {\n    history.push(\"/\");\n    console.log(\"ejecuta\");\n  };\n\n  return (\n    <Fragment>\n      <header\n        id=\"site-header\"\n        className=\"w-full h-20/2 relative px-5 lg1:px-2  bg-white text-gray-900 \"\n      >\n        <section className=\"navigation relative bg-white \">\n          <div className=\"nav-container cursor-pointer\">\n            {/* <Link to=\"/\" className=\"w-full h-full\"> */}\n            <div className=\"brand centerVertical text-gray-900 usm:text-lg cursor-pointer\">\n              <Link to=\"/\">Scholarship App</Link>\n            </div>\n            {/* </Link> */}\n            <nav className=\"mt-4 lg1:mt-1 z-40\">\n              <div className=\"nav-mobile bg-transparent z-50\">\n                <a id=\"nav-toggle\" href=\"#!\" onClick={() => controlMobMenu()}>\n                  <span></span>\n                </a>\n              </div>\n              <ul className={`nav-list ${mobMenu} z-50`}>\n                <li>\n                  <Link to=\"/adminSide\">Dashboard</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/Students\">Students</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/applications\">Applications</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/payments\">Payments</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/pay\">Pay</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <Link to=\"/options\">Options</Link>\n                </li>\n                <li className=\"text-gray-900\">\n                  <a id=\"navDrop\" href=\"#!\" onClick={() => checkClicked()}>\n                    User\n                  </a>\n                  <ul class={`nav-dropdown ${drop}`}>\n                    <li className=\"text-gray-900\">\n                      <Link to=\"/adminPass\">Settings</Link>\n                    </li>\n                    <li className=\"text-gray-900\">\n                      <Link to=\"/newAdminUser\">New Admin User</Link>\n                    </li>\n                    <li className=\"text-gray-900\">\n                      <button\n                        className=\"w-full h-full bg-white pb-3 px-4 text-left\"\n                        onClick={logout}\n                      >\n                        Sign Out{\" \"}\n                      </button>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </section>\n      </header>\n    </Fragment>\n  );\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { logout })(Header);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ScholarshipPopUp.jsx",["400","401","402"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { setAlert } from \"../../actions/alert\";\nimport InputMask from \"react-input-mask\";\nimport {\n  getScholarships,\n  updateScholarship,\n  uploadReport,\n} from \"../../actions/scholarships\";\nimport { getApplicants } from \"../../actions/aplicants\";\nimport { getParents } from \"../../actions/parents\";\nimport { getBanks } from \"../../actions/banks\";\nimport { connect } from \"react-redux\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//filepond stuff\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\n\nfunction ScholarshipPopUp({\n  changeVisibility,\n  schoId,\n  updateScholarship,\n  getScholarships,\n  scholarships,\n  getApplicants,\n  applicants,\n  uploadReport,\n  getParents,\n  parents,\n  getBanks,\n  banks,\n  setAlert,\n  options,\n}) {\n  console.log(\"try here333\");\n  //handle images\n  const [adminReceipt, setAdminReceipt] = useState();\n  const [cardId, setCardId] = useState();\n  const [reportImg, setReportImg] = useState();\n  const [reportImgData, setReportImgData] = useState();\n  //---------------------------------\n  //display image center of screen\n  const [imgTop, setImgTop] = useState(0);\n  //hide/unhide images boxes\n  const [adminReceiptBox, setAdminReceiptBox] = useState(\"hidden\");\n  const [cardIdBox, setCardIdBox] = useState(\"hidden\");\n  const [reportImgBox, setReportImgBox] = useState(\"hidden\");\n\n  //hide/unhide reports\n  const [newRepo, setNewRepo] = useState(\"hidden\");\n  const changeNewRepo = () => {\n    newRepo === \"hidden\" ? setNewRepo(\" \") : setNewRepo(\"hidden\");\n  };\n  //reverse the image\n  const reverseImg = (img) => {\n    return Buffer.from(img).toString(\"base64\");\n  };\n  //take care of passed id\n  const clickedScholarship =\n    scholarships.scholarships !== null &&\n    scholarships.scholarships.scholarships.find(\n      (scholarship) => scholarship._id === schoId.id\n    );\n  console.log(clickedScholarship);\n  //getElementPosition\n  const getPosition = (buttonName) => {\n    //const elem = buttonnn1.top + window.scrollY;\n    setImgTop(window.scrollY + 100);\n  };\n\n  const [formData, setFormData] = useState({\n    applicant: clickedScholarship !== null ? clickedScholarship.applicant : \" \",\n    parent1: clickedScholarship !== null ? clickedScholarship.parent1 : \" \",\n    parent2: clickedScholarship !== null ? clickedScholarship.parent2 : \" \",\n    institutionName:\n      clickedScholarship !== null ? clickedScholarship.institutionName : \" \",\n    institutionType:\n      clickedScholarship !== null ? clickedScholarship.institutionType : \" \",\n    level: clickedScholarship !== null ? clickedScholarship.level : \" \",\n    pursuingEducation:\n      clickedScholarship !== null ? clickedScholarship.pursuingEducation : \" \",\n    institutionEmail:\n      clickedScholarship !== null ? clickedScholarship.institutionEmail : \" \",\n    institutionPhone:\n      clickedScholarship !== null ? clickedScholarship.institutionPhone : \" \",\n    institutionJoinDate:\n      clickedScholarship !== null\n        ? clickedScholarship.institutionJoinDate\n        : \" \",\n    institutionAddress:\n      clickedScholarship !== null ? clickedScholarship.institutionAddress : \" \",\n    requiredFees:\n      clickedScholarship !== null ? clickedScholarship.requiredFees : \" \",\n    scholarshipStartDate:\n      clickedScholarship !== null\n        ? clickedScholarship.scholarshipStartDate\n        : \" \",\n    scholarshipEndDate:\n      clickedScholarship !== null ? clickedScholarship.scholarshipEndDate : \" \",\n    // reports: [\n    //     {\n    //         level: \"3 grade\",\n    //         grades: \"2.4\",\n    //         dateOfExam: \"29-01-15\",\n    //         dateOfResult: \"20-01-16\",\n    //         resultReceivedOn: \"29-01-16\"\n    //     }\n    // ],\n    idCardImg:\n      clickedScholarship !== null\n        ? reverseImg(clickedScholarship.idCardImg)\n        : \" \",\n    idCardImgType:\n      clickedScholarship !== null ? clickedScholarship.idCardImgType : \" \",\n    admissionReceiptImg:\n      clickedScholarship !== null\n        ? reverseImg(clickedScholarship.admissionReceiptImg)\n        : \" \",\n    admissionReceiptImgType:\n      clickedScholarship !== null\n        ? clickedScholarship.admissionReceiptImgType\n        : \" \",\n    bankAccount:\n      clickedScholarship !== null ? clickedScholarship.bankAccount : \" \",\n  });\n  const [reportData, setReportData] = useState({\n    level: \" \",\n    grades: \" \",\n    dateOfExam: \" \",\n    dateOfResult: \" \",\n    resultReceivedOn: \" \",\n  });\n  //handle images\n  const updateCardIdImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cardId\");\n    return data;\n  };\n  const updateAdminReceiptImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"adminReceipt\");\n    return data;\n  };\n  const updateReportImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"reportImg\");\n    return data;\n  };\n  //--------------------\n  //hide/unhide image boxes\n  const changeIdCardBox = () => {\n    getPosition(\"something\");\n    cardIdBox === \"hidden\" ? setCardIdBox(\" \") : setCardIdBox(\"hidden\");\n  };\n  const changeAdminReceiptBox = () => {\n    getPosition(\"something\");\n    adminReceiptBox === \"hidden\"\n      ? setAdminReceiptBox(\" \")\n      : setAdminReceiptBox(\"hidden\");\n  };\n  //------------------------------------------------\n  const displayIdCard = () => {\n    if (\n      clickedScholarship.idCardImg != null &&\n      clickedScholarship.idCardImgType != null\n    ) {\n      return `data: ${\n        clickedScholarship.idCardImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedScholarship.idCardImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  const displayReportImg = (number) => {\n    if (\n      clickedScholarship.reports[number].examImg != null &&\n      clickedScholarship.reports[number].examImgType != null\n    ) {\n      setReportImgData(\n        `data: ${\n          clickedScholarship.reports[number].examImgType\n        };charset=utf-8;base64,${Buffer.from(\n          clickedScholarship.reports[number].examImg\n        ).toString(\"base64\")}`\n      );\n    }\n  };\n  const displayAdminReceipt = () => {\n    if (\n      clickedScholarship.admissionReceiptImg != null &&\n      clickedScholarship.admissionReceiptImgType != null\n    ) {\n      return `data: ${\n        clickedScholarship.admissionReceiptImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedScholarship.admissionReceiptImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  //----------------------------------------------------\n  const changeReportImgBox = (number) => {\n    displayReportImg(number);\n    reportImgBox === \"hidden\"\n      ? setReportImgBox(\" \")\n      : setReportImgBox(\"hidden\");\n  };\n  //----------------------------------------------------\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onChangeReportData = (e) =>\n    setReportData({ ...reportData, [e.target.name]: e.target.value });\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    const cardId = await updateCardIdImg(e);\n    const adminReceipt = await updateAdminReceiptImg(e);\n    const newInfo = {\n      applicant: formData.applicant,\n      parent1: formData.parent1,\n      parent2: formData.parent2,\n      institutionName: formData.institutionName,\n      institutionType: formData.institutionType,\n      level: formData.level,\n      pursuingEducation: formData.pursuingEducation,\n      institutionEmail: formData.institutionEmail,\n      institutionPhone: formData.institutionPhone,\n      institutionJoinDate: formData.institutionJoinDate,\n      institutionAddress: formData.institutionAddress,\n      requiredFees: formData.requiredFees,\n      scholarshipStartDate: formData.scholarshipStartDate,\n      scholarshipEndDate: formData.scholarshipEndDate,\n      idCard:\n        cardId.size === 0\n          ? { data: formData.idCardImg, type: formData.idCardImgType }\n          : cardId,\n      admissionReceipt:\n        adminReceipt.size === 0\n          ? {\n              data: formData.admissionReceiptImg,\n              type: formData.admissionReceiptImgType,\n            }\n          : adminReceipt,\n      bankAccount: formData.bankAccount,\n    };\n    updateScholarship(newInfo, schoId.id);\n    getApplicants();\n    getScholarships();\n    changeVisibility();\n    setAlert(\"Updating Scholarship, please wait\", \"success\", 7000);\n  };\n  const onSubmitReport = async (e) => {\n    e.preventDefault();\n    const examData = await updateReportImg(e);\n    const newInfo = {\n      level: reportData.level,\n      grades: reportData.grades,\n      dateOfExam: reportData.dateOfExam,\n      dateOfResult: reportData.dateOfResult,\n      resultReceivedOn: reportData.resultReceivedOn,\n      examImg: examData,\n    };\n    uploadReport(newInfo, schoId.id);\n    getApplicants();\n    getScholarships();\n    changeVisibility();\n    setAlert(\"Creating report, please wait\", \"success\", 7000);\n  };\n  return (\n    <div className={`h-full w-full bg-white absolute top-0 left-0 `}>\n      <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n        <div className=\"flex justify-center\">\n          <div className=\"flex\">\n            <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n              {applicants.applicants !== null\n                ? applicants.applicants.applicants\n                    .filter(\n                      (applicant) =>\n                        applicant._id === clickedScholarship.applicant\n                    )\n                    .map((applicanttt) => applicanttt.name)\n                : \" \"}\n            </h1>\n          </div>\n        </div>\n        <form onSubmit={(e) => onSubmitReport(e)}>\n          {/* <!-- academic records --> */}\n          <hr className=\"mt-5 border\" />\n          <table className=\"w-full h-auto relative mt-5\">\n            <thead className=\"w-full\">\n              <tr\n                className=\"\n                      text-md\n                      h-auto\n                      font-semibold\n                      tracking-wide\n                      text-left text-gray-900\n                      bg-gray-100\n                      uppercase\n                      border-b border-gray-600\n                    \"\n              >\n                <th className=\"px-4 py-3\">Report</th>\n                <th className=\"px-4 py-3\">GPA</th>\n                <th className=\"px-4 py-3\">Exam Result</th>\n                <th className=\"px-4 py-3\">Report File</th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white\">\n              {clickedScholarship !== null\n                ? clickedScholarship.reports.map((report, number) => (\n                    <tr className=\"text-gray-700\">\n                      <td className=\"px-4 py-3 border\">\n                        <div className=\"flex items-center text-sm\">\n                          <div>\n                            <p className=\"font-semibold text-black\">\n                              Report {number + 1}\n                            </p>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-3 text-ms font-semibold border\">\n                        {report.grades}\n                      </td>\n                      <td className=\"px-4 py-3 border text-md font-semibold\">\n                        {report.dateOfExam}\n                      </td>\n                      <td\n                        className=\"px-4 py-3 text-sm border cursor-pointer\"\n                        onClick={() => {\n                          changeReportImgBox(number);\n                        }}\n                      >\n                        File\n                      </td>\n                    </tr>\n                  ))\n                : \"\"}\n            </tbody>\n          </table>\n          <div\n            className=\"\n                    flex\n                    items-center\n                    justify-self-end\n                    md:gap-8\n                    gap-4\n                    pt-5\n                    pb-5\n                    mx-7\n                  \"\n          >\n            <button\n              className=\"\n                      w-auto\n                      bg-gray-800\n                      hover:bg-gray-700\n                      rounded-lg\n                      shadow-xl\n                      font-medium\n                      text-white\n                      px-4\n                      py-2\n                    \"\n              type=\"button\"\n              onClick={() => {\n                changeNewRepo();\n              }}\n            >\n              UPDATE REPORT\n            </button>\n          </div>\n          <div className={`${newRepo}`}>\n            <div\n              className={`grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7 `}\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n                >\n                  Which level/Grade/Semester you recently passed\n                </label>\n                <select\n                  className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                  name=\"level\"\n                  required\n                  value={reportData.level}\n                  onChange={(e) => onChangeReportData(e)}\n                >\n                  <option defualt>Select</option>\n                  {options.options !== null\n                    ? options.options\n                        .filter((opt) => opt.type === \"Grade,Level,Semester\")\n                        .map((opti) => (\n                          <option value={opti.name}>{opti.name}</option>\n                        ))\n                    : \"\"}\n                  {/* <option value=\"KG 1\">KG 1</option>\n                  <option value=\"Pre School\">Pre School</option>\n                  <option value=\"KG 2\">KG 2</option>\n                  <option value=\"School Class1\">School Class1</option>\n                  <option value=\"School Class2\">School Class2</option>\n                  <option value=\"School Class3\">School Class3</option>\n                  <option value=\"School Class4\">School Class4</option>\n                  <option value=\"School Class5\">School Class5</option>\n                  <option value=\"School Class6\">School Class6</option>\n                  <option value=\"School Class7\">School Class7</option>\n                  <option value=\"School Class8\">School Class8</option>\n                  <option value=\"Secondary School Class 9\">\n                    Secondary School Class 9\n                  </option>\n                  <option value=\"Secondary School Class 10\">\n                    Secondary School Class 10\n                  </option>\n                  <option value=\"Secondary School Class 11\">\n                    Secondary School Class 11\n                  </option>\n                  <option value=\"Year 1 - College/University\">\n                    Year 1 - College/University\n                  </option>\n                  <option value=\"Year 2 - College/University\">\n                    Year 2 - College/University\n                  </option>\n                  <option value=\"Year 3 - College/University\">\n                    Year 3 - College/University\n                  </option>\n                  <option value=\"Year 4 - College/University\">\n                    Year 4 - College/University\n                  </option>\n                  <option value=\"Semester 1 - University\">\n                    Semester 1 - University\n                  </option>\n                  <option value=\"Semester 2 - University\">\n                    Semester 2 - University\n                  </option>\n                  <option value=\"Semester 3 - University\">\n                    Semester 3 - University\n                  </option>\n                  <option value=\"Semester 4 - University\">\n                    Semester 4 - University\n                  </option>\n                  <option value=\"Semester 5 - University\">\n                    Semester 5 - University\n                  </option>\n                  <option value=\"Semester 6 - University\">\n                    Semester 6 - University\n                  </option>\n                  <option value=\"Semester 7 - University\">\n                    Semester 7 - University\n                  </option>\n                  <option value=\"Semester 8 - University\">\n                    Semester 8 - University\n                  </option>\n                  <option value=\"Semester 9 - University\">\n                    Semester 9 - University\n                  </option>\n                  <option value=\"Semester 10 - University\">\n                    Semester 10 - University\n                  </option> */}\n                </select>\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  % of Marks,GPA,GRADE\n                </label>\n                <input\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  name=\"grades\"\n                  required\n                  value={reportData.grades}\n                  onChange={(e) => onChangeReportData(e)}\n                />\n              </div>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Date of exam\n                </label>\n                <input\n                  className=\" py-2 px-3 rounded-lg border border-gray-300\n                    mt-1 focus:outline-none focus:ring-1 focus:ring-gray-600\n                    focus:border-transparent \"\n                  type=\"date\"\n                  name=\"dateOfExam\"\n                  required\n                  value={reportData.dateOfExam}\n                  onChange={(e) => onChangeReportData(e)}\n                />\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Date of result\n                </label>\n                <input\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"date\"\n                  name=\"dateOfResult\"\n                  required\n                  value={reportData.dateOfResult}\n                  onChange={(e) => onChangeReportData(e)}\n                />\n              </div>\n            </div>\n            <div\n              className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n            >\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n                >\n                  Results recived on:\n                </label>\n                <input\n                  className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                  type=\"text\"\n                  name=\"resultReceivedOn\"\n                  required\n                  value={reportData.resultReceivedOn}\n                  onChange={(e) => onChangeReportData(e)}\n                />\n              </div>\n              <div className=\"grid grid-cols-1\">\n                <label\n                  className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n                >\n                  Exam result sheet\n                </label>\n                <div className=\"flex items-center justify-left w-full\">\n                  <FilePond\n                    files={reportImg}\n                    allowMultiple={false}\n                    allowFileEncode={true}\n                    name=\"reportImg\"\n                    labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                    className=\"w-full h-auto \"\n                    allowImagePreview={false}\n                  >\n                    {\" \"}\n                  </FilePond>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center justify-center md:gap-8 gap-4 pt-5 pb-5\">\n              <button\n                className=\"\n                  w-auto\n                  bg-red-400\n                  hover:bg-red-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"button\"\n                onClick={() => changeNewRepo()}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"\n                  w-auto\n                  bg-green-400\n                  hover:bg-green-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"submit\"\n              >\n                UPLOAD\n              </button>\n            </div>\n          </div>\n\n          <hr className=\"mt-5 border\" />\n        </form>\n        <form onSubmit={(e) => onSubmitForm(e)}>\n          {/* <!-- Admin --> */}\n\n          <div\n            className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n          >\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n              >\n                Application Status\n              </label>\n              <select\n                className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        mb-5\n                        bg-gray-100\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n              >\n                <option>{clickedScholarship.status}</option>\n              </select>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n              >\n                Notes for student\n              </label>\n              <textarea\n                className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        h-32\n                        focus:outline-none\n                        focus:ring-gray-600\n                        focus:border-transparent\n                        mb-5\n                      \"\n                type=\"text\"\n                value={clickedScholarship.adminNotes}\n              />\n            </div>\n          </div>\n          <hr classNameName=\"mt-5 border\" />\n          {/* <!-- 1 row --> */}\n          <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label\n              className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n            >\n              Select Applicant From List\n            </label>\n            <select\n              className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  bg-gray-100\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n              name=\"applicant\"\n              required\n              value={formData.applicant}\n              onChange={(e) => onChangeFormData(e)}\n            >\n              <option defualt>Select</option>\n              {applicants.applicants !== null\n                ? applicants.applicants.applicants.map((applicant) => (\n                    <option value={applicant._id}>{applicant.name}</option>\n                  ))\n                : \" \"}\n            </select>\n          </div>\n          <div\n            className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n          >\n            <Link to=\"/applicantsSt\">\n              <button\n                className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"button\"\n              >\n                Create New Applicant\n              </button>\n            </Link>\n          </div>\n          {/* <input\n              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n              type=\"text\"\n              value=\"Abib Khan\"\n            />\n          </div>\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n            >\n              CNIC\n            </label>\n            <input\n              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n              type=\"text\"\n              value=\"1542748485745\"\n            />\n          </div>\n        </div>\n        <!-- 2 row --> \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n            >\n              Gender\n            </label>\n            <select\n              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n            >\n              <option>Male</option>\n              <option>Female</option>\n            </select>\n          </div>\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n            >\n              Age\n            </label>\n            <input\n              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n              type=\"text\"\n              value=\"15\"\n            />\n          </div>\n        </div>\n         <!-- 3 row --> \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n            >\n              Mobile\n            </label>\n            <input\n              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n              type=\"text\"\n              value=\"+54-5689-896-896\"\n            />\n          </div>\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n            >\n              Phone\n            </label>\n            <input\n              className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n              type=\"text\"\n              value=\"5623894512\"\n            />\n          </div>\n        </div>\n\n         <!-- 4 row -->\n        <div className=\"grid grid-cols-1 mt-5 mx-7\">\n          <label\n            className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n          >\n            Email\n          </label>\n          <input\n            className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n            type=\"text\"\n            value=\"test@test.com\"\n          />\n        </div>\n\n         <!-- 5 row --> \n        <div\n          className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n        >\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n            >\n              CNIC PHOTO\n            </label>\n            <div className=\"flex items-center justify-left w-full\">\n              <button\n                id=\"imageCn\"\n                type=\"button\"\n                className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\"\n                //   onClick={() => {\n                //     changeImageCnPop();\n                //   }}\n              >\n                Check Image\n              </button>\n            </div>\n            <div className=\"flex items-center justify-left w-full\">\n              <input type=\"file\" />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1\">\n            <label\n              className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n            >\n              STUDENT PHOTO\n            </label>\n            <div className=\"flex items-center justify-left w-full\">\n              <button\n                className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\"\n                //   onClick={() => changeImageStPop()}\n              >\n                Check Image\n              </button>\n            </div>\n            <div className=\"flex items-center justify-left w-full\">\n              <input type=\"file\" />\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"\n                    flex\n                    items-center\n                    justify-self-end\n                    md:gap-8\n                    gap-4\n                    pt-5\n                    pb-5\n                    mx-7\n                  \"\n        >\n          <button\n            className=\"\n                      w-auto\n                      bg-gray-800\n                      hover:bg-gray-700\n                      rounded-lg\n                      shadow-xl\n                      font-medium\n                      text-white\n                      px-4\n                      py-2\n                    \"\n            type=\"button\"\n          >\n            UPDATE FILES\n          </button>\n        </div> */}\n          <hr className=\"mt-5 border\" />\n          {/* <!-- 6row --> */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Select Guardian/Parent From List\n              </label>\n              <select\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                name=\"parent1\"\n                required\n                value={formData.parent1}\n                onChange={(e) => onChangeFormData(e)}\n              >\n                <option defualt>Select</option>\n                {parents.parents !== null\n                  ? parents.parents.parents.map((parent) => (\n                      <option value={parent._id}> {parent.name}</option>\n                    ))\n                  : \" \"}\n              </select>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Guardian/Parent\n              </label>\n              <select\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                name=\"parent2\"\n                required\n                value={formData.parent2}\n                onChange={(e) => onChangeFormData(e)}\n              >\n                <option defualt>Select</option>\n                {parents.parents !== null\n                  ? parents.parents.parents.map((parent) => (\n                      <option value={parent._id}> {parent.name}</option>\n                    ))\n                  : \" \"}\n              </select>\n            </div>\n          </div>\n          {/* <!-- 7 row --> */}\n          <div\n            className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n          >\n            <Link to=\"/parentsSt\">\n              <button\n                className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"button\"\n              >\n                Create New Parent/Guardian\n              </button>\n            </Link>\n          </div>\n          <hr className=\"mt-5 border\" />\n          {/* <!-- 7 row --> */}\n          <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label\n              className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n            >\n              institution/School Name\n            </label>\n            <input\n              className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n              type=\"text\"\n              placeholder=\"institution/School Name\"\n              name=\"institutionName\"\n              required\n              value={formData.institutionName}\n              onChange={(e) => onChangeFormData(e)}\n            />\n          </div>\n          <div className=\"grid grid-cols-1 mx-7\">\n            <label\n              className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n            >\n              Institution Type\n            </label>\n            <select\n              className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  bg-gray-100\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n              name=\"institutionType\"\n              required\n              value={formData.institutionType}\n              onChange={(e) => onChangeFormData(e)}\n            >\n              <option defualt>Select</option>\n              {options.options !== null\n                ? options.options\n                    .filter((opt) => opt.type === \"Institution Type\")\n                    .map((opti) => (\n                      <option value={opti.name}>{opti.name}</option>\n                    ))\n                : \"\"}\n            </select>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Which level/Grade/Semester are you in?\n              </label>\n              <select\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                name=\"level\"\n                required\n                value={formData.level}\n                onChange={(e) => onChangeFormData(e)}\n              >\n                <option defualt>Select</option>\n                {options.options !== null\n                  ? options.options\n                      .filter((opt) => opt.type === \"Grade,Level,Semester\")\n                      .map((opti) => (\n                        <option value={opti.name}>{opti.name}</option>\n                      ))\n                  : \"\"}\n                {/* <option value=\"KG 1\">KG 1</option>\n                <option value=\"Pre School\">Pre School</option>\n                <option value=\"KG 2\">KG 2</option>\n                <option value=\"School Class1\">School Class1</option>\n                <option value=\"School Class2\">School Class2</option>\n                <option value=\"School Class3\">School Class3</option>\n                <option value=\"School Class4\">School Class4</option>\n                <option value=\"School Class5\">School Class5</option>\n                <option value=\"School Class6\">School Class6</option>\n                <option value=\"School Class7\">School Class7</option>\n                <option value=\"School Class8\">School Class8</option>\n                <option value=\"Secondary School Class 9\">\n                  Secondary School Class 9\n                </option>\n                <option value=\"Secondary School Class 10\">\n                  Secondary School Class 10\n                </option>\n                <option value=\"Secondary School Class 11\">\n                  Secondary School Class 11\n                </option>\n                <option value=\"Year 1 - College/University\">\n                  Year 1 - College/University\n                </option>\n                <option value=\"Year 2 - College/University\">\n                  Year 2 - College/University\n                </option>\n                <option value=\"Year 3 - College/University\">\n                  Year 3 - College/University\n                </option>\n                <option value=\"Year 4 - College/University\">\n                  Year 4 - College/University\n                </option>\n                <option value=\"Semester 1 - University\">\n                  Semester 1 - University\n                </option>\n                <option value=\"Semester 2 - University\">\n                  Semester 2 - University\n                </option>\n                <option value=\"Semester 3 - University\">\n                  Semester 3 - University\n                </option>\n                <option value=\"Semester 4 - University\">\n                  Semester 4 - University\n                </option>\n                <option value=\"Semester 5 - University\">\n                  Semester 5 - University\n                </option>\n                <option value=\"Semester 6 - University\">\n                  Semester 6 - University\n                </option>\n                <option value=\"Semester 7 - University\">\n                  Semester 7 - University\n                </option>\n                <option value=\"Semester 8 - University\">\n                  Semester 8 - University\n                </option>\n                <option value=\"Semester 9 - University\">\n                  Semester 9 - University\n                </option>\n                <option value=\"Semester 10 - University\">\n                  Semester 10 - University\n                </option> */}\n              </select>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Education you are pursuing\n              </label>\n              <select\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                name=\"pursuingEducation\"\n                required\n                value={formData.pursuingEducation}\n                onChange={(e) => onChangeFormData(e)}\n              >\n                <option defualt>Select</option>\n                {options.options !== null\n                  ? options.options\n                      .filter((opt) => opt.type === \"Pursuing Education\")\n                      .map((opti) => (\n                        <option value={opti.name}>{opti.name}</option>\n                      ))\n                  : \"\"}\n                {/* <option value=\"Pre School\">Pre-School (nursery, KG)</option>\n                <option value=\"School\">School ( Class 1 - 8)</option>\n                <option value=\"O-levels\">O-levels</option>\n                <option value=\"Secondary School Certificate\">\n                  Secondary School Certificate\n                </option>\n                <option value=\"High School Certificate\">\n                  High School Certificate\n                </option>\n                <option value=\"A-levels\">A-levels</option>\n                <option value=\"Diploma\">Diploma</option>\n                <option value=\"LLB\">LLB</option>\n                <option value=\"Pharm. D\">Pharm. D</option>\n                <option value=\"DPT\">DPT</option>\n                <option value=\"Bachelor of Medicine And Bachelor of Surgery\">\n                  Bachelor of Medicine And Bachelor of Surgery\n                </option> */}\n              </select>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Institution/School Email\n              </label>\n              <input\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                type=\"text\"\n                placeholder=\"Email\"\n                name=\"institutionEmail\"\n                required\n                value={formData.institutionEmail}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Institution/School Phone\n              </label>\n              <InputMask\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                type=\"text\"\n                mask=\"9999-9999999\"\n                placeholder=\"9999-9999999\"\n                name=\"institutionPhone\"\n                required\n                value={formData.institutionPhone}\n                onChange={(e) => onChangeFormData(e)}\n              ></InputMask>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Institution/School Joining Date\n              </label>\n              <input\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                type=\"date\"\n                placeholder=\"Joining date\"\n                name=\"institutionJoinDate\"\n                required\n                value={formData.institutionJoinDate}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Institution/School Address\n              </label>\n              <input\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                type=\"text\"\n                placeholder=\"Adress\"\n                name=\"institutionAddress\"\n                required\n                value={formData.institutionAddress}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n              >\n                ID CARD PHOTO\n              </label>\n              <div className=\"flex items-center justify-left w-full\">\n                <button\n                  id=\"pictureee1\"\n                  className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                  type=\"button\"\n                  onClick={() => changeIdCardBox()}\n                >\n                  Check Image\n                </button>\n              </div>\n              <div className=\"flex items-center justify-left w-full\">\n                <FilePond\n                  files={cardId}\n                  allowMultiple={false}\n                  allowFileEncode={true}\n                  name=\"cardId\"\n                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                  className=\"w-full h-auto \"\n                  allowImagePreview={false}\n                >\n                  {\" \"}\n                </FilePond>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n              >\n                ADMISSION RECEIPT COPY\n              </label>\n              <div className=\"flex items-center justify-left w-full\">\n                <button\n                  className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                  type=\"button\"\n                  onClick={() => changeAdminReceiptBox()}\n                >\n                  Check Image\n                </button>\n              </div>\n              <div className=\"flex items-center justify-left w-full\">\n                <FilePond\n                  files={adminReceipt}\n                  allowMultiple={false}\n                  allowFileEncode={true}\n                  name=\"adminReceipt\"\n                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                  className=\"w-full h-auto \"\n                  allowImagePreview={false}\n                >\n                  {\" \"}\n                </FilePond>\n              </div>\n            </div>\n          </div>\n          {/* <div\n                    className=\"\n                flex\n                items-center\n                justify-self-end\n                mx-7\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n              \"\n                  >\n                    <button\n                      className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                type=\"button\"\n                    >\n                      SAVE INFORMATION\n                    </button>\n                  </div> */}\n          <hr className=\"mt-5 border\" />\n          {/* <!-- FEES --> */}\n          <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label\n              className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n            >\n              Required Fees\n            </label>\n            <input\n              className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n              type=\"text\"\n              placeholder=\"Required Fees\"\n              name=\"requiredFees\"\n              required\n              value={formData.requiredFees}\n              onChange={(e) => onChangeFormData(e)}\n            />\n          </div>\n          {/* <div\n                    className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n                  >\n                    <button\n                      className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n                    >\n                      UPDATE REQUIRED FEES\n                    </button>\n                  </div> */}\n          <hr className=\"mt-5 border\" />\n          {/* <!-- academic records -->\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Which level/Grade/Semester you recently passed\n              </label>\n              <select\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    bg-gray-100\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n              >\n                <option>School</option>\n                <option>Pre-School</option>\n              </select>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n              >\n                % of Marks,GPA,GRADE\n              </label>\n              <input\n                className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                type=\"text\"\n                value=\"2.4 GPA\"\n              />\n            </div>\n          </div>\n          <div\n            className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n          >\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n              >\n                Date of exam\n              </label>\n              <input\n                className=\" py-2 px-3 rounded-lg border border-gray-300\n                    mt-1 focus:outline-none focus:ring-1 focus:ring-gray-600\n                    focus:border-transparent \"\n                type=\"text\"\n                value=\"24/10/2020\"\n              />\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n              >\n                Date of result\n              </label>\n              <input\n                className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                type=\"text\"\n                placeholder=\"29/10/2020\"\n              />\n            </div>\n          </div>\n          <div\n            className=\"\n                    grid grid-cols-1\n                    md:grid-cols-2\n                    gap-5\n                    md:gap-8\n                    mt-5\n                    mx-7\n                  \"\n          >\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                      \"\n              >\n                Results recived on:\n              </label>\n              <input\n                className=\"\n                        py-2\n                        px-3\n                        rounded-lg\n                        border border-gray-300\n                        mt-1\n                        focus:outline-none\n                        focus:ring-1\n                        focus:ring-gray-600\n                        focus:border-transparent\n                      \"\n                type=\"text\"\n                value=\"Results recived on information\"\n              />\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                        uppercase\n                        md:text-sm\n                        text-xs text-gray-500 text-light\n                        font-semibold\n                        mb-1\n                      \"\n              >\n                Exam result sheet\n              </label>\n              <div className=\"flex items-center justify-left w-full\">\n                <button\n                  className=\"w-auto h-8 px-2 mb-3  bg-gray-100 usm:mb-3 border border-gray-500\"\n                  type=\"button\"\n                >\n                  Donwload file\n                </button>\n              </div>\n              <div className=\"flex items-center justify-left w-full\">\n                <input type=\"file\" />\n              </div>\n            </div>\n          </div>\n          <div\n            className=\"\n                    flex\n                    items-center\n                    justify-self-end\n                    md:gap-8\n                    gap-4\n                    pt-5\n                    pb-5\n                    mx-7\n                  \"\n          >\n            <button\n              className=\"\n                      w-auto\n                      bg-gray-800\n                      hover:bg-gray-700\n                      rounded-lg\n                      shadow-xl\n                      font-medium\n                      text-white\n                      px-4\n                      py-2\n                    \"\n              type=\"button\"\n            >\n              UPDATE QUALIFICATION\n            </button>\n          </div>\n          <hr className=\"mt-5 border\" /> */}\n          {/* select scholarship date */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Scholarship Start Date\n              </label>\n              <input\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                type=\"date\"\n                placeholder=\"start date\"\n                name=\"scholarshipStartDate\"\n                required\n                value={formData.scholarshipStartDate}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                  \"\n              >\n                Scholarship End Date\n              </label>\n              <input\n                className=\"\n                    py-2\n                    px-3\n                    rounded-lg\n                    border border-gray-300\n                    mt-1\n                    focus:outline-none\n                    focus:ring-1\n                    focus:ring-gray-600\n                    focus:border-transparent\n                  \"\n                type=\"date\"\n                placeholder=\"end date\"\n                name=\"scholarshipEndDate\"\n                required\n                value={formData.scholarshipEndDate}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n          </div>\n          <hr className=\"mt-5 border\" />\n          {/* <!-- bank account --> */}\n          <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label\n              className=\"\n                  uppercase\n                  md:text-sm\n                  text-xs text-gray-500 text-light\n                  font-semibold\n                \"\n            >\n              Select Bank Account from list\n            </label>\n            <select\n              className=\"\n                  py-2\n                  px-3\n                  rounded-lg\n                  border border-gray-300\n                  mt-1\n                  bg-gray-100\n                  focus:outline-none\n                  focus:ring-1\n                  focus:ring-gray-600\n                  focus:border-transparent\n                \"\n              name=\"bankAccount\"\n              required\n              value={formData.bankAccount}\n              onChange={(e) => onChangeFormData(e)}\n            >\n              <option defualt>Select</option>\n              {banks.banks !== null\n                ? banks.banks.banks.map((bank) => (\n                    <option value={bank._id}> {bank.accNumber}</option>\n                  ))\n                : \" \"}\n            </select>\n          </div>\n          <div\n            className=\"\n                flex\n                items-center\n                justify-self-end\n                md:gap-8\n                gap-4\n                pt-5\n                pb-5\n                mx-7\n              \"\n          >\n            <Link to=\"/bankSt\">\n              <button\n                className=\"\n                  w-auto\n                  bg-gray-800\n                  hover:bg-gray-700\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n              >\n                Create New Bank Account\n              </button>\n            </Link>\n          </div>\n\n          {/* <!-- buttons --> */}\n          <hr className=\"mt-5 border\" />\n          <div className=\"flex items-center justify-center md:gap-8 gap-4 pt-5 pb-5\">\n            <button\n              className=\"\n                  w-auto\n                  bg-red-400\n                  hover:bg-red-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n              type=\"button\"\n              onClick={() => changeVisibility()}\n            >\n              Cancel\n            </button>\n            <button\n              className=\"\n                  w-auto\n                  bg-green-400\n                  hover:bg-green-200\n                  rounded-lg\n                  shadow-xl\n                  font-medium\n                  text-white\n                  px-4\n                  py-2\n                \"\n              type=\"submit\"\n            >\n              SAVE\n            </button>\n          </div>\n        </form>\n        {/* start of images pop ups */}\n        <div\n          className={`w-2/3 h-1/2 fixed bg-white centerHorizontal usm:h-1/3 border ${cardIdBox}`}\n          style={{ top: imgTop }}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src={clickedScholarship !== null ? displayIdCard() : \" \"}\n              className=\"w-full h-full bg-cover\"\n              alt=\"cnic Back \"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n              onClick={() => changeIdCardBox()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n\n        <div\n          className={`w-2/3 h-1/2 fixed bg-white centerHorizontal usm:h-1/3 border ${reportImgBox}`}\n          style={{ top: imgTop }}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src={clickedScholarship !== null ? reportImgData : \" \"}\n              className=\"w-full h-full bg-cover\"\n              alt=\"cnic Back \"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n              onClick={() => changeReportImgBox(0)}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n        <div\n          className={`w-2/3 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${adminReceiptBox}`}\n          style={{ top: imgTop }}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src={clickedScholarship !== null ? displayAdminReceipt() : \" \"}\n              className=\"w-full h-full bg-cover\"\n              alt=\"cnic front \"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n              onClick={() => changeAdminReceiptBox()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n\n        {/* End of images pop ups */}\n      </div>\n    </div>\n  );\n}\n\nScholarshipPopUp.propTypes = {\n  changeVisibility: PropTypes.func.isRequired,\n  schoId: PropTypes.object.isRequired,\n  updateScholarship: PropTypes.func.isRequired,\n  getScholarships: PropTypes.func.isRequired,\n  getApplicants: PropTypes.func.isRequired,\n  getParents: PropTypes.func.isRequired,\n  getBanks: PropTypes.func.isRequired,\n  uploadReport: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  scholarships: state.scholarships,\n  applicants: state.aplicants,\n  parents: state.parents,\n  banks: state.banks,\n  options: state.options,\n});\n\nexport default connect(mapStateToProps, {\n  updateScholarship,\n  getScholarships,\n  getApplicants,\n  getParents,\n  getBanks,\n  uploadReport,\n  setAlert,\n})(ScholarshipPopUp);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\ApplicantsPopUp.jsx",["403","404","405","406"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport InputMask from \"react-input-mask\";\nimport { setAlert } from \"../../actions/alert\";\n//filepond stuff\nimport { FilePond, registerPlugin } from \"react-filepond\";\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\n//redux stuff\nimport { connect } from \"react-redux\";\nimport { getApplicants, updateApplicant } from \"../../actions/aplicants\";\n//filepond\nregisterPlugin(FilePondPluginFileEncode);\nregisterPlugin(FilePondPluginImagePreview);\n\nfunction ApplicantsPopUp({\n  applicants,\n  changeVisibility,\n  appId,\n  setAlert,\n  getApplicants,\n  updateApplicant,\n}) {\n  //handle images\n  const [cnicFront, setCnciFront] = useState();\n  const [cnicBack, setCnicBack] = useState();\n  const [studentPhoto, setStudentPhoto] = useState();\n  //display image center of screen\n  const [imgTop, setImgTop] = useState(0);\n  //hide/unhide images boxes\n  const [cnicFrontbox, setCnicFrontBox] = useState(\"hidden\");\n  const [cnicBackbox, setCnicBackBox] = useState(\"hidden\");\n  const [studentImgbox, setStudentImgBox] = useState(\"hidden\");\n  //take care of the id passed\n  const clickedApplicant =\n    applicants.applicants !== null &&\n    applicants.applicants.applicants.find(\n      (applicant) => applicant._id === appId.id\n    );\n  const reverseImg = (img) => {\n    return Buffer.from(img).toString(\"base64\");\n  };\n  console.log(clickedApplicant);\n  const [formData, setFormData] = useState({\n    name: clickedApplicant !== null ? clickedApplicant.name : \" \",\n    gender: clickedApplicant !== null ? clickedApplicant.gender : \" \",\n    cnic: clickedApplicant !== null ? clickedApplicant.cnic : \" \",\n    dateOfBirth: clickedApplicant !== null ? clickedApplicant.dateOfBirth : \" \",\n    mobile: clickedApplicant !== null ? clickedApplicant.mobile : \" \",\n    phone: clickedApplicant !== null ? clickedApplicant.phone : \" \",\n    email: clickedApplicant !== null ? clickedApplicant.email : \" \",\n    cnicFrontImg:\n      clickedApplicant !== null\n        ? reverseImg(clickedApplicant.cnicFrontImg)\n        : \" \",\n    cnicFrontImgType:\n      clickedApplicant !== null ? clickedApplicant.cnicFrontImgType : \" \",\n    cnicBackImg:\n      clickedApplicant !== null\n        ? reverseImg(clickedApplicant.cnicBackImg)\n        : \" \",\n    cnicBackImgType:\n      clickedApplicant !== null ? clickedApplicant.cnicBackImgType : \" \",\n    studentImg:\n      clickedApplicant !== null ? reverseImg(clickedApplicant.studentImg) : \" \",\n    studentImgType:\n      clickedApplicant !== null ? clickedApplicant.studentImgType : \" \",\n  });\n  //handle images\n  const updateCnicFrontImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicFront\");\n    console.log(data.size);\n    return data;\n  };\n  const updateCnicBackImg = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"cnicBack\");\n    console.log(data.size);\n    return data;\n  };\n  const updateStudentPhoto = async (e) => {\n    const form = new FormData(e.target);\n    const data = form.get(\"studentPhoto\");\n    return data;\n  };\n  const displayCnicFront = () => {\n    if (\n      clickedApplicant.cnicFrontImg != null &&\n      clickedApplicant.cnicFrontImgType != null\n    ) {\n      return `data: ${\n        clickedApplicant.cnicFrontImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedApplicant.cnicFrontImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  const displayCnicBack = () => {\n    if (\n      clickedApplicant.cnicBackImg != null &&\n      clickedApplicant.cnicBackImgType != null\n    ) {\n      return `data: ${\n        clickedApplicant.cnicBackImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedApplicant.cnicBackImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  const displayStudentPhoto = () => {\n    if (\n      clickedApplicant.studentImg != null &&\n      clickedApplicant.studentImgType != null\n    ) {\n      return `data: ${\n        clickedApplicant.studentImgType\n      };charset=utf-8;base64,${Buffer.from(\n        clickedApplicant.studentImg\n      ).toString(\"base64\")}`;\n    }\n  };\n  //getElementPosition\n  const getPosition = (buttonName) => {\n    setImgTop(window.scrollY + 100);\n  };\n  //hide/unhide image boxes\n  const changeCnicFrontBox = () => {\n    getPosition(\"something\");\n    cnicFrontbox === \"hidden\"\n      ? setCnicFrontBox(\" \")\n      : setCnicFrontBox(\"hidden\");\n  };\n  const changeCnicBackBox = () => {\n    getPosition(\"something\");\n    cnicBackbox === \"hidden\" ? setCnicBackBox(\" \") : setCnicBackBox(\"hidden\");\n  };\n  const changeStudentImgBox = () => {\n    getPosition(\"something\");\n    studentImgbox === \"hidden\"\n      ? setStudentImgBox(\" \")\n      : setStudentImgBox(\"hidden\");\n  };\n  const onChangeFormData = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    const cnicFrontData = await updateCnicFrontImg(e);\n    const cnicBackData = await updateCnicBackImg(e);\n    const studentPhotoData = await updateStudentPhoto(e);\n\n    const newInfo = {\n      name: formData.name,\n      gender: formData.gender,\n      cnic: formData.cnic,\n      dateOfBirth: formData.dateOfBirth,\n      mobile: formData.mobile,\n      phone: formData.phone,\n      email: formData.email,\n      cnicFront:\n        cnicFrontData.size === 0\n          ? { data: formData.cnicFrontImg, type: formData.cnicFrontImgType }\n          : cnicFrontData,\n      cnicBack:\n        cnicBackData.size === 0\n          ? { data: formData.cnicBackImg, type: formData.cnicBackImgType }\n          : cnicBackData,\n      studentPhoto:\n        studentPhotoData.size === 0\n          ? { data: formData.studentImg, type: formData.studentImgType }\n          : studentPhotoData,\n    };\n    console.log(newInfo);\n    updateApplicant(newInfo, appId.id);\n    getApplicants();\n    changeVisibility();\n    setAlert(\"Updating applicant, please wait\", \"success\", 7000);\n  };\n  return (\n    <div className={`h-full w-full bg-white absolute top-0 left-0`}>\n      <form\n        onSubmit={(e) => {\n          onSubmitForm(e);\n        }}\n      >\n        <div className=\"grid h-auto bg-white rounded-lg shadow-xl w-full\">\n          <div className=\"flex justify-center\">\n            <div className=\"flex\">\n              <h1 className=\"text-gray-600 font-bold pt-5 md:text-2xl text-xl\">\n                {formData.name}\n              </h1>\n            </div>\n          </div>\n          {/* <!-- 1 row --> */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n              uppercase\n              md:text-sm\n              text-xs text-gray-500 text-light\n              font-semibold\n            \"\n              >\n                Name\n              </label>\n              <input\n                className=\"\n              py-2\n              px-3\n              rounded-lg\n              border border-gray-300\n              mt-1\n              focus:outline-none\n              focus:ring-1\n              focus:ring-gray-600\n              focus:border-transparent\n            \"\n                name=\"name\"\n                required\n                value={formData.name}\n                onChange={(e) => onChangeFormData(e)}\n                type=\"text\"\n                placeholder=\"Name\"\n              />\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n              uppercase\n              md:text-sm\n              text-xs text-gray-500 text-light\n              font-semibold\n            \"\n              >\n                Gender\n              </label>\n              <select\n                className=\"\n              py-2\n              px-3\n              rounded-lg\n              border border-gray-300\n              mt-1\n              bg-gray-100\n              focus:outline-none\n              focus:ring-1\n              focus:ring-gray-600\n              focus:border-transparent\n            \"\n                name=\"gender\"\n                required\n                value={formData.gender}\n                onChange={(e) => onChangeFormData(e)}\n              >\n                <option defualt>Select</option>\n                <option value=\"male\">Male</option>\n                <option value=\"female\">Female</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n              uppercase\n              md:text-sm\n              text-xs text-gray-500 text-light\n              font-semibold\n            \"\n              >\n                CNIC\n              </label>\n              <InputMask\n                className=\"\n              py-2\n              px-3\n              rounded-lg\n              border border-gray-300\n              mt-1\n              focus:outline-none\n              focus:ring-1\n              focus:ring-gray-600\n              focus:border-transparent\n            \"\n                type=\"text\"\n                mask=\"99999-9999999-9\"\n                placeholder=\"99999-9999999-9\"\n                name=\"cnic\"\n                required\n                value={formData.cnic}\n                onChange={(e) => onChangeFormData(e)}\n              ></InputMask>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n              uppercase\n              md:text-sm\n              text-xs text-gray-500 text-light\n              font-semibold\n            \"\n              >\n                Date of Birth\n              </label>\n              <input\n                className=\"\n              py-2\n              px-3\n              rounded-lg\n              border border-gray-300\n              mt-1\n              focus:outline-none\n              focus:ring-1\n              focus:ring-gray-600\n              focus:border-transparent\n            \"\n                type=\"date\"\n                name=\"dateOfBirth\"\n                required\n                value={formData.dateOfBirth}\n                onChange={(e) => onChangeFormData(e)}\n              />\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n              uppercase\n              md:text-sm\n              text-xs text-gray-500 text-light\n              font-semibold\n            \"\n              >\n                Mobile\n              </label>\n              <InputMask\n                className=\"\n              py-2\n              px-3\n              rounded-lg\n              border border-gray-300\n              mt-1\n              focus:outline-none\n              focus:ring-1\n              focus:ring-gray-600\n              focus:border-transparent\n            \"\n                type=\"text\"\n                mask=\"9999-9999999\"\n                placeholder=\"9999-9999999\"\n                name=\"mobile\"\n                required\n                value={formData.mobile}\n                onChange={(e) => onChangeFormData(e)}\n              ></InputMask>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n              uppercase\n              md:text-sm\n              text-xs text-gray-500 text-light\n              font-semibold\n            \"\n              >\n                Phone\n              </label>\n              <InputMask\n                className=\"\n              py-2\n              px-3\n              rounded-lg\n              border border-gray-300\n              mt-1\n              focus:outline-none\n              focus:ring-1\n              focus:ring-gray-600\n              focus:border-transparent\n            \"\n                type=\"text\"\n                mask=\"9999-9999999\"\n                placeholder=\"9999-9999999\"\n                name=\"phone\"\n                required\n                value={formData.phone}\n                onChange={(e) => onChangeFormData(e)}\n              ></InputMask>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 mt-5 mx-7\">\n            <label\n              className=\"\n            uppercase\n            md:text-sm\n            text-xs text-gray-500 text-light\n            font-semibold\n          \"\n            >\n              Email\n            </label>\n            <input\n              className=\"\n            py-2\n            px-3\n            rounded-lg\n            border border-gray-300\n            mt-1\n            focus:outline-none\n            focus:ring-1\n            focus:ring-gray-600\n            focus:border-transparent\n          \"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              required\n              value={formData.email}\n              onChange={(e) => onChangeFormData(e)}\n            />\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-5 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n              >\n                Cnic Front\n              </label>\n              <div className=\"flex items-center justify-left w-full\">\n                <button\n                  className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                  type=\"button\"\n                  onClick={() => changeCnicFrontBox()}\n                >\n                  Check Image\n                </button>\n              </div>\n              <div className=\"flex items-center -ml-2 justify-left w-full\">\n                <FilePond\n                  files={cnicFront}\n                  allowMultiple={false}\n                  allowFileEncode={true}\n                  name=\"cnicFront\"\n                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                  className=\"w-full h-auto \"\n                  allowImagePreview={false}\n                >\n                  {\" \"}\n                </FilePond>\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n              >\n                Cnic Back\n              </label>\n              <div className=\"flex items-center justify-left w-full\">\n                <button\n                  className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                  type=\"button\"\n                  onClick={() => changeCnicBackBox()}\n                >\n                  Check Image\n                </button>\n              </div>\n              <div className=\"flex items-center -ml-2 justify-left w-full\">\n                <FilePond\n                  files={cnicBack}\n                  allowMultiple={false}\n                  allowFileEncode={true}\n                  name=\"cnicBack\"\n                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                  className=\"w-full h-auto \"\n                  allowImagePreview={false}\n                >\n                  {\" \"}\n                </FilePond>\n              </div>\n            </div>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-8 mt-0 mx-7\">\n            <div className=\"grid grid-cols-1\">\n              <label\n                className=\"\n                    uppercase\n                    md:text-sm\n                    text-xs text-gray-500 text-light\n                    font-semibold\n                    mb-1\n                  \"\n              >\n                Student Photo\n              </label>\n              <div className=\"flex items-center justify-left w-full\">\n                <button\n                  className=\"w-auto h-8 px-2 mb-0  bg-gray-100 usm:mb-3 border border-gray-500\"\n                  type=\"button\"\n                  onClick={() => changeStudentImgBox()}\n                >\n                  Check Image\n                </button>\n              </div>\n              <div className=\"flex items-center -ml-2 justify-left w-full\">\n                <FilePond\n                  files={studentPhoto}\n                  allowMultiple={false}\n                  allowFileEncode={true}\n                  name=\"studentPhoto\"\n                  labelIdle='Drag & Drop your files or <span class=\"filepond--label-action\">Browse</span>'\n                  className=\"w-full h-auto \"\n                  allowImagePreview={false}\n                >\n                  {\" \"}\n                </FilePond>\n              </div>\n            </div>\n          </div>\n          {/* <!-- buttons --> */}\n          <hr className=\"mt-5 border\" />\n          <div\n            className=\"\n          flex\n          items-center\n          justify-center\n          md:gap-8\n          gap-4\n          pt-5\n          pb-5\n        \"\n          >\n            <button\n              className=\"\n            w-auto\n            bg-red-400\n            hover:bg-red-200\n            rounded-lg\n            shadow-xl\n            font-medium\n            text-white\n            px-4\n            py-2\n          \"\n              type=\"button\"\n              onClick={() => changeVisibility()}\n            >\n              Cancel\n            </button>\n            <button\n              className=\"\n            w-auto\n            bg-green-400\n            hover:bg-green-200\n            rounded-lg\n            shadow-xl\n            font-medium\n            text-white\n            px-4\n            py-2\n          \"\n              type=\"submit\"\n            >\n              SAVE\n            </button>\n          </div>\n        </div>\n        {/* handle images */}\n        <div\n          style={{ top: imgTop }}\n          className={`w-2/3 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${cnicBackbox}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src={clickedApplicant !== null ? displayCnicBack() : \" \"}\n              className=\"w-full h-full bg-cover\"\n              alt=\"cnic Back \"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n              onClick={() => changeCnicBackBox()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n\n        <div\n          style={{ top: imgTop }}\n          className={`w-2/3 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${cnicFrontbox}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src={clickedApplicant !== null ? displayCnicFront() : \" \"}\n              className=\"w-full h-full bg-cover\"\n              alt=\"cnic front \"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n              onClick={() => changeCnicFrontBox()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n        <div\n          style={{ top: imgTop }}\n          className={`w-1/5 h-1/2 bg-white fixed centerHorizontal usm:h-1/3 border ${studentImgbox}`}\n        >\n          <div className=\"w-full h-full relative\">\n            <img\n              src={clickedApplicant !== null ? displayStudentPhoto() : \" \"}\n              className=\"w-full h-full bg-cover\"\n              alt=\"student photo\"\n            />\n            <button\n              className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\n              onClick={() => changeStudentImgBox()}\n              type=\"button\"\n            >\n              X\n            </button>\n          </div>\n        </div>\n        {/* end of images */}\n      </form>\n    </div>\n  );\n}\n\nApplicantsPopUp.propTypes = {\n  applicants: PropTypes.object.isRequired,\n  changeVisibility: PropTypes.func.isRequired,\n  appId: PropTypes.object.isRequired,\n  getApplicants: PropTypes.func.isRequired,\n  updateApplicant: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { getApplicants, updateApplicant, setAlert })(\n  ApplicantsPopUp\n);\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\index.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\auth.js",["407"],"import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    REGISTER_ADMIN,\n    REGISTER_ADMIN_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOG_OUT,\n} from \"../actions/types\";\nconst initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n};\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload,\n            };\n        case REGISTER_ADMIN:\n        case REGISTER_ADMIN_FAIL:\n            return state;\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false,\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOG_OUT:\n            localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n            };\n        default:\n            return state;\n    }\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\alert.js",["408"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\banks.js",["409"],"import {\n    CREATE_USER_BANK,\n    UPDATE_USER_BANK,\n    GET_USER_BANKS,\n    USER_BANKS_ERRORS,\n    LOG_OUT,\n} from \"../actions/types\";\nconst initialState = {\n    loading: true,\n    banks: null,\n};\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case CREATE_USER_BANK:\n        case UPDATE_USER_BANK:\n        case GET_USER_BANKS:\n            return {\n                ...state,\n                loading: false,\n                banks: payload,\n            };\n        case USER_BANKS_ERRORS:\n        case LOG_OUT:\n            return {\n                ...state,\n                loading: false,\n                //changed after test!\n                banks: null,\n            };\n        default:\n            return state;\n    }\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\parents.js",["410"],"import {\n    CREATE_PARENT,\n    UPDATE_PARENT,\n    GET_PARENTS,\n    PARENTS_ERRORS,\n    CNIC_PHOTO_ERROR,\n    CNIC_PHOTO_SUCCESS,\n    SALARY_PHOTO_ERROR,\n    SALARY_PHOTO_SUCCESS,\n    QUALI_PHOTO_SUCCESS,\n    QUALI_PHOTO_ERROR,\n    LOG_OUT,\n} from \"../actions/types\";\nconst initialState = {\n    loading: true,\n    parents: null,\n};\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case CREATE_PARENT:\n        case UPDATE_PARENT:\n        case GET_PARENTS:\n            return {\n                ...state,\n                loading: false,\n                parents: payload,\n            };\n        case PARENTS_ERRORS:\n        case LOG_OUT:\n            return {\n                ...state,\n                loading: false,\n                parents: null,\n            };\n        case SALARY_PHOTO_SUCCESS:\n        case SALARY_PHOTO_ERROR:\n        case CNIC_PHOTO_SUCCESS:\n        case CNIC_PHOTO_ERROR:\n        case QUALI_PHOTO_ERROR:\n        case QUALI_PHOTO_SUCCESS:\n        default:\n            return state;\n    }\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\aplicants.js",["411"],"import {\n    CREATE_USER_APPLI,\n    UPDATE_USER_APPLI,\n    GET_USER_APPLI,\n    ERROR_USER_APPLI,\n    LOG_OUT,\n} from \"../actions/types\";\nconst initialState = {\n    loading: true,\n    applicants: null,\n};\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case CREATE_USER_APPLI:\n        case UPDATE_USER_APPLI:\n        case GET_USER_APPLI:\n            return {\n                ...state,\n                loading: false,\n                applicants: payload,\n            };\n        case ERROR_USER_APPLI:\n        case LOG_OUT:\n            return {\n                ...state,\n                loading: false,\n                applicants: null,\n            };\n        default:\n            return state;\n    }\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\scholarships.js",["412"],"import {\n    CREATE_USER_SCHOLARSHIP,\n    UPDATE_USER_SCHOLARSHIP,\n    GET_USER_SCHOLARSHIPS,\n    UPLOAD_USER_REPORT,\n    ERROR_USER_SCHOLARSHIP,\n    LOG_OUT,\n} from \"../actions/types\";\nconst initialState = {\n    loading: true,\n    scholarships: null,\n};\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch (type) {\n        case CREATE_USER_SCHOLARSHIP:\n        case UPDATE_USER_SCHOLARSHIP:\n        case UPLOAD_USER_REPORT:\n        case GET_USER_SCHOLARSHIPS:\n            return {\n                ...state,\n                loading: false,\n                scholarships: payload,\n            };\n        case ERROR_USER_SCHOLARSHIP:\n        case LOG_OUT:\n            return {\n                ...state,\n                loading: false,\n                scholarships: null,\n            };\n        default:\n            return state;\n    }\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\students.js",["413"],"import {\r\n    GET_STUDENTS,\r\n    ERROR_STUDENTS,\r\n    LOG_OUT,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n    loading: true,\r\n    students: null,\r\n};\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_STUDENTS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                students: payload,\r\n            };\r\n        case ERROR_STUDENTS:\r\n        case LOG_OUT:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                students: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\students.js",["414"],"import {\r\n    GET_STUDENTS,\r\n    ERROR_STUDENTS,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\n//Get all the banks\r\nexport const getStudents = () => async(dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/api/applicantsAdmin\");\r\n        dispatch({\r\n            type: GET_STUDENTS,\r\n            payload: res.data,\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: ERROR_STUDENTS,\r\n        });\r\n    }\r\n};","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\scholarshipsAdmin.js",["415"],"import {\r\n    GET_ADMIN_SCHOLARSHIPS,\r\n    ERROR_ADMIN_SCHOLARSHIPS,\r\n    LOG_OUT,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n    loading: true,\r\n    scholarshipsAdmin: null,\r\n};\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_ADMIN_SCHOLARSHIPS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                scholarshipsAdmin: payload,\r\n            };\r\n        case ERROR_ADMIN_SCHOLARSHIPS:\r\n        case LOG_OUT:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                scholarshipsAdmin: null,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\scholarshipsAdmin.js",["416"],"import {\r\n  GET_ADMIN_SCHOLARSHIPS,\r\n  GET_ADMIN_ALL_SCHOLARSHIPS,\r\n  ERROR_ADMIN_SCHOLARSHIPS,\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\n\r\n//Get all the scholarships\r\nexport const getScholarshipsAdmin = (reportId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/scholarshipsAdmin/${reportId}`);\r\n    dispatch({\r\n      type: GET_ADMIN_SCHOLARSHIPS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ERROR_ADMIN_SCHOLARSHIPS,\r\n    });\r\n  }\r\n};\r\n//Get all the scholarships\r\nexport const getAllScholarshipsAdmin = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/scholarshipsAdmin`);\r\n    dispatch({\r\n      type: GET_ADMIN_ALL_SCHOLARSHIPS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ERROR_ADMIN_SCHOLARSHIPS,\r\n    });\r\n  }\r\n};\r\n//Delete previous report data\r\nexport const deleteReportData = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ERROR_ADMIN_SCHOLARSHIPS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ERROR_ADMIN_SCHOLARSHIPS,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\StudentReportsAdmin.jsx",["417","418"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getScholarshipsAdmin,\r\n  deleteReportData,\r\n} from \"../../actions/scholarshipsAdmin\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nfunction StudentReportsAdmin({\r\n  imgTop,\r\n  changeReportPopClose,\r\n  reportId,\r\n  getScholarshipsAdmin,\r\n  scholarshipsAdmin,\r\n  deleteReportData,\r\n}) {\r\n  const [reportImg, setReportImg] = useState();\r\n  const [reportImgType, setReportImgType] = useState();\r\n  const [imagePopReport, setImagePopReport] = useState(\"hidden\");\r\n  const changeImageReport = () => {\r\n    if (imagePopReport === \"hidden\") {\r\n      setImagePopReport(\" \");\r\n    } else {\r\n      setImagePopReport(\"hidden\");\r\n    }\r\n  };\r\n  const displayImgData = () => {\r\n    if (reportImg != null && reportImgType != null) {\r\n      return `data: ${reportImgType};charset=utf-8;base64,${Buffer.from(\r\n        reportImg\r\n      ).toString(\"base64\")}`;\r\n    }\r\n  };\r\n  const displayImgReport = (img, imgType) => {\r\n    setReportImgType(imgType);\r\n    setReportImg(img);\r\n  };\r\n  const closeReportWindow = () => {\r\n    deleteReportData();\r\n    changeReportPopClose();\r\n  };\r\n  useEffect(() => {\r\n    getScholarshipsAdmin(reportId);\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{ top: imgTop }}\r\n      className={`w-3/4 h-1/2 bg-white  fixed centerHorizontal usm:h-1/3 border`}\r\n    >\r\n      <div className=\"w-full h-4/5 relative overflow-y-auto\">\r\n        <table className=\"w-full h-auto\">\r\n          <thead className=\"w-full\">\r\n            <tr\r\n              className=\"\r\n                text-md\r\n                font-semibold\r\n                tracking-wide\r\n                text-left text-gray-900\r\n                bg-gray-100\r\n                uppercase\r\n                border-b border-gray-600\r\n                w-full\r\n              \"\r\n            >\r\n              <th className=\"px-4 py-3 w-full\">Level</th>\r\n              <th className=\"px-4 py-3 w-full\">Grade</th>\r\n              <th className=\"px-4 py-3 w-full\">Date Exam</th>\r\n              <th className=\"px-4 py-3 w-full\">Date Result</th>\r\n              <th className=\"px-4 py-3 w-full\">Exam</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"bg-white w-full h-auto\">\r\n            {scholarshipsAdmin.scholarshipsAdmin !== null ? (\r\n              scholarshipsAdmin.scholarshipsAdmin[0].reports.length > 0 ? (\r\n                scholarshipsAdmin.scholarshipsAdmin.map((scho) =>\r\n                  scho.reports.map((report) => (\r\n                    <tr className=\"text-gray-700 w-full h-10\">\r\n                      <td className=\"px-4 py-3 border\">\r\n                        <div className=\"flex items-center text-sm\">\r\n                          <div>\r\n                            <p className=\"font-semibold text-black\">\r\n                              {report.level}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n\r\n                      <td className=\"px-4 py-3 text-ms font-semibold border\">\r\n                        {report.grades}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-sm border\">\r\n                        {report.dateOfExam}\r\n                      </td>\r\n                      <td className=\"px-4 py-3 text-ms font-semibold border\">\r\n                        {report.dateOfResult}\r\n                      </td>\r\n                      <td\r\n                        className=\"px-4 py-3 border cursor-pointer\"\r\n                        onClick={() => {\r\n                          displayImgReport(report.examImg, report.examImgType);\r\n                          changeImageReport();\r\n                        }}\r\n                      >\r\n                        <div className=\"flex items-center text-sm\">\r\n                          <div>\r\n                            <p className=\"font-semibold text-black\">Exam</p>\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                )\r\n              ) : (\r\n                \"No records yet\"\r\n              )\r\n            ) : (\r\n              <Spinner />\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div\r\n        className=\"\r\n          w-full\r\n          h-1/5\r\n          flex\r\n          items-center\r\n          justify-center\r\n          md:gap-8\r\n          gap-4\r\n          pt-5\r\n          pb-5\r\n        \"\r\n      >\r\n        <button\r\n          className=\"\r\n            w-auto\r\n            bg-red-400\r\n            hover:bg-red-200\r\n            rounded-lg\r\n            shadow-xl\r\n            font-medium\r\n            text-white\r\n            px-4\r\n            py-2\r\n          \"\r\n          type=\"button\"\r\n          onClick={() => closeReportWindow()}\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n      {/* handle images */}\r\n      <div\r\n        style={{ top: imgTop }}\r\n        className={`w-1/2 h-full bg-white fixed centerHorizontal usm:h-1/3 border ${imagePopReport}`}\r\n      >\r\n        <div className=\"w-full h-full relative\">\r\n          <img\r\n            src={reportImg !== null ? displayImgData() : \" \"}\r\n            className=\"w-full h-full bg-cover\"\r\n          />\r\n          <button\r\n            className=\"w-10 h-10 absolute top-0 right-0 text-4xl text-gray-400\"\r\n            onClick={() => changeImageReport()}\r\n            type=\"button\"\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nStudentReportsAdmin.propTypes = {\r\n  imgTop: PropTypes.number.isRequired,\r\n  reportId: PropTypes.string.isRequired,\r\n  changeReportPopClose: PropTypes.func.isRequired,\r\n  getScholarshipsAdmin: PropTypes.func.isRequired,\r\n  deleteReportData: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  scholarshipsAdmin: state.scholarshipsAdmin,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getScholarshipsAdmin,\r\n  deleteReportData,\r\n})(StudentReportsAdmin);\r\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\Components\\layout\\StudentsInfoAdmin.jsx",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\payments.js",["419"],"import {\r\n  CREATE_PAYMENT,\r\n  GET_PAYMENTS,\r\n  ERROR_PAYMENTS,\r\n  LOG_OUT,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  loading: true,\r\n  payments: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CREATE_PAYMENT:\r\n    case GET_PAYMENTS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        payments: payload,\r\n      };\r\n    case ERROR_PAYMENTS:\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        payments: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\scholarshipsInfo.js",["420"],"import {\r\n  GET_ADMIN_ALL_SCHOLARSHIPS,\r\n  ERROR_ADMIN_ALL_SCHOLARSHIPS,\r\n  LOG_OUT,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  loading: true,\r\n  scholarshipsInfo: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_ADMIN_ALL_SCHOLARSHIPS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scholarshipsInfo: payload,\r\n      };\r\n    case ERROR_ADMIN_ALL_SCHOLARSHIPS:\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        scholarshipsInfo: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\payments.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\fullScho.js",["421"],"import {\r\n  GET_FULL_SCHO,\r\n  ERROR_FULL_SCHO,\r\n  LOG_OUT,\r\n  UPDATE_FULL_SCHO,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  loading: true,\r\n  fullScho: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_FULL_SCHO:\r\n    case UPDATE_FULL_SCHO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        fullScho: payload,\r\n      };\r\n    case ERROR_FULL_SCHO:\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        fullScho: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\fullScho.js",[],"C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\reducers\\options.js",["422"],"import {\r\n  CREATE_OPTIONS,\r\n  GET_OPTIONS,\r\n  ERROR_OPTIONS,\r\n  LOG_OUT,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  loading: true,\r\n  options: null,\r\n};\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CREATE_OPTIONS:\r\n    case GET_OPTIONS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        options: payload,\r\n      };\r\n    case ERROR_OPTIONS:\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        options: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\basssh14\\Documents\\schoolarship\\production\\mern-boilerplate\\client\\src\\actions\\options.js",[],{"ruleId":"423","replacedBy":"424"},{"ruleId":"425","replacedBy":"426"},{"ruleId":"427","severity":1,"message":"428","line":23,"column":7,"nodeType":"429","messageId":"430","endLine":23,"endColumn":22},{"ruleId":"427","severity":1,"message":"431","line":2,"column":10,"nodeType":"429","messageId":"430","endLine":2,"endColumn":14},{"ruleId":"427","severity":1,"message":"432","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":15},{"ruleId":"427","severity":1,"message":"433","line":4,"column":8,"nodeType":"429","messageId":"430","endLine":4,"endColumn":13},{"ruleId":"427","severity":1,"message":"431","line":8,"column":10,"nodeType":"429","messageId":"430","endLine":8,"endColumn":14},{"ruleId":"427","severity":1,"message":"434","line":33,"column":21,"nodeType":"429","messageId":"430","endLine":33,"endColumn":33},{"ruleId":"427","severity":1,"message":"435","line":34,"column":20,"nodeType":"429","messageId":"430","endLine":34,"endColumn":31},{"ruleId":"427","severity":1,"message":"436","line":35,"column":22,"nodeType":"429","messageId":"430","endLine":35,"endColumn":35},{"ruleId":"427","severity":1,"message":"437","line":36,"column":20,"nodeType":"429","messageId":"430","endLine":36,"endColumn":31},{"ruleId":"427","severity":1,"message":"438","line":37,"column":22,"nodeType":"429","messageId":"430","endLine":37,"endColumn":35},{"ruleId":"427","severity":1,"message":"439","line":38,"column":22,"nodeType":"429","messageId":"430","endLine":38,"endColumn":35},{"ruleId":"427","severity":1,"message":"440","line":39,"column":17,"nodeType":"429","messageId":"430","endLine":39,"endColumn":25},{"ruleId":"427","severity":1,"message":"441","line":41,"column":10,"nodeType":"429","messageId":"430","endLine":41,"endColumn":21},{"ruleId":"427","severity":1,"message":"442","line":41,"column":23,"nodeType":"429","messageId":"430","endLine":41,"endColumn":37},{"ruleId":"427","severity":1,"message":"443","line":52,"column":10,"nodeType":"429","messageId":"430","endLine":52,"endColumn":19},{"ruleId":"427","severity":1,"message":"444","line":53,"column":10,"nodeType":"429","messageId":"430","endLine":53,"endColumn":21},{"ruleId":"427","severity":1,"message":"445","line":54,"column":10,"nodeType":"429","messageId":"430","endLine":54,"endColumn":20},{"ruleId":"427","severity":1,"message":"446","line":55,"column":9,"nodeType":"429","messageId":"430","endLine":55,"endColumn":17},{"ruleId":"427","severity":1,"message":"447","line":59,"column":9,"nodeType":"429","messageId":"430","endLine":59,"endColumn":21},{"ruleId":"427","severity":1,"message":"448","line":60,"column":9,"nodeType":"429","messageId":"430","endLine":60,"endColumn":23},{"ruleId":"427","severity":1,"message":"449","line":61,"column":9,"nodeType":"429","messageId":"430","endLine":61,"endColumn":22},{"ruleId":"427","severity":1,"message":"450","line":119,"column":9,"nodeType":"429","messageId":"430","endLine":119,"endColumn":23},{"ruleId":"451","severity":1,"message":"452","line":127,"column":44,"nodeType":"453","messageId":"454","endLine":127,"endColumn":63,"fix":"455"},{"ruleId":"456","severity":1,"message":"457","line":163,"column":6,"nodeType":"458","endLine":163,"endColumn":8,"suggestions":"459"},{"ruleId":"427","severity":1,"message":"431","line":2,"column":10,"nodeType":"429","messageId":"430","endLine":2,"endColumn":14},{"ruleId":"427","severity":1,"message":"460","line":29,"column":24,"nodeType":"429","messageId":"430","endLine":29,"endColumn":39},{"ruleId":"427","severity":1,"message":"461","line":30,"column":10,"nodeType":"429","messageId":"430","endLine":30,"endColumn":17},{"ruleId":"427","severity":1,"message":"462","line":30,"column":19,"nodeType":"429","messageId":"430","endLine":30,"endColumn":29},{"ruleId":"427","severity":1,"message":"463","line":31,"column":10,"nodeType":"429","messageId":"430","endLine":31,"endColumn":18},{"ruleId":"427","severity":1,"message":"464","line":31,"column":20,"nodeType":"429","messageId":"430","endLine":31,"endColumn":31},{"ruleId":"427","severity":1,"message":"465","line":56,"column":9,"nodeType":"429","messageId":"430","endLine":56,"endColumn":27},{"ruleId":"451","severity":1,"message":"466","line":57,"column":32,"nodeType":"453","messageId":"454","endLine":57,"endColumn":64,"fix":"467"},{"ruleId":"451","severity":1,"message":"452","line":60,"column":38,"nodeType":"453","messageId":"454","endLine":60,"endColumn":57,"fix":"468"},{"ruleId":"456","severity":1,"message":"469","line":109,"column":6,"nodeType":"458","endLine":109,"endColumn":8,"suggestions":"470"},{"ruleId":"427","severity":1,"message":"471","line":2,"column":8,"nodeType":"429","messageId":"430","endLine":2,"endColumn":17},{"ruleId":"427","severity":1,"message":"472","line":21,"column":8,"nodeType":"429","messageId":"430","endLine":21,"endColumn":17},{"ruleId":"427","severity":1,"message":"434","line":28,"column":21,"nodeType":"429","messageId":"430","endLine":28,"endColumn":33},{"ruleId":"427","severity":1,"message":"435","line":29,"column":20,"nodeType":"429","messageId":"430","endLine":29,"endColumn":31},{"ruleId":"427","severity":1,"message":"473","line":30,"column":24,"nodeType":"429","messageId":"430","endLine":30,"endColumn":39},{"ruleId":"427","severity":1,"message":"474","line":76,"column":9,"nodeType":"429","messageId":"430","endLine":76,"endColumn":27},{"ruleId":"451","severity":1,"message":"452","line":82,"column":36,"nodeType":"453","messageId":"454","endLine":82,"endColumn":55,"fix":"475"},{"ruleId":"456","severity":1,"message":"476","line":110,"column":6,"nodeType":"458","endLine":110,"endColumn":8,"suggestions":"477"},{"ruleId":"427","severity":1,"message":"428","line":290,"column":7,"nodeType":"429","messageId":"430","endLine":290,"endColumn":22},{"ruleId":"427","severity":1,"message":"478","line":51,"column":9,"nodeType":"429","messageId":"430","endLine":51,"endColumn":26},{"ruleId":"427","severity":1,"message":"479","line":68,"column":9,"nodeType":"429","messageId":"430","endLine":68,"endColumn":34},{"ruleId":"456","severity":1,"message":"480","line":78,"column":6,"nodeType":"458","endLine":78,"endColumn":8,"suggestions":"481"},{"ruleId":"427","severity":1,"message":"482","line":45,"column":24,"nodeType":"429","messageId":"430","endLine":45,"endColumn":39},{"ruleId":"427","severity":1,"message":"483","line":46,"column":18,"nodeType":"429","messageId":"430","endLine":46,"endColumn":27},{"ruleId":"427","severity":1,"message":"484","line":88,"column":9,"nodeType":"429","messageId":"430","endLine":88,"endColumn":22},{"ruleId":"427","severity":1,"message":"485","line":91,"column":9,"nodeType":"429","messageId":"430","endLine":91,"endColumn":25},{"ruleId":"427","severity":1,"message":"486","line":94,"column":9,"nodeType":"429","messageId":"430","endLine":94,"endColumn":25},{"ruleId":"427","severity":1,"message":"487","line":97,"column":9,"nodeType":"429","messageId":"430","endLine":97,"endColumn":25},{"ruleId":"451","severity":1,"message":"452","line":101,"column":40,"nodeType":"453","messageId":"454","endLine":101,"endColumn":59,"fix":"488"},{"ruleId":"456","severity":1,"message":"489","line":170,"column":6,"nodeType":"458","endLine":170,"endColumn":8,"suggestions":"490"},{"ruleId":"427","severity":1,"message":"471","line":2,"column":8,"nodeType":"429","messageId":"430","endLine":2,"endColumn":17},{"ruleId":"427","severity":1,"message":"491","line":96,"column":10,"nodeType":"429","messageId":"430","endLine":96,"endColumn":17},{"ruleId":"427","severity":1,"message":"492","line":96,"column":19,"nodeType":"429","messageId":"430","endLine":96,"endColumn":29},{"ruleId":"427","severity":1,"message":"493","line":250,"column":9,"nodeType":"429","messageId":"430","endLine":250,"endColumn":22},{"ruleId":"427","severity":1,"message":"494","line":253,"column":9,"nodeType":"429","messageId":"430","endLine":253,"endColumn":22},{"ruleId":"427","severity":1,"message":"495","line":256,"column":9,"nodeType":"429","messageId":"430","endLine":256,"endColumn":22},{"ruleId":"427","severity":1,"message":"496","line":259,"column":9,"nodeType":"429","messageId":"430","endLine":259,"endColumn":22},{"ruleId":"456","severity":1,"message":"497","line":593,"column":6,"nodeType":"458","endLine":593,"endColumn":8,"suggestions":"498"},{"ruleId":"499","severity":1,"message":"500","line":2720,"column":13,"nodeType":"501","endLine":2723,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2738,"column":13,"nodeType":"501","endLine":2741,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2756,"column":13,"nodeType":"501","endLine":2759,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2774,"column":13,"nodeType":"501","endLine":2777,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2792,"column":13,"nodeType":"501","endLine":2795,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2810,"column":13,"nodeType":"501","endLine":2813,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2828,"column":13,"nodeType":"501","endLine":2831,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2846,"column":13,"nodeType":"501","endLine":2849,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2864,"column":13,"nodeType":"501","endLine":2867,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2882,"column":13,"nodeType":"501","endLine":2885,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2900,"column":13,"nodeType":"501","endLine":2903,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2918,"column":13,"nodeType":"501","endLine":2921,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2936,"column":13,"nodeType":"501","endLine":2939,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2954,"column":13,"nodeType":"501","endLine":2957,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2972,"column":13,"nodeType":"501","endLine":2975,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":2990,"column":13,"nodeType":"501","endLine":2993,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":3008,"column":13,"nodeType":"501","endLine":3011,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":3026,"column":13,"nodeType":"501","endLine":3029,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":3044,"column":13,"nodeType":"501","endLine":3047,"endColumn":15},{"ruleId":"499","severity":1,"message":"500","line":3062,"column":13,"nodeType":"501","endLine":3065,"endColumn":15},{"ruleId":"427","severity":1,"message":"432","line":3,"column":8,"nodeType":"429","messageId":"430","endLine":3,"endColumn":15},{"ruleId":"427","severity":1,"message":"428","line":135,"column":7,"nodeType":"429","messageId":"430","endLine":135,"endColumn":22},{"ruleId":"427","severity":1,"message":"502","line":1,"column":27,"nodeType":"429","messageId":"430","endLine":1,"endColumn":35},{"ruleId":"456","severity":1,"message":"503","line":20,"column":6,"nodeType":"458","endLine":20,"endColumn":8,"suggestions":"504"},{"ruleId":"427","severity":1,"message":"505","line":11,"column":8,"nodeType":"429","messageId":"430","endLine":11,"endColumn":16},{"ruleId":"456","severity":1,"message":"506","line":88,"column":6,"nodeType":"458","endLine":88,"endColumn":8,"suggestions":"507"},{"ruleId":"427","severity":1,"message":"508","line":96,"column":15,"nodeType":"429","messageId":"430","endLine":96,"endColumn":18},{"ruleId":"427","severity":1,"message":"508","line":121,"column":15,"nodeType":"429","messageId":"430","endLine":121,"endColumn":18},{"ruleId":"427","severity":1,"message":"508","line":146,"column":15,"nodeType":"429","messageId":"430","endLine":146,"endColumn":18},{"ruleId":"427","severity":1,"message":"509","line":1,"column":37,"nodeType":"429","messageId":"430","endLine":1,"endColumn":46},{"ruleId":"427","severity":1,"message":"471","line":2,"column":8,"nodeType":"429","messageId":"430","endLine":2,"endColumn":17},{"ruleId":"427","severity":1,"message":"509","line":1,"column":37,"nodeType":"429","messageId":"430","endLine":1,"endColumn":46},{"ruleId":"427","severity":1,"message":"510","line":1,"column":48,"nodeType":"429","messageId":"430","endLine":1,"endColumn":56},{"ruleId":"427","severity":1,"message":"433","line":5,"column":8,"nodeType":"429","messageId":"430","endLine":5,"endColumn":13},{"ruleId":"427","severity":1,"message":"511","line":7,"column":8,"nodeType":"429","messageId":"430","endLine":7,"endColumn":18},{"ruleId":"427","severity":1,"message":"431","line":8,"column":10,"nodeType":"429","messageId":"430","endLine":8,"endColumn":14},{"ruleId":"427","severity":1,"message":"434","line":33,"column":21,"nodeType":"429","messageId":"430","endLine":33,"endColumn":33},{"ruleId":"427","severity":1,"message":"435","line":34,"column":20,"nodeType":"429","messageId":"430","endLine":34,"endColumn":31},{"ruleId":"427","severity":1,"message":"436","line":35,"column":22,"nodeType":"429","messageId":"430","endLine":35,"endColumn":35},{"ruleId":"427","severity":1,"message":"437","line":36,"column":20,"nodeType":"429","messageId":"430","endLine":36,"endColumn":31},{"ruleId":"427","severity":1,"message":"438","line":37,"column":22,"nodeType":"429","messageId":"430","endLine":37,"endColumn":35},{"ruleId":"427","severity":1,"message":"439","line":38,"column":22,"nodeType":"429","messageId":"430","endLine":38,"endColumn":35},{"ruleId":"427","severity":1,"message":"440","line":39,"column":17,"nodeType":"429","messageId":"430","endLine":39,"endColumn":25},{"ruleId":"427","severity":1,"message":"441","line":43,"column":10,"nodeType":"429","messageId":"430","endLine":43,"endColumn":21},{"ruleId":"427","severity":1,"message":"442","line":43,"column":23,"nodeType":"429","messageId":"430","endLine":43,"endColumn":37},{"ruleId":"427","severity":1,"message":"512","line":44,"column":23,"nodeType":"429","messageId":"430","endLine":44,"endColumn":37},{"ruleId":"427","severity":1,"message":"443","line":45,"column":10,"nodeType":"429","messageId":"430","endLine":45,"endColumn":19},{"ruleId":"427","severity":1,"message":"444","line":46,"column":10,"nodeType":"429","messageId":"430","endLine":46,"endColumn":21},{"ruleId":"427","severity":1,"message":"445","line":47,"column":10,"nodeType":"429","messageId":"430","endLine":47,"endColumn":20},{"ruleId":"427","severity":1,"message":"447","line":48,"column":9,"nodeType":"429","messageId":"430","endLine":48,"endColumn":21},{"ruleId":"427","severity":1,"message":"448","line":49,"column":9,"nodeType":"429","messageId":"430","endLine":49,"endColumn":23},{"ruleId":"427","severity":1,"message":"449","line":50,"column":9,"nodeType":"429","messageId":"430","endLine":50,"endColumn":22},{"ruleId":"499","severity":1,"message":"500","line":907,"column":15,"nodeType":"501","endLine":910,"endColumn":17},{"ruleId":"499","severity":1,"message":"500","line":925,"column":15,"nodeType":"501","endLine":928,"endColumn":17},{"ruleId":"499","severity":1,"message":"500","line":943,"column":15,"nodeType":"501","endLine":946,"endColumn":17},{"ruleId":"499","severity":1,"message":"500","line":961,"column":15,"nodeType":"501","endLine":964,"endColumn":17},{"ruleId":"499","severity":1,"message":"500","line":979,"column":15,"nodeType":"501","endLine":982,"endColumn":17},{"ruleId":"499","severity":1,"message":"500","line":997,"column":15,"nodeType":"501","endLine":1000,"endColumn":17},{"ruleId":"499","severity":1,"message":"500","line":1015,"column":15,"nodeType":"501","endLine":1018,"endColumn":17},{"ruleId":"427","severity":1,"message":"509","line":1,"column":37,"nodeType":"429","messageId":"430","endLine":1,"endColumn":46},{"ruleId":"427","severity":1,"message":"460","line":33,"column":24,"nodeType":"429","messageId":"430","endLine":33,"endColumn":39},{"ruleId":"427","severity":1,"message":"509","line":1,"column":37,"nodeType":"429","messageId":"430","endLine":1,"endColumn":46},{"ruleId":"427","severity":1,"message":"513","line":12,"column":10,"nodeType":"429","messageId":"430","endLine":12,"endColumn":19},{"ruleId":"427","severity":1,"message":"514","line":12,"column":21,"nodeType":"429","messageId":"430","endLine":12,"endColumn":33},{"ruleId":"427","severity":1,"message":"515","line":21,"column":9,"nodeType":"429","messageId":"430","endLine":21,"endColumn":23},{"ruleId":"427","severity":1,"message":"482","line":43,"column":24,"nodeType":"429","messageId":"430","endLine":43,"endColumn":39},{"ruleId":"427","severity":1,"message":"483","line":44,"column":18,"nodeType":"429","messageId":"430","endLine":44,"endColumn":27},{"ruleId":"427","severity":1,"message":"516","line":45,"column":21,"nodeType":"429","messageId":"430","endLine":45,"endColumn":33},{"ruleId":"427","severity":1,"message":"434","line":27,"column":21,"nodeType":"429","messageId":"430","endLine":27,"endColumn":33},{"ruleId":"427","severity":1,"message":"435","line":28,"column":20,"nodeType":"429","messageId":"430","endLine":28,"endColumn":31},{"ruleId":"427","severity":1,"message":"473","line":29,"column":24,"nodeType":"429","messageId":"430","endLine":29,"endColumn":39},{"ruleId":"517","severity":1,"message":"518","line":627,"column":13,"nodeType":"501","endLine":631,"endColumn":15},{"ruleId":"519","severity":1,"message":"520","line":18,"column":1,"nodeType":"521","endLine":54,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":4,"column":1,"nodeType":"521","endLine":14,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":12,"column":1,"nodeType":"521","endLine":34,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":18,"column":1,"nodeType":"521","endLine":45,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":12,"column":1,"nodeType":"521","endLine":33,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":13,"column":1,"nodeType":"521","endLine":35,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":10,"column":1,"nodeType":"521","endLine":29,"endColumn":2},{"ruleId":"427","severity":1,"message":"522","line":6,"column":10,"nodeType":"429","messageId":"430","endLine":6,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":10,"column":1,"nodeType":"521","endLine":29,"endColumn":2},{"ruleId":"427","severity":1,"message":"522","line":7,"column":10,"nodeType":"429","messageId":"430","endLine":7,"endColumn":18},{"ruleId":"456","severity":1,"message":"523","line":45,"column":6,"nodeType":"458","endLine":45,"endColumn":8,"suggestions":"524"},{"ruleId":"499","severity":1,"message":"500","line":160,"column":11,"nodeType":"501","endLine":163,"endColumn":13},{"ruleId":"519","severity":1,"message":"520","line":11,"column":1,"nodeType":"521","endLine":31,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":10,"column":1,"nodeType":"521","endLine":29,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":11,"column":1,"nodeType":"521","endLine":31,"endColumn":2},{"ruleId":"519","severity":1,"message":"520","line":11,"column":1,"nodeType":"521","endLine":31,"endColumn":2},"no-native-reassign",["525"],"no-negated-in-lhs",["526"],"no-unused-vars","'mapStateToProps' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Spinner' is defined but never used.","'axios' is defined but never used.","'setCnciFront' is assigned a value but never used.","'setCnicBack' is assigned a value but never used.","'setSalarySlip' is assigned a value but never used.","'setQualiDoc' is assigned a value but never used.","'setUtilityOne' is assigned a value but never used.","'setUtilitySec' is assigned a value but never used.","'setFormB' is assigned a value but never used.","'userParents' is assigned a value but never used.","'setUserParents' is assigned a value but never used.","'cnicPhoto' is assigned a value but never used.","'salaryPhoto' is assigned a value but never used.","'qualiPhoto' is assigned a value but never used.","'onChange' is assigned a value but never used.","'onChangeCnic' is assigned a value but never used.","'onChangeSalary' is assigned a value but never used.","'onChangeQuali' is assigned a value but never used.","'changeImagePop' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property [\"id\"] found.","Property","unnecessarilyComputedProperty",{"range":"527","text":"528"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getParents'. Either include it or remove the dependency array. If 'getParents' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["529"],"'setCheckImgFile' is assigned a value but never used.","'bankPop' is assigned a value but never used.","'setBankPop' is assigned a value but never used.","'imagePop' is assigned a value but never used.","'setImagePop' is assigned a value but never used.","'changeToProcessImg' is assigned a value but never used.","Unnecessarily computed property [\"toProcessImg\"] found.",{"range":"530","text":"531"},{"range":"532","text":"528"},"React Hook useEffect has missing dependencies: 'getBanks' and 'getOptions'. Either include them or remove the dependency array. If 'getBanks' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["533"],"'PropTypes' is defined but never used.","'BankPopUp' is defined but never used.","'setStudentPhoto' is assigned a value but never used.","'changeApplicantPop' is assigned a value but never used.",{"range":"534","text":"528"},"React Hook useEffect has a missing dependency: 'getApplicants'. Either include it or remove the dependency array. If 'getApplicants' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["535"],"'changePaymentsPop' is assigned a value but never used.","'changeStudentInfoPopClose' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStudents'. Either include it or remove the dependency array. If 'getStudents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["536"],"'setAdminReceipt' is assigned a value but never used.","'setCardId' is assigned a value but never used.","'changeSchoPop' is assigned a value but never used.","'changeImageCnPop' is assigned a value but never used.","'changeImageStPop' is assigned a value but never used.","'changeImageIdPop' is assigned a value but never used.",{"range":"537","text":"528"},"React Hook useEffect has missing dependencies: 'getApplicants', 'getBanks', 'getOptions', 'getParents', and 'getScholarships'. Either include them or remove the dependency array. If 'getApplicants' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"'cnPhoto' is assigned a value but never used.","'setCnPhoto' is assigned a value but never used.","'changeStPhoto' is assigned a value but never used.","'changePrPhoto' is assigned a value but never used.","'changeIdPhoto' is assigned a value but never used.","'changeBkPhoto' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFullScho'. Either include it or remove the dependency array. If 'getFullScho' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["539"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getPayments'. Either include it or remove the dependency array. If 'getPayments' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["540"],"'Students' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllScholarshipsAdmin'. Either include it or remove the dependency array. If 'getAllScholarshipsAdmin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["541"],"'res' is assigned a value but never used.","'useEffect' is defined but never used.","'Profiler' is defined but never used.","'HeaderUser' is defined but never used.","'setStartParent' is assigned a value but never used.","'htmlWidth' is assigned a value but never used.","'setHtmlWidth' is assigned a value but never used.","'redirectToMain' is assigned a value but never used.","'setReportImg' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'setAlert' is defined but never used.","React Hook useEffect has missing dependencies: 'getScholarshipsAdmin' and 'reportId'. Either include them or remove the dependency array. If 'getScholarshipsAdmin' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["542"],"no-global-assign","no-unsafe-negation",[4192,4198],"\"id\"",{"desc":"543","fix":"544"},[1972,1988],"\"toProcessImg\"",[2088,2094],{"desc":"545","fix":"546"},[2694,2700],{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},[3362,3368],{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},"Update the dependencies array to be: [getParents]",{"range":"561","text":"562"},"Update the dependencies array to be: [getBanks, getOptions]",{"range":"563","text":"564"},"Update the dependencies array to be: [getApplicants]",{"range":"565","text":"566"},"Update the dependencies array to be: [getStudents]",{"range":"567","text":"568"},"Update the dependencies array to be: [getApplicants, getBanks, getOptions, getParents, getScholarships]",{"range":"569","text":"570"},"Update the dependencies array to be: [getFullScho]",{"range":"571","text":"572"},"Update the dependencies array to be: [getPayments]",{"range":"573","text":"574"},"Update the dependencies array to be: [getAllScholarshipsAdmin]",{"range":"575","text":"576"},"Update the dependencies array to be: [getScholarshipsAdmin, reportId]",{"range":"577","text":"578"},[5389,5391],"[getParents]",[3583,3585],"[getBanks, getOptions]",[3540,3542],"[getApplicants]",[2760,2762],"[getStudents]",[5630,5632],"[getApplicants, getBanks, getOptions, getParents, getScholarships]",[18736,18738],"[getFullScho]",[624,626],"[getPayments]",[2611,2613],"[getAllScholarshipsAdmin]",[1260,1262],"[getScholarshipsAdmin, reportId]"]